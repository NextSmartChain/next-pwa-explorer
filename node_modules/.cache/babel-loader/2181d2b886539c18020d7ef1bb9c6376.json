{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/HomeBlockList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/HomeBlockList.vue","mtime":1657708591430},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL21udC93ZWJzaXRlcy9leC5uZXh0c21hcnRjaGFpbi5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbC5qcyI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIi9tbnQvd2Vic2l0ZXMvZXgubmV4dHNtYXJ0Y2hhaW4uY29tL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL21udC93ZWJzaXRlcy9leC5uZXh0c21hcnRjaGFpbi5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvbW50L3dlYnNpdGVzL2V4Lm5leHRzbWFydGNoYWluLmNvbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7Cgp2YXIgX3RlbXBsYXRlT2JqZWN0OwoKaW1wb3J0IEZCbG9ja0xpc3QgZnJvbSAiQC9kYXRhLXRhYmxlcy9GQmxvY2tMaXN0LnZ1ZSI7CmltcG9ydCBGRGF0YVRhYmxlIGZyb20gIkAvY29tcG9uZW50cy9jb3JlL0ZEYXRhVGFibGUvRkRhdGFUYWJsZS52dWUiOwppbXBvcnQgeyBXRUlUb0ZUTSB9IGZyb20gIkAvdXRpbHMvdHJhbnNhY3Rpb25zLmpzIjsKaW1wb3J0IHsgdGltZXN0YW1wVG9EYXRlIH0gZnJvbSAiQC9maWx0ZXJzLmpzIjsKaW1wb3J0IGdxbCBmcm9tICJncmFwaHFsLXRhZyI7CmltcG9ydCB7IGNsb25lT2JqZWN0IH0gZnJvbSAiQC91dGlscyI7CmltcG9ydCB7IHBvbGxpbmdNaXhpbiB9IGZyb20gIkAvbWl4aW5zL3BvbGxpbmcuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWVCbG9ja0xpc3QiLAogIG1peGluczogW3BvbGxpbmdNaXhpbl0sCiAgY29tcG9uZW50czogewogICAgRkRhdGFUYWJsZTogRkRhdGFUYWJsZQogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQoe30sIEZCbG9ja0xpc3QucHJvcHMpLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBGQmxvY2tMaXN0LmRhdGEuY2FsbCh0aGlzKSksIHt9LCB7CiAgICAgIHNob3c6IHRydWUKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNMb2FkaW5nOiBmdW5jdGlvbiBjTG9hZGluZygpIHsKICAgICAgcmV0dXJuIHRoaXMuZEl0ZW1zLmxlbmd0aCA9PT0gMDsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnVwZGF0ZUl0ZW1zKCk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLl9wb2xsaW5nLnN0YXJ0KCd1cGRhdGUtYmxvY2tzJywgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy51cGRhdGVJdGVtcyh0cnVlKTsKICAgIH0sIDMzMDApOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlSXRlbXM6IGZ1bmN0aW9uIHVwZGF0ZUl0ZW1zKF9hbmltYXRlKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuZmV0Y2hEYXRhKCk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF90aGlzMi5kSXRlbXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChfYW5pbWF0ZSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuc2hvdyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgICAgX3RoaXMyLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLnNob3cgPSB0cnVlOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEFycmF5Pn0KICAgICAqLwogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGRhdGE7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBncWwoX3RlbXBsYXRlT2JqZWN0IHx8IChfdGVtcGxhdGVPYmplY3QgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5IEJsb2NrTGlzdCgkY3Vyc29yOiBDdXJzb3IsICRjb3VudDogSW50ISkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2tzIChjdXJzb3I6ICRjdXJzb3IsIGNvdW50OiAkY291bnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3RhbENvdW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZUluZm8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaXJzdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc05leHRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzUHJldmlvdXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRnZXMge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9jayB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVzdGFtcFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25Db3VudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2FzVXNlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICJdKSkpLAogICAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IG51bGwsCiAgICAgICAgICAgICAgICAgICAgY291bnQ6IF90aGlzMy5pdGVtc1BlclBhZ2UKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZmV0Y2hQb2xpY3k6ICduZXR3b3JrLW9ubHknCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGNsb25lT2JqZWN0KGRhdGEuZGF0YSAmJiBkYXRhLmRhdGEuYmxvY2tzICYmIGRhdGEuZGF0YS5ibG9ja3MuZWRnZXMgPyBkYXRhLmRhdGEuYmxvY2tzLmVkZ2VzIDogW10pKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgV0VJVG9GVE06IFdFSVRvRlRNLAogICAgdGltZXN0YW1wVG9EYXRlOiB0aW1lc3RhbXBUb0RhdGUKICB9Cn07"},{"version":3,"mappings":";;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA,qBADA;EAGAC,sBAHA;EAKAC;IAAAC;EAAA,CALA;EAOAC,yBACAC,gBADA,CAPA;EAWAC,IAXA,kBAWA;IACA,uCACAD,0BADA;MAEAE;IAFA;EAIA,CAhBA;EAkBAC;IACAC,QADA,sBACA;MACA;IACA;EAHA,CAlBA;EAwBAC,OAxBA,qBAwBA;IACA;EACA,CA1BA;EA4BAC,OA5BA,qBA4BA;IAAA;;IACA,oBACA,eADA,EAEA;MACA;IACA,CAJA,EAKA,IALA;EAOA,CApCA;EAsCAC;IACAC,WADA,uBACAC,QADA,EACA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA,kBADA;;cAAA;gBACA,aADA;;gBAGA;kBACA;;kBAEA;oBAAA;kBAAA;gBACA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CATA;;IAWA;AACA;AACA;IACAC,SAdA,uBAcA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAC,88BADA;kBAwBAC;oBACAC,YADA;oBAEAC;kBAFA,CAxBA;kBA4BAC;gBA5BA,EADA;;cAAA;gBACAd,IADA;gBAAA,kCAgCAe,kGAhCA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAiCA,CA/CA;IAiDAC,kBAjDA;IAkDAC;EAlDA;AAtCA","names":["name","mixins","components","FDataTable","props","FBlockList","data","show","computed","cLoading","created","mounted","methods","updateItems","_animate","fetchData","query","variables","cursor","count","fetchPolicy","cloneObject","WEIToFTM","timestampToDate"],"sourceRoot":"src/data-tables","sources":["HomeBlockList.vue"],"sourcesContent":["<template>\n    <div class=\"homeblocklist\">\n        <transition enter-active-class=\"fadelong-enter-active\">\n            <f-data-table\n                v-show=\"show\"\n                :columns=\"dColumns\"\n                :items=\"dItems\"\n                :disable-infinite-scroll=\"!dHasNext\"\n                :loading=\"cLoading\"\n                fixed-header\n                f-card-off\n                mobile-view\n                height=\"300px\"\n                v-bind=\"{...$attrs, ...$props}\"\n                class=\"f-data-table-body-bg-color\"\n            >\n                <template v-slot:column-block=\"{ value, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-4 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col\">\n                            <router-link :to=\"{name: 'block-detail', params: {id: value}}\" :title=\"value\">{{value}}</router-link>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <router-link :to=\"{name: 'block-detail', params: {id: value}}\" :title=\"value\">{{value}}</router-link>\n                    </template>\n                </template>\n\n                <template v-slot:column-age=\"{ value, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-4 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col\">\n                            <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"5\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                    </template>\n                </template>\n            </f-data-table>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport FBlockList from \"@/data-tables/FBlockList.vue\";\nimport FDataTable from \"@/components/core/FDataTable/FDataTable.vue\";\nimport {WEIToFTM} from \"@/utils/transactions.js\";\nimport {timestampToDate} from \"@/filters.js\";\nimport gql from \"graphql-tag\";\nimport {cloneObject} from \"@/utils\";\nimport {pollingMixin} from \"@/mixins/polling.js\";\n\nexport default {\n    name: \"HomeBlockList\",\n\n    mixins: [pollingMixin],\n\n    components: {FDataTable},\n\n    props: {\n        ...FBlockList.props,\n    },\n\n    data() {\n        return {\n            ...FBlockList.data.call(this),\n            show: true,\n        }\n    },\n\n    computed: {\n        cLoading() {\n            return this.dItems.length === 0;\n        }\n    },\n\n    created() {\n        this.updateItems();\n    },\n\n    mounted() {\n        this._polling.start(\n            'update-blocks',\n            () => {\n                this.updateItems(true);\n            },\n            3300\n        );\n    },\n\n    methods: {\n        async updateItems(_animate) {\n            this.dItems = await this.fetchData();\n\n            if (_animate) {\n                this.show = false;\n\n                this.$nextTick(() => {this.show = true;});\n            }\n        },\n\n        /**\n         * @returns {Promise<Array>}\n         */\n        async fetchData() {\n            const data = await this.$apollo.query({\n                query: gql`\n                    query BlockList($cursor: Cursor, $count: Int!) {\n                        blocks (cursor: $cursor, count: $count) {\n                            totalCount\n                            pageInfo {\n                                first\n                                last\n                                hasNext\n                                hasPrevious\n                            }\n                            edges {\n                                block {\n                                    hash\n                                    number\n                                    timestamp\n                                    transactionCount\n                                    gasUsed\n                                }\n                                cursor\n                            }\n                        }\n                    }\n                `,\n                variables: {\n                    cursor: null,\n                    count: this.itemsPerPage\n                },\n                fetchPolicy: 'network-only',\n            });\n\n            return cloneObject(data.data && data.data.blocks && data.data.blocks.edges ? data.data.blocks.edges : []);\n        },\n\n        WEIToFTM,\n        timestampToDate\n    }\n}\n</script>\n"]}]}
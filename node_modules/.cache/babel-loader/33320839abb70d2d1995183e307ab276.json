{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FEllipsis/FEllipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FEllipsis/FEllipsis.vue","mtime":1657708592870},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKCi8qKgogKiBSZW5kZXJzIGVsbGlwc2lzICh1c2luZyBjc3MgdGV4dC1vdmVyZmxvdyBwcm9wZXJ0eSkgYXQgdGhlIHN0YXJ0LCBhdCB0aGUgbWlkZGxlIG9yIGF0IHRoZSBlbmQgb2YgdGhlIGdpdmVuIHRleHQuCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0ZFbGxpcHNpcycsCiAgcHJvcHM6IHsKICAgIHRleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCgogICAgLyoqCiAgICAgKiBQb3NpdGlvbiBvZiB0aHJlZSBkb3RzLgogICAgICoKICAgICAqIEB0eXBlIHsoJ3N0YXJ0JyB8ICdtaWRkbGUnIHwgJ2VuZCcpfQogICAgICovCiAgICBvdmVyZmxvdzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdlbmQnLAogICAgICB2YWxpZGF0b3I6IGZ1bmN0aW9uIHZhbGlkYXRvcihfdmFsdWUpIHsKICAgICAgICByZXR1cm4gWydzdGFydCcsICdtaWRkbGUnLCAnZW5kJ10uaW5kZXhPZihfdmFsdWUpICE9PSAtMTsKICAgICAgfQogICAgfSwKCiAgICAvKiogTnVtYmVyIG9mIGZpeGVkIGNoYXJhY3RlcnMgKGF0IHRoZSBzdGFydCBvciBhdCB0aGUgZW5kKSwgaWYgYG92ZXJmbG93YCBpcyBzZXQgdG8gYCdtaWRkbGUnYC4gKi8KICAgIGZpeGVkQ2hhcnNDb3VudDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUsCiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKF92YWx1ZSkgewogICAgICAgIHJldHVybiBfdmFsdWUgPiAwOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogUG9zaXRpb24gb2YgZml4ZWQgY2hhcmFjdGVycywgaWYgYG92ZXJmbG93YCBpcyBzZXQgdG8gYCdtaWRkbGUnYC4KICAgICAqCiAgICAgKiBAdHlwZSB7KCdzdGFydCcgfCAnZW5kJyl9CiAgICAgKi8KICAgIGZpeGVkQ2hhcnNQb3M6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZW5kJywKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IoX3ZhbHVlKSB7CiAgICAgICAgcmV0dXJuIFsnc3RhcnQnLCAnZW5kJ10uaW5kZXhPZihfdmFsdWUpICE9PSAtMTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIEFsaWduIHRleHQgdG8gdGhlIHJpZ2h0LgogICAgICovCiAgICBhbGlnblJpZ2h0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY1RleHQ6IGZ1bmN0aW9uIGNUZXh0KCkgewogICAgICByZXR1cm4gdGhpcy50ZXh0OwogICAgfSwKCiAgICAvKioKICAgICAqIEdldCBsZWZ0IHBhcnQgb2YgdGV4dC4KICAgICAqLwogICAgbGVmdENoYXJzOiBmdW5jdGlvbiBsZWZ0Q2hhcnMoKSB7CiAgICAgIHZhciBjVGV4dCA9IHRoaXMuY1RleHQ7CgogICAgICBpZiAodGhpcy5maXhlZENoYXJzUG9zID09PSAnZW5kJykgewogICAgICAgIHJldHVybiBjVGV4dC5zdWJzdHJpbmcoMCwgY1RleHQubGVuZ3RoIC0gdGhpcy5maXhlZENoYXJzQ291bnQpOwogICAgICB9CgogICAgICByZXR1cm4gY1RleHQuc3Vic3RyaW5nKDAsIHRoaXMuZml4ZWRDaGFyc0NvdW50KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgcmlnaHQgcGFydCBvZiB0ZXh0LgogICAgICovCiAgICByaWdodENoYXJzOiBmdW5jdGlvbiByaWdodENoYXJzKCkgewogICAgICB2YXIgY1RleHQgPSB0aGlzLmNUZXh0OwoKICAgICAgaWYgKHRoaXMuZml4ZWRDaGFyc1BvcyA9PT0gJ2VuZCcpIHsKICAgICAgICByZXR1cm4gY1RleHQuc3Vic3RyaW5nKGNUZXh0Lmxlbmd0aCAtIHRoaXMuZml4ZWRDaGFyc0NvdW50KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNUZXh0LnN1YnN0cmluZyh0aGlzLmZpeGVkQ2hhcnNDb3VudCk7CiAgICB9LAogICAgY3NzQ2xhc3M6IGZ1bmN0aW9uIGNzc0NsYXNzKCkgewogICAgICByZXR1cm4gWyJvdmVyZmxvdy0iLmNvbmNhdCh0aGlzLm92ZXJmbG93KSwgewogICAgICAgICdmaXhlZC1jaGFyLXBvcy1zdGFydCc6IHRoaXMuZml4ZWRDaGFyc1BvcyA9PT0gJ3N0YXJ0JywKICAgICAgICAnZi1lbGxpcHNpcy1hbGlnbi1yaWdodCc6IHRoaXMuYWxpZ25SaWdodAogICAgICB9XTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;AAiBA;AACA;AACA;AACA;EACAA,iBADA;EAGAC;IACAC;MACAC,YADA;MAEAC,WAFA;MAGAC;IAHA,CADA;;IAMA;AACA;AACA;AACA;AACA;IACAC;MACAH,YADA;MAEAC,cAFA;MAGAG;QACA;MACA;IALA,CAXA;;IAkBA;IACAC;MACAL,YADA;MAEAC,UAFA;MAGAG,SAHA,qBAGAE,MAHA,EAGA;QACA;MACA;IALA,CAnBA;;IA0BA;AACA;AACA;AACA;AACA;IACAC;MACAP,YADA;MAEAC,cAFA;MAGAG,SAHA,qBAGAE,MAHA,EAGA;QACA;MACA;IALA,CA/BA;;IAsCA;AACA;AACA;IACAE;MACAR,aADA;MAEAC;IAFA;EAzCA,CAHA;EAkDAQ;IACAC,KADA,mBACA;MACA;IACA,CAHA;;IAKA;AACA;AACA;IACAC,SARA,uBAQA;MACA;;MAEA;QACA;MACA;;MAEA;IACA,CAhBA;;IAkBA;AACA;AACA;IACAC,UArBA,wBAqBA;MACA;;MAEA;QACA;MACA;;MAEA;IACA,CA7BA;IA+BAC,QA/BA,sBA+BA;MACA,2BACA,aADA,GAEA;QACA,sDADA;QAEA;MAFA,CAFA;IAOA;EAvCA;AAlDA","names":["name","props","text","type","default","required","overflow","validator","fixedCharsCount","_value","fixedCharsPos","alignRight","computed","cText","leftChars","rightChars","cssClass"],"sourceRoot":"src/components/core/FEllipsis","sources":["FEllipsis.vue"],"sourcesContent":["<template>\n    <span class=\"f-ellipsis\" :class=\"cssClass\">\n        <span><slot name=\"prefix\"></slot></span>\n\n        <template v-if=\"overflow === 'middle'\">\n            <span class=\"left-chars\">{{ leftChars }} </span>\n            <span class=\"right-chars\">{{ rightChars }} </span>\n        </template>\n        <template v-else>\n            {{ cText }}\n        </template>\n\n        <span><slot name=\"suffix\"></slot></span>\n    </span>\n</template>\n\n<script>\n/**\n * Renders ellipsis (using css text-overflow property) at the start, at the middle or at the end of the given text.\n */\nexport default {\n    name: 'FEllipsis',\n\n    props: {\n        text: {\n            type: String,\n            default: '',\n            required: true,\n        },\n        /**\n         * Position of three dots.\n         *\n         * @type {('start' | 'middle' | 'end')}\n         */\n        overflow: {\n            type: String,\n            default: 'end',\n            validator: function (_value) {\n                return ['start', 'middle', 'end'].indexOf(_value) !== -1;\n            },\n        },\n        /** Number of fixed characters (at the start or at the end), if `overflow` is set to `'middle'`. */\n        fixedCharsCount: {\n            type: Number,\n            default: 5,\n            validator(_value) {\n                return _value > 0;\n            },\n        },\n        /**\n         * Position of fixed characters, if `overflow` is set to `'middle'`.\n         *\n         * @type {('start' | 'end')}\n         */\n        fixedCharsPos: {\n            type: String,\n            default: 'end',\n            validator(_value) {\n                return ['start', 'end'].indexOf(_value) !== -1;\n            },\n        },\n        /**\n         * Align text to the right.\n         */\n        alignRight: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        cText() {\n            return this.text;\n        },\n\n        /**\n         * Get left part of text.\n         */\n        leftChars() {\n            const { cText } = this;\n\n            if (this.fixedCharsPos === 'end') {\n                return cText.substring(0, cText.length - this.fixedCharsCount);\n            }\n\n            return cText.substring(0, this.fixedCharsCount);\n        },\n\n        /**\n         * Get right part of text.\n         */\n        rightChars() {\n            const { cText } = this;\n\n            if (this.fixedCharsPos === 'end') {\n                return cText.substring(cText.length - this.fixedCharsCount);\n            }\n\n            return cText.substring(this.fixedCharsCount);\n        },\n\n        cssClass() {\n            return [\n                `overflow-${this.overflow}`,\n                {\n                    'fixed-char-pos-start': this.fixedCharsPos === 'start',\n                    'f-ellipsis-align-right': this.alignRight,\n                },\n            ];\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
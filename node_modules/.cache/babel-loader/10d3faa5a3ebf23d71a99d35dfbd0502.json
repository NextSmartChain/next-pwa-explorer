{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/layouts/FAddressDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/layouts/FAddressDetail.vue","mtime":1657708591298},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;;AA2MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC,4CADA;IAEAC,0CAFA;IAGAC,wCAHA;IAIAC,4BAJA;IAKAC,kCALA;IAMAC,4CANA;IAOAC,UAPA;IAQAC,YARA;IASA;IACAC,kCAVA;IAWAC;EAXA,CADA;EAeAC;IACA;IACAC;MACAC,YADA;MAEAC,cAFA;MAGAC;IAHA,CAFA;;IAQA;IACAC;MACAH,YADA;MAEAE;IAFA;EATA,CAfA;EA8BAE;IACAC;MACAC,snHADA;MAkFAC,SAlFA,uBAkFA;QACA;UACAC,gBADA;UAEAC,wBAFA;UAGAC;QAHA;MAKA,CAxFA;MAyFAC,KAzFA,iBAyFAC,MAzFA,EAyFA;QACA;MACA;IA3FA;EADA,CA9BA;EA8HAC,IA9HA,kBA8HA;IACA;MACA;MACAC;QACAC,cADA;QAEAC;MAFA,CAFA;;MAMA;MACAC,UAPA;MAQAC,gBARA;MASAC,oBATA;MAUAC,qBAVA;MAWAC,sBAXA;MAYAC,qBAZA;MAaAC,0BAbA;MAcAC,0BAdA;MAeAC,gBAfA;MAgBAC;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAvCA;EAyCA,CAxKA;EA0KAC;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC,MARA,kBAQAC,GARA,EAQAC,KARA,EAQA;MACA;QACA;QACA;MACA;IACA;EAbA,CA1KA;EA0LAC;IACAC,QADA,sBACA;MACA;QACA;MACA,CAFA,MAEA;QACA;MACA;;MAEA;IACA,CATA;IAWAC,iBAXA,+BAWA;MACA;MACA;;MAEA;QACA;QACA;MACA;;MAEA;QACAC,+CADA;QAEAC,iDAFA;QAGAtB;MAHA;IAKA,CAzBA;IA2BAuB,OA3BA,qBA2BA;MACA;MACA;MACA;;MAEA;QACA;QAEAC,oCAHA,CAIA;;QAEAA;QACAA;QACAA;;QAEA;UACAC;YACA;YAEAC;YAEAF;YAC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","names":["components","Erc1155TransationList","Erc721TransationList","Erc20TransationList","FTMTokenValue","AddressAssetList","AddressDelegationList","FTab","FTabs","FTransactionList","FCard","props","id","type","required","default","itemsPerPage","apollo","account","query","variables","address","count","cursor","error","_error","data","fMintAccount","collateral","debt","tokens","dRecordsCount","erc20RecordsCount","erc721RecordsCount","erc1155RecordsCount","assetsRecordsCount","delegationsRecordsCount","dAccountByAddressError","validators","loadDelegations","watch","$route","_to","_from","computed","cAccount","cTransactionItems","action","hasNext","cAssets","assets","delegations","validatorIds","cLoading","created","setTimeout","methods","initDeFi","$defi","Promise","result","setValidators","_validatorIds","_validator","fetchValidators","fetchPolicy","getStakerById","_id","toFTM","_value","_isNumber","toUSD","onErc20RecordsCount","_count","onErc721RecordsCount","onErc1155RecordsCount","onAssetsRecordsCount","onDelegationsRecordsCount","onFetchMore","updateQuery","WEIToFTM","FTMToUSD","timestampToDate"],"sourceRoot":"src/layouts","sources":["FAddressDetail.vue"],"sourcesContent":["<template>\n    <div class=\"f-address-detail\">\n        <template v-if=\"dAccountByAddressError\">\n            <div class=\"query-error\">{{ dAccountByAddressError }}</div>\n        </template>\n        <div class=\"row f-data-layout equal-height no-vert-col-padding collapse-md\">\n<!--            <f-card style=\"margin: 32px auto 0 auto; margin-bottom: 0;\">\n                <h1 class=\"h2\" style=\"margin-bottom: 0;\">Scheduled network upgrade in progress.</h1>\n            </f-card>-->\n            <div class=\"col col-6-lg margin-bottom-menu\">\n                <f-card>\n                    <h2>{{ $t('view_address_detail.balance') }}</h2>\n\n                    <div class=\"balance center-v\">\n                        <h3 class=\"h1\">\n                            <span v-show=\"cAccount\">\n                                <f-t-m-token-value :value=\"cAccount ? cAccount.totalValue : 1\" convert no-currency /> <span class=\"NEXT\">NEXT</span>\n                            </span>\n                        </h3>\n                        <div v-show=\"cAccount\" class=\"usd\">\n                            <f-t-m-token-value :value=\"toUSD(cAccount ? cAccount.totalValue : 1)\" with-price-currency no-currency />\n                        </div>\n                    </div>\n                </f-card>\n            </div>\n            <div class=\"col col-6-lg margin-bottom-menu\">\n                <f-card>\n                    <h2>{{ $t('view_address_detail.available') }}</h2>\n\n                    <div class=\"balance center-v\">\n                        <h3 class=\"h1\">\n                            <span v-show=\"'available' in cAssets\">\n                                <f-t-m-token-value :value=\"cAssets.available\" convert no-currency /> <span class=\"NEXT\">NEXT</span>\n                            </span>\n                        </h3>\n                        <div v-show=\"'available' in cAssets\" class=\"usd\">\n                            <f-t-m-token-value :value=\"toUSD(cAssets.available)\" with-price-currency no-currency />\n                        </div>\n                    </div>\n                </f-card>\n            </div>\n            <div class=\"col\">\n                <f-card>\n                    <h2>{{ $t('view_address_detail.staking') }}</h2>\n\n                    <!--\n                                            <div class=\"row no-collapse\">\n                                                <div class=\"col f-row-label\">{{ $t('view_address_detail.available') }}</div>\n                                                <div class=\"col\">\n                                                    <div v-show=\"'available' in cAssets\">{{ toFTM(cAssets.available) }} NEXT</div>\n                                                </div>\n                                            </div>\n                    -->\n                    <div class=\"row no-collapse\">\n                        <div class=\"col f-row-label\">{{ $t('view_address_detail.delegated') }}</div>\n                        <div class=\"col\">\n                            <div v-show=\"'delegated' in cAssets\"><f-t-m-token-value :value=\"cAssets.delegated\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col f-row-label\">{{ $t('view_address_detail.pending_rewards') }}</div>\n                        <div class=\"col\">\n                            <div v-show=\"'pending_rewards' in cAssets\"><f-t-m-token-value :value=\"cAssets.pending_rewards\" /></div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col f-row-label\">{{ $t('view_address_detail.stashed_rewards') }}</div>\n                        <div class=\"col\">\n                            <div v-show=\"'stashed' in cAssets\"><f-t-m-token-value :value=\"cAssets.stashed\" convert /></div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col f-row-label\">{{ $t('view_address_detail.claimed_rewards') }}</div>\n                        <div class=\"col\">\n                            <div v-show=\"'claimed_rewards' in cAssets\">\n                                -\n                                <!--{{ toFTM(cAssets.claimed_rewards, true) }} NEXT-->\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col f-row-label\">{{ $t('validators') }}</div>\n                        <div class=\"col\">\n                            <template v-if=\"validators && validators.length\">\n                                <div v-for=\"validator in validators\" :key=\"validator.id\">\n                                    <router-link v-if=\"validator.stakerAddress\" :to=\"{ name: 'validator-detail', params: {address: validator.stakerAddress} }\">\n                                        {{ validator ? validator.name : '' }}\n                                    </router-link>\n                                    <span v-else>{{ validator ? validator.name : '' }}</span>\n                                </div>\n                            </template>\n                            <template v-else>-</template>\n                        </div>\n                    </div>\n                </f-card>\n            </div>\n        </div>\n\n        <!--\n                    <br><br>\n                    <f-card>\n                        <h2 class=\"break-word\">{{ id }}</h2>\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <div class=\"num-block\">\n                                    <h2 class=\"h3\">{{ $t('view_address_detail.value_in_ftm') }}</h2>\n                                    <div class=\"num\"><span v-show=\"cAccount\">{{ toFTM(cAccount ? cAccount.totalValue : 1) }}</span></div>\n                                </div>\n                            </div>\n                            <div class=\"col\">\n                                <div class=\"num-block\">\n                                    <h2 class=\"h3\">{{ $t('view_address_detail.value_in_usd') }}</h2>\n                                    <div class=\"num\"><span v-show=\"cAccount\">{{ toUSD(cAccount ? cAccount.totalValue : 1) }}</span></div>\n                                </div>\n                            </div>\n                        </div>\n                    </f-card>\n        -->\n\n        <!--\n                    <div class=\"f-subsection\">\n                        <h2 class=\"h1\">{{ $t('view_address_detail.assets') }} <span v-if=\"cAssetItems.length\" class=\"f-records-count\">({{ cAssetItems.length }})</span></h2>\n\n                        <f-data-table\n                            :columns=\"dAssetColumns\"\n                            :items=\"cAssetItems\"\n                            fixed-header\n                        >\n                        </f-data-table>\n                    </div>\n        -->\n\n        <div class=\"f-subsection\">\n            <f-tabs>\n                <template #transactions>\n                    <h2>\n                        {{ $t('view_address_detail.transactions') }}\n                        <span v-if=\"dRecordsCount\" class=\"f-records-count\">({{ dRecordsCount }})</span>\n                    </h2>\n                </template>\n                <template #erc20transactions>\n                    <h2>\n                        {{ $t('view_address_detail.erc20_transactions') }}\n                        <span v-if=\"dRecordsCount\" class=\"f-records-count\">({{ erc20RecordsCount }})</span>\n                    </h2>\n                </template>\n                <template #erc721transactions>\n                    <h2>\n                        {{ $t('view_address_detail.erc721_transactions') }}\n                        <span v-if=\"dRecordsCount\" class=\"f-records-count\">({{ erc721RecordsCount }})</span>\n                    </h2>\n                </template>\n                <template #erc1155transactions>\n                    <h2>\n                        {{ $t('view_address_detail.erc1155_transactions') }}\n                        <span v-if=\"dRecordsCount\" class=\"f-records-count\">({{ erc1155RecordsCount }})</span>\n                    </h2>\n                </template>\n                <template #assets>\n                    <h2>\n                        {{ $t('view_address_detail.assets') }}\n                        <span class=\"f-records-count\">({{ assetsRecordsCount }})</span>\n                    </h2>\n                </template>\n                <template #delegations>\n                    <h2>\n                        {{ $t('view_address_detail.delegations') }}\n                        <span class=\"f-records-count\">({{ delegationsRecordsCount }})</span>\n                    </h2>\n                </template>\n\n                <f-tab title-slot=\"transactions\">\n                    <f-transaction-list\n                        :items=\"cTransactionItems\"\n                        :loading=\"cLoading\"\n                        :address-col=\"id\"\n                        @fetch-more=\"onFetchMore\"\n                    ></f-transaction-list>\n                </f-tab>\n                <f-tab title-slot=\"erc20transactions\">\n                    <erc20-transation-list :address=\"id\" :delay=\"100\" @records-count=\"onErc20RecordsCount\" />\n                </f-tab>\n                <f-tab title-slot=\"erc721transactions\">\n                    <erc721-transation-list :address=\"id\" :delay=\"110\" @records-count=\"onErc721RecordsCount\" />\n                </f-tab>\n                <f-tab title-slot=\"erc1155transactions\">\n                    <erc1155-transation-list :address=\"id\" :delay=\"120\" @records-count=\"onErc1155RecordsCount\" />\n                </f-tab>\n                <f-tab title-slot=\"assets\">\n                    <address-asset-list :tokens=\"tokens\" :f-mint-account=\"fMintAccount\" @records-count=\"onAssetsRecordsCount\" />\n                </f-tab>\n                <f-tab title-slot=\"delegations\">\n                    <address-delegation-list v-if=\"this.loadDelegations\" :account-address=\"id\" @records-count=\"onDelegationsRecordsCount\" />\n                </f-tab>\n            </f-tabs>\n\n<!--                <h2 class=\"h1\">{{ $t('view_block_detail.block_transactions') }} <span v-if=\"dRecordsCount\" class=\"f-records-count\">({{ dRecordsCount }})</span></h2>-->\n\n        </div>\n    </div>\n</template>\n\n<script>\n    import FCard from \"../components/core/FCard/FCard.vue\";\n    import gql from 'graphql-tag';\n    import { WEIToFTM, FTMToUSD } from \"../utils/transactions.js\";\n    import FTransactionList from \"../data-tables/FTransactionList.vue\";\n    import {formatHexToInt, timestampToDate} from \"../filters.js\";\n    import FTabs from \"@/components/core/FTabs/FTabs.vue\";\n    import FTab from \"@/components/core/FTabs/FTab.vue\";\n    import AddressDelegationList from \"@/data-tables/AddressDelegationList.vue\";\n    import AddressAssetList from \"@/data-tables/AddressAssetList.vue\";\n    import FTMTokenValue from \"@/components/core/FTMTokenValue/FTMTokenValue.vue\";\n    import Erc20TransationList from \"@/data-tables/Erc20TransationList.vue\";\n    import Erc721TransationList from \"@/data-tables/Erc721TransationList.vue\";\n    import Erc1155TransationList from \"@/data-tables/Erc1155TransationList.vue\";\n\n    export default {\n        components: {\n            Erc1155TransationList,\n            Erc721TransationList,\n            Erc20TransationList,\n            FTMTokenValue,\n            AddressAssetList,\n            AddressDelegationList,\n            FTab,\n            FTabs,\n            // FDataTable,\n            FTransactionList,\n            FCard\n        },\n\n        props: {\n            /** Address id. */\n            id: {\n                type: String,\n                required: true,\n                default: ''\n            },\n\n            /** Number of items per page. */\n            itemsPerPage: {\n                type: Number,\n                default: 20\n            }\n        },\n\n        apollo: {\n            account: {\n                query: gql`\n                    query AccountByAddress($address: Address!, $cursor: Cursor, $count: Int!) {\n                        account (address: $address) {\n                            address\n                            contract {\n                                address\n                                deployedBy {\n                                    hash\n                                    contractAddress\n                                }\n                                name\n                                version\n                                compiler\n                                sourceCode\n                                abi\n                                validated\n                                supportContact\n                                timestamp\n                            }\n                            balance\n                            totalValue\n                            txCount\n                            txList(cursor: $cursor, count: $count) {\n                                pageInfo {\n                                    first\n                                    last\n                                    hasNext\n                                    hasPrevious\n                                }\n                                totalCount\n                                edges {\n                                    cursor\n                                    transaction {\n                                        hash\n                                        from\n                                        to\n                                        value\n                                        gasUsed\n                                        block {\n                                            number\n                                            timestamp\n                                        }\n                                        tokenTransactions {\n                                            trxIndex\n                                            tokenAddress\n                                            tokenName\n                                            tokenSymbol\n                                            tokenType\n                                            tokenId\n                                            tokenDecimals\n                                            type\n                                            sender\n                                            recipient\n                                            amount\n                                        }\n                                    }\n                                }\n                            }\n                            staker {\n                                id\n                                createdTime\n                                isActive\n                            }\n                            delegations {\n                                totalCount\n                                edges {\n                                    delegation {\n                                        toStakerId\n                                        createdTime\n                                        amount\n                                        claimedReward\n                                        pendingRewards {\n                                            amount\n                                        }\n                                    }\n                                    cursor\n                                }\n                            }\n                        }\n                    }\n                `,\n                variables() {\n                    return {\n                        address: this.id,\n                        count: this.itemsPerPage,\n                        cursor: null\n                    }\n                },\n                error(_error) {\n                    this.dAccountByAddressError = _error.message;\n                }\n            },\n        },\n\n        data() {\n            return {\n                /** @type {FMintAccount} */\n                fMintAccount: {\n                    collateral: [],\n                    debt: [],\n                },\n                /** @type {DefiToken[]} */\n                tokens: [],\n                dRecordsCount: 0,\n                erc20RecordsCount: 0,\n                erc721RecordsCount: 0,\n                erc1155RecordsCount: 0,\n                assetsRecordsCount: 0,\n                delegationsRecordsCount: 0,\n                dAccountByAddressError: '',\n                validators: null,\n                loadDelegations: false,\n/*\n                dAssetColumns: [\n                    {\n                        name: 'asset',\n                        label: this.$t('view_address_detail.asset')\n                    },\n                    {\n                        name: 'balance',\n                        label: this.$t('view_address_detail.balance'),\n                        cssClass: 'align-end',\n                    },\n                    {\n                        name: 'valueInFTM',\n                        label: this.$t('view_address_detail.value_in_ftm'),\n                        cssClass: 'align-end',\n                    },\n                    {\n                        name: 'valueInUSD',\n                        label: this.$t('view_address_detail.value_in_usd'),\n                        cssClass: 'align-end',\n                    }\n                ]\n*/\n            }\n        },\n\n        watch: {\n            /**\n             * Watch route change and reset some properties, if only route parameter changes (whole component is reused,\n             * not rendered from scratch!).\n             *\n             * @param {object} _to\n             * @param {object} _from\n             */\n            $route(_to, _from) {\n                if (_to.name === _from.name) {\n                    this.appendItems = false;\n                    this.initDeFi();\n                }\n            }\n        },\n\n        computed: {\n            cAccount() {\n                if (this.account && this.account.contract) {\n                    this.$emit('is-contract');\n                } else {\n                    this.$emit('is-address');\n                }\n\n                return this.account;\n            },\n\n            cTransactionItems() {\n                const {cAccount} = this;\n                const txList = (cAccount ? cAccount.txList : null);\n\n                if (txList) {\n                    // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n                    this.dRecordsCount = formatHexToInt(txList.totalCount);\n                }\n\n                return {\n                    action: (this.appendItems ? 'append' : 'replace'),\n                    hasNext: (txList ? txList.pageInfo.hasNext : false),\n                    data: (txList ? txList.edges : [])\n                };\n            },\n\n            cAssets() {\n                const {cAccount} = this;\n                const assets = {};\n                const validatorIds = [];\n\n                if (cAccount) {\n                    const { delegations } = cAccount;\n\n                    assets.available = cAccount.balance;\n                    // assets.stashed = cAccount.stashed || 0;\n\n                    assets.delegated = 0;\n                    assets.pending_rewards = 0;\n                    assets.claimed_rewards = 0;\n\n                    if (delegations && delegations.edges) {\n                        delegations.edges.forEach((_edge) => {\n                            const { delegation } = _edge;\n\n                            validatorIds.push(delegation.toStakerId);\n\n                            assets.delegated += (delegation ? WEIToFTM(delegation.amount) : 0);\n                            assets.pending_rewards += (delegation && delegation.pendingRewards ? WEIToFTM(delegation.pendingRewards.amount) : 0);\n                            assets.claimed_rewards += (delegation ? WEIToFTM(delegation.claimedReward) : 0);\n                        });\n\n                        this.setValidators(validatorIds);\n                    }\n                }\n\n                return assets;\n            },\n\n            /**\n             * Get items for assets data table.\n             */\n/*\n            cAssetItems() {\n                const {cAccount} = this;\n                const items = [];\n\n                if (cAccount) {\n                    items.push(this.getAssetItem(this.$t('view_address_detail.available'), cAccount.balance));\n\n                    const {delegation} = cAccount;\n\n                    if (delegation) {\n                        items.push(this.getAssetItem(this.$t('view_address_detail.delegated'), delegation.amount));\n                        items.push(this.getAssetItem(this.$t('view_address_detail.pending_rewards'), delegation.pendingRewards.amount));\n                        items.push(this.getAssetItem(this.$t('view_address_detail.claimed_rewards'), delegation.claimedReward));\n                    } else {\n                        items.push(this.getAssetItem(this.$t('view_address_detail.delegated'), 0));\n                        items.push(this.getAssetItem(this.$t('view_address_detail.pending_rewards'), 0));\n                        items.push(this.getAssetItem(this.$t('view_address_detail.claimed_rewards'), 0));\n                    }\n                }\n\n                return items;\n            },\n*/\n\n            cLoading() {\n                return this.$apollo.queries.account.loading;\n            },\n        },\n\n        created() {\n            /** If `true`, transaction items will be appended. */\n            this.appendItems = false;\n\n            setTimeout(() => {\n                this.initDeFi();\n            }, 500);\n\n            // postpone delegations loading\n            setTimeout(() => {\n                this.loadDelegations = true;\n            }, 1400);\n        },\n\n        methods: {\n            /**\n             * Get one item for asset data table.\n             *\n             * @param {string} _assetName\n             * @param {string|number} _value\n             */\n/*\n            getAssetItem(_assetName, _value) {\n                return {\n                    asset: _assetName,\n                    balance: this.toFTM(_value),\n                    valueInFTM: this.toFTM(_value),\n                    valueInUSD: this.toUSD(_value)\n                }\n            },\n*/\n\n            async initDeFi() {\n                const { $defi } = this;\n                const result = await Promise.all([\n                    $defi.fetchFMintAccount(this.id),\n                    $defi.fetchERC20Assets(this.id),\n                    // $defi.fetchERC20Tokens(),\n                    $defi.init(),\n                ]);\n\n                this.fMintAccount = result[0];\n                this.tokens = result[1];\n\n                setTimeout(async () => {\n                    this.tokens = await $defi.getERC20TokensWithAvailableBalances(this.id, this.tokens);\n                }, 30);\n            },\n\n            /**\n             * @param {array} _validatorIds\n             * @return {Promise<void>}\n             */\n            async setValidators(_validatorIds) {\n                let data;\n\n                if (this.validators === null) {\n                    data = await this.fetchValidators();\n\n                    this.validators = data.filter((_validator) => {\n                        if (_validatorIds.indexOf(_validator.id) > -1) {\n                            _validator.name = `${_validator.stakerInfo ? _validator.stakerInfo.name : this.$t('unknown')}, ${parseInt(_validator.id, 16)}`;\n                            return true;\n                        }\n\n                        return false;\n                    });\n                }\n            },\n\n            async fetchValidators() {\n                const data = await this.$apollo.query({\n                    query: gql`\n                        query StakerById {\n                            stakers {\n                                id\n                                stakerAddress\n                                validatorInfo {\n                                    name\n                                    website\n                                    contact\n                                    logoUrl\n                                }\n                            }\n                        }\n                    `,\n                    fetchPolicy: 'network-only',\n                });\n\n                return data.data.stakers;\n            },\n\n            async getStakerById(_id) {\n                const data = await this.$apollo.query({\n                    query: gql`\n                        query StakerById($id: Long!) {\n                            staker(id: $id) {\n                                id\n                                stakerAddress\n                                validatorInfo {\n                                    name\n                                    website\n                                    contact\n                                    logoUrl\n                                }\n                            }\n                        }\n                    `,\n                    variables: {\n                        id: _id,\n                    },\n                    fetchPolicy: 'network-only',\n                });\n\n                return data.data.staker;\n            },\n\n            /**\n             * Convert value to NEXT.\n             *\n             * @param {string|number} _value\n             * @param {boolean} _isNumber Value is number.\n             * @return {string}\n             */\n            toFTM(_value, _isNumber) {\n                return _isNumber ? _value : WEIToFTM(_value);\n            },\n\n            /**\n             * Convert value to USD.\n             *\n             * @param {string|number} _value\n             * @return {string}\n             */\n            toUSD(_value) {\n                return FTMToUSD(WEIToFTM(_value), this.$store.state.tokenPrice);\n            },\n\n            onErc20RecordsCount(_count) {\n                this.erc20RecordsCount = _count;\n            },\n\n            onErc721RecordsCount(_count) {\n                this.erc721RecordsCount = _count;\n            },\n\n            onErc1155RecordsCount(_count) {\n                this.erc1155RecordsCount = _count;\n            },\n\n            onAssetsRecordsCount(_count) {\n                this.assetsRecordsCount = _count;\n            },\n\n            onDelegationsRecordsCount(_count) {\n                this.delegationsRecordsCount = _count;\n            },\n\n            onFetchMore() {\n                const {cAccount} = this;\n                const txList = (cAccount ? cAccount.txList : null);\n\n                if (txList && txList.pageInfo && txList.pageInfo.hasNext) {\n                    const cursor = txList.pageInfo.last;\n\n                    this.$apollo.queries.account.fetchMore({\n                        variables: {\n                            address: this.id,\n                            count: this.itemsPerPage,\n                            cursor\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                            this.appendItems = true;\n\n                            return fetchMoreResult;\n                        }\n                    });\n                }\n            },\n\n            WEIToFTM,\n            FTMToUSD,\n            timestampToDate,\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .f-address-detail {\n        .balance {\n            height: calc(100% - 48px);\n            text-align: end;\n\n            h3 {\n                text-align: end;\n                margin-bottom: 0;\n            }\n\n            .usd {\n                color: $light-gray-color;\n                font-size: 26px;\n            }\n        }\n\n        .num-block {\n            h2 {\n                text-align: center;\n                margin-top: 16px;\n                margin-bottom: 4px;\n            }\n\n            .num {\n                text-align: center;\n                font-weight: bold;\n                font-size: $fs36;\n            }\n        }\n\n        > .f-card {\n        }\n\n        .f-tabs {\n            h2 {\n                font-size: 18px;\n            }\n        }\n    }\n</style>\n"]}]}
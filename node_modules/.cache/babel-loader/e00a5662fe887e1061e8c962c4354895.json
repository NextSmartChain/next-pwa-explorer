{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FTabs/FTabs.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FTabs/FTabs.vue","mtime":1657708592086},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgaGVscGVyc01peGluIH0gZnJvbSAnLi4vLi4vLi4vbWl4aW5zL2hlbHBlcnMuanMnOwppbXBvcnQgeyBnZXRVbmlxdWVJZCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzJzsKaW1wb3J0IHsga2V5Ym9hcmROYXZpZ2F0aW9uIH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvYXJpYS5qcyc7Ci8qKgogKiBTaW1wbGUgdGFicyBmb2xsb3dpbmcgV0FJLUFSSUEgcHJhY3RpY2VzLgogKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRlRhYnMnLAogIG1peGluczogW2hlbHBlcnNNaXhpbl0sCiAgcHJvcHM6IHsKICAgIC8qKiBObyB0YWJsaXN0IHN0eWxlICovCiAgICBub1N0eWxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLyoqIFRhYiBpZHMgKi8KICAgICAgaWRzOiBbXSwKCiAgICAgIC8qKiBBcnJheSBvZiBGVGFiIGluc3RhbmNlcyAqLwogICAgICBkVGFiUGFuZWxzOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnByZXBhcmVUYWJzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBwcmVwYXJlVGFiczogZnVuY3Rpb24gcHJlcGFyZVRhYnMoKSB7CiAgICAgIHZhciB0YWJQYW5lbHMgPSB0aGlzLmdldFRhYlBhbmVscygpOwogICAgICB2YXIgaWRzID0gW107CiAgICAgIHZhciB0YWJQYW5lbDsKICAgICAgdmFyIGFjdGl2ZVBhbmVsRXhpc3RzID0gZmFsc2U7CgogICAgICBmb3IgKHZhciBpID0gMCwgbGVuMSA9IHRhYlBhbmVscy5sZW5ndGgsIGlkID0gJyc7IGkgPCBsZW4xOyBpKyspIHsKICAgICAgICBpZCA9IGdldFVuaXF1ZUlkKCk7CiAgICAgICAgdGFiUGFuZWwgPSB0YWJQYW5lbHNbaV07CiAgICAgICAgdGFiUGFuZWwubGFiZWxsZWRCeSA9IGlkOwoKICAgICAgICBpZiAodGFiUGFuZWwuYWN0aXZlKSB7CiAgICAgICAgICBhY3RpdmVQYW5lbEV4aXN0cyA9IHRydWU7CiAgICAgICAgfQoKICAgICAgICBpZHMucHVzaChpZCk7CiAgICAgIH0KCiAgICAgIHRoaXMuaWRzID0gaWRzOwogICAgICB0aGlzLmRUYWJQYW5lbHMgPSB0YWJQYW5lbHM7CgogICAgICBpZiAoIWFjdGl2ZVBhbmVsRXhpc3RzKSB7CiAgICAgICAgdGhpcy5zZXRBY3RpdmVUYWJCeUluZGV4KDApOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQHJldHVybiB7RlRhYltdfQogICAgICovCiAgICBnZXRUYWJQYW5lbHM6IGZ1bmN0aW9uIGdldFRhYlBhbmVscygpIHsKICAgICAgcmV0dXJuIHRoaXMuZmluZENoaWxkcmVuQnlOYW1lKCdmLXRhYicpOwogICAgfSwKCiAgICAvKioKICAgICAqIERlYWN0aXZhdGUgY3VycmVudGx5IGFjdGl2ZSBwYW5lbC4KICAgICAqLwogICAgZGVhY3RpdmF0ZUFjdGl2ZVBhbmVsOiBmdW5jdGlvbiBkZWFjdGl2YXRlQWN0aXZlUGFuZWwoKSB7CiAgICAgIHZhciBkVGFiUGFuZWxzID0gdGhpcy5kVGFiUGFuZWxzOwoKICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbjEgPSBkVGFiUGFuZWxzLmxlbmd0aDsgaSA8IGxlbjE7IGkrKykgewogICAgICAgIGlmIChkVGFiUGFuZWxzW2ldLmRBY3RpdmUpIHsKICAgICAgICAgIGRUYWJQYW5lbHNbaV0uZEFjdGl2ZSA9IGZhbHNlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQHBhcmFtIHtpbnR9IF9pbmRleAogICAgICovCiAgICBzZXRBY3RpdmVUYWJCeUluZGV4OiBmdW5jdGlvbiBzZXRBY3RpdmVUYWJCeUluZGV4KF9pbmRleCkgewogICAgICB2YXIgdGFiUGFuZWwgPSB0aGlzLmRUYWJQYW5lbHNbX2luZGV4XTsKCiAgICAgIGlmICghdGFiUGFuZWwuZERpc2FibGVkKSB7CiAgICAgICAgdGhpcy5kZWFjdGl2YXRlQWN0aXZlUGFuZWwoKTsKICAgICAgICB0YWJQYW5lbC5kQWN0aXZlID0gdHJ1ZTsKICAgICAgICB0aGlzLiRlbWl0KCd0YWItc2V0JywgewogICAgICAgICAgdGFiSWQ6IHRhYlBhbmVsLmlkCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBfZWxlbQogICAgICogQHJldHVybiB7aW50fQogICAgICovCiAgICBnZXRUYWJJbmRleEJ5RWxlbTogZnVuY3Rpb24gZ2V0VGFiSW5kZXhCeUVsZW0oX2VsZW0pIHsKICAgICAgdmFyIGVMaSA9IF9lbGVtLmNsb3Nlc3QoJ2xpJyk7CgogICAgICByZXR1cm4gZUxpID8gcGFyc2VJbnQoZUxpLmdldEF0dHJpYnV0ZSgnZGF0YS1pbmRleCcpKSA6IC0xOwogICAgfSwKCiAgICAvKioKICAgICAqIEBwYXJhbSB7TW91c2VFdmVudH0gX2V2ZW50CiAgICAgKi8KICAgIG9uVGFiTGlzdENsaWNrOiBmdW5jdGlvbiBvblRhYkxpc3RDbGljayhfZXZlbnQpIHsKICAgICAgdmFyIHRhYkluZGV4ID0gdGhpcy5nZXRUYWJJbmRleEJ5RWxlbShfZXZlbnQudGFyZ2V0KTsKCiAgICAgIGlmICh0YWJJbmRleCA+IC0xKSB7CiAgICAgICAgdGhpcy5zZXRBY3RpdmVUYWJCeUluZGV4KHRhYkluZGV4KTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gX2V2ZW50CiAgICAgKi8KICAgIG9uVGFiTGlzdEtleXVwOiBmdW5jdGlvbiBvblRhYkxpc3RLZXl1cChfZXZlbnQpIHsKICAgICAgdmFyIGVsZW0gPSBrZXlib2FyZE5hdmlnYXRpb24oX2V2ZW50LCAnW3JvbGU9InRhYiJdOm5vdChbYXJpYS1kaXNhYmxlZD0idHJ1ZSJdKScsIHRydWUpOwoKICAgICAgaWYgKGVsZW0pIHsKICAgICAgICB2YXIgdGFiSW5kZXggPSB0aGlzLmdldFRhYkluZGV4QnlFbGVtKGVsZW0pOwoKICAgICAgICBpZiAodGFiSW5kZXggPiAtMSkgewogICAgICAgICAgdGhpcy5zZXRBY3RpdmVUYWJCeUluZGV4KHRhYkluZGV4KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"mappings":"AA0BA;AACA;AACA;AAEA;AACA;AACA;;AACA;EACAA,aADA;EAGAC,sBAHA;EAKAC;IACA;IACAC;MACAC,aADA;MAEAC;IAFA;EAFA,CALA;EAaAC,IAbA,kBAaA;IACA;MACA;MACAC,OAFA;;MAGA;MACAC;IAJA;EAMA,CApBA;EAsBAC,OAtBA,qBAsBA;IACA;EACA,CAxBA;EA0BAC;IACAC,WADA,yBACA;MACA;MACA;MACA;MACA;;MAEA;QACAC;QACAC;QAEAA;;QACA;UACAC;QACA;;QAEAP;MACA;;MAEA;MACA;;MAEA;QACA;MACA;IACA,CAzBA;;IA2BA;AACA;AACA;IACAQ,YA9BA,0BA8BA;MACA;IACA,CAhCA;;IAkCA;AACA;AACA;IACAC,qBArCA,mCAqCA;MACA;;MAEA;QACA;UACAR;UACA;QACA;MACA;IACA,CA9CA;;IAgDA;AACA;AACA;IACAS,mBAnDA,+BAmDAC,MAnDA,EAmDA;MACA;;MAEA;QACA;QAEAL;QAEA;UAAAM;QAAA;MACA;IACA,CA7DA;;IA+DA;AACA;AACA;AACA;IACAC,iBAnEA,6BAmEAC,KAnEA,EAmEA;MACA;;MAEA;IACA,CAvEA;;IAyEA;AACA;AACA;IACAC,cA5EA,0BA4EAC,MA5EA,EA4EA;MACA;;MAEA;QACA;MACA;IACA,CAlFA;;IAoFA;AACA;AACA;IACAC,cAvFA,0BAuFAD,MAvFA,EAuFA;MACA;;MAEA;QACA;;QAEA;UACA;QACA;MACA;IACA;EAjGA;AA1BA","names":["name","mixins","props","noStyle","type","default","data","ids","dTabPanels","mounted","methods","prepareTabs","id","tabPanel","activePanelExists","getTabPanels","deactivateActivePanel","setActiveTabByIndex","_index","tabId","getTabIndexByElem","_elem","onTabListClick","_event","onTabListKeyup"],"sourceRoot":"src/components/core/FTabs","sources":["FTabs.vue"],"sourcesContent":["<template>\n    <div class=\"f-tabs\" :class=\"{ 'no-style': noStyle }\">\n        <ul role=\"tablist\" class=\"no-markers\" @click=\"onTabListClick\" @keyup=\"onTabListKeyup\">\n            <li\n                v-for=\"(tabPanel, idx) in dTabPanels\"\n                :id=\"ids[idx]\"\n                :key=\"`${ids[idx]}`\"\n                :tabindex=\"tabPanel.dActive ? 0 : -1\"\n                :aria-controls=\"tabPanel.id\"\n                :aria-selected=\"tabPanel.dActive\"\n                :aria-disabled=\"tabPanel.dDisabled\"\n                role=\"tab\"\n                :data-index=\"idx\"\n                :class=\"tabPanel.titleClass\"\n            >\n                <template v-if=\"tabPanel.titleSlot\"><slot :name=\"tabPanel.titleSlot\"></slot></template>\n                <template v-else>{{ tabPanel.title }}</template>\n            </li>\n        </ul>\n        <div class=\"f-tabs-panels\">\n            <slot></slot>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { helpersMixin } from '../../../mixins/helpers.js';\nimport { getUniqueId } from '../../../utils';\nimport { keyboardNavigation } from '../../../utils/aria.js';\n\n/**\n * Simple tabs following WAI-ARIA practices.\n */\nexport default {\n    name: 'FTabs',\n\n    mixins: [helpersMixin],\n\n    props: {\n        /** No tablist style */\n        noStyle: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    data() {\n        return {\n            /** Tab ids */\n            ids: [],\n            /** Array of FTab instances */\n            dTabPanels: [],\n        };\n    },\n\n    mounted() {\n        this.prepareTabs();\n    },\n\n    methods: {\n        prepareTabs() {\n            const tabPanels = this.getTabPanels();\n            const ids = [];\n            let tabPanel;\n            let activePanelExists = false;\n\n            for (let i = 0, len1 = tabPanels.length, id = ''; i < len1; i++) {\n                id = getUniqueId();\n                tabPanel = tabPanels[i];\n\n                tabPanel.labelledBy = id;\n                if (tabPanel.active) {\n                    activePanelExists = true;\n                }\n\n                ids.push(id);\n            }\n\n            this.ids = ids;\n            this.dTabPanels = tabPanels;\n\n            if (!activePanelExists) {\n                this.setActiveTabByIndex(0);\n            }\n        },\n\n        /**\n         * @return {FTab[]}\n         */\n        getTabPanels() {\n            return this.findChildrenByName('f-tab');\n        },\n\n        /**\n         * Deactivate currently active panel.\n         */\n        deactivateActivePanel() {\n            const { dTabPanels } = this;\n\n            for (let i = 0, len1 = dTabPanels.length; i < len1; i++) {\n                if (dTabPanels[i].dActive) {\n                    dTabPanels[i].dActive = false;\n                    break;\n                }\n            }\n        },\n\n        /**\n         * @param {int} _index\n         */\n        setActiveTabByIndex(_index) {\n            const tabPanel = this.dTabPanels[_index];\n\n            if (!tabPanel.dDisabled) {\n                this.deactivateActivePanel();\n\n                tabPanel.dActive = true;\n\n                this.$emit('tab-set', { tabId: tabPanel.id });\n            }\n        },\n\n        /**\n         * @param {HTMLElement} _elem\n         * @return {int}\n         */\n        getTabIndexByElem(_elem) {\n            const eLi = _elem.closest('li');\n\n            return eLi ? parseInt(eLi.getAttribute('data-index')) : -1;\n        },\n\n        /**\n         * @param {MouseEvent} _event\n         */\n        onTabListClick(_event) {\n            const tabIndex = this.getTabIndexByElem(_event.target);\n\n            if (tabIndex > -1) {\n                this.setActiveTabByIndex(tabIndex);\n            }\n        },\n\n        /**\n         * @param {KeyboardEvent} _event\n         */\n        onTabListKeyup(_event) {\n            const elem = keyboardNavigation(_event, '[role=\"tab\"]:not([aria-disabled=\"true\"])', true);\n\n            if (elem) {\n                const tabIndex = this.getTabIndexByElem(elem);\n\n                if (tabIndex > -1) {\n                    this.setActiveTabByIndex(tabIndex);\n                }\n            }\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
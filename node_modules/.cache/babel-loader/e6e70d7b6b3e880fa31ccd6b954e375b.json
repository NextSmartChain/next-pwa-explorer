{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/Erc1155TransationList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/Erc1155TransationList.vue","mtime":1657708591670},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;AAkEA;AACA;AACA;AACA;AACA;AAEA;EACAA,6BADA;EAGAC;IAAAC;EAAA,CAHA;EAKAC;IACAC;MACAC,YADA;MAEAC,WAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,YADA;MAEAC;IAFA;EANA,CALA;EAiBAG,IAjBA,kBAiBA;IAAA;;IACA;MACAC,SADA;MAEAC,UACA;QACAX,YADA;QAEAY,+CAFA;QAGAC,cAHA;QAIAC;MAJA,CADA,EAOA;QACAd,iBADA;QAEAY,4CAFA;QAGAE,yBAHA;QAIA;QACAC;MALA,CAPA,EAcA;QACAf,eADA;QAEAY,+CAFA;QAGA;QACAE,sBAJA;QAKAE;UACA;;UACA;;UAEA;YACA;UACA,CAFA,MAEA;YACA;UACA;QACA,CAdA;QAeAC,iBAfA,CAgBA;QACA;;MAjBA,CAdA,EAiCA;QACAjB,eADA;QAEAY,0BAFA;QAGAE,uBAHA;QAIAE;UACA;QACA,CANA;QAOAH;MAPA,CAjCA,EA0CA;QACAb,YADA;QAEAY,aAFA;QAGAE,uBAHA;QAIAD,cAJA;QAKAG;UACA;QACA;MAPA,CA1CA,EAmDA;QACAhB,aADA;QAEAY,uBAFA;QAGAE,6BAHA,CAIA;;MAJA,CAnDA,CAFA;MA4DAI,YA5DA;MA6DAC,SA7DA;MA8DAC,cA9DA;MA+DAC;IA/DA;EAiEA,CAnFA;EAqFAC;IACA;AACA;AACA;AACA;AACA;IACAC,WANA,yBAMA;MACA;MAEA;IACA;EAVA,CArFA;EAkGAC;IACApB,OADA,qBACA;MACA;IACA;EAHA,CAlGA;EAwGAqB,OAxGA,qBAwGA;IAAA;;IACA;MACA;MACAC;QAAA;MAAA;IACA,CAHA,MAGA;MACA;IACA;EACA,CA/GA;EAiHAC;IACAC,QADA,sBACA;MAAA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAAC;gBACA;gBADA;gBAAA,cAIAC,WAJA;gBAAA;gBAAA,OAIA,+BAJA;;cAAA;gBAAA;gBAIArB,IAJA;gBAKAsB,KALA,GAKAtB,UALA;;gBAAA,MAOAsB,mEAPA;kBAAA;kBAAA;gBAAA;;gBAQA;gBARA;;cAAA;gBAYA;kBACA;gBACA;;gBAEA;;gBAEA;kBACA;gBACA,CAFA,MAEA;kBACA;oBACA;kBACA;gBACA;;gBAEA,+DA1BA,CA4BA;;;gBA5BA;gBAAA;;cAAA;gBAAA;gBAAA;gBA8BA;gBACA;;cA/BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAkCA,CAnCA;IAqCAC,gBArCA,4BAqCAH,MArCA,EAqCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAI,m3CADA;kBA+BAC;oBACA9B,uBADA;oBAEA+B,SAFA;oBAGAN;kBAHA,CA/BA;kBAoCAO;gBApCA,EADA;;cAAA;gBACA3B,IADA;gBAAA,kCAwCAA,qCAxCA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyCA,CA9EA;IAgFA4B,SAhFA,uBAgFA;MACA;QACA;MACA;IACA,CApFA;;IAsFA;AACA;AACA;AACA;AACA;AACA;IACAC,OA5FA,mBA4FAC,KA5FA,EA4FA;MACA;IACA,CA9FA;;IAgGA;AACA;AACA;AACA;AACA;AACA;IACAC,KAtGA,iBAsGAD,KAtGA,EAsGA;MACA;IACA,CAxGA;IA0GAE;EA1GA;AAjHA","names":["name","components","FDataTable","props","address","type","default","required","delay","data","items","columns","label","width","itemProp","hidden","formatter","oneLineMode","pageInfo","error","loading","addressCol","computed","cMobileView","watch","created","setTimeout","methods","loadData","cursor","cloneObject","edges","fetchTransations","query","variables","count","fetchPolicy","fetchMore","getFrom","_item","getTo","timestampToDate"],"sourceRoot":"src/data-tables","sources":["Erc1155TransationList.vue"],"sourcesContent":["\n<template>\n    <div class=\"address-asset-list-dt\">\n        <div v-if=\"error\" class=\"query-error\">{{ error }}</div>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :loading=\"loading\"\n            :disable-infinite-scroll=\"!pageInfo.hasNext\"\n            :mobile-view=\"cMobileView\"\n            infinite-scroll\n            first-m-v-column-width=\"5\"\n            class=\"f-data-table-body-bg-color\"\n            @fetch-more=\"fetchMore\"\n        >\n            <template v-slot:column-hash=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <router-link :to=\"{name: 'transaction-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                    </div>\n                </div>\n                <template v-else>\n                    <router-link :to=\"{name: 'transaction-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                </template>\n            </template>\n\n            <template v-slot:column-timestamp=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                    </div>\n                </div>\n                <template v-else>\n                    <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                </template>\n            </template>\n\n            <template v-slot:column-address=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\"><router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link></div>\n                </div>\n                <template v-else>\n                    <router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                </template>\n            </template>\n\n            <template v-slot:column-token=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        {{ value }}\n                    </div>\n                </div>\n                <template v-else>\n                    <router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                </template>\n            </template>\n        </f-data-table>\n    </div>\n</template>\n\n<script>\nimport FDataTable from '../components/core/FDataTable/FDataTable.vue';\nimport {formatHexToInt, timestampToDate} from \"@/filters.js\";\nimport {cloneObject, getNestedProp} from '@/utils';\nimport gql from \"graphql-tag\";\nimport {ERC1155_TRANSACTION_TYPE} from \"@/constants/transaction-types.js\";\n\nexport default {\n    name: 'Erc1155TransationList',\n\n    components: { FDataTable },\n\n    props: {\n        address: {\n            type: String,\n            default: '',\n            required: true,\n        },\n        delay: {\n            type: Number,\n            default: 0,\n        }\n    },\n\n    data() {\n        return {\n            items: [],\n            columns: [\n                {\n                    name: 'hash',\n                    label: this.$t('view_transaction_list.tx_hash'),\n                    width: '200px',\n                    itemProp: 'trx.trxHash',\n                },\n                {\n                    name: 'timestamp',\n                    label: this.$t('view_transaction_list.time'),\n                    itemProp: 'trx.timeStamp',\n                    // width: '220px',\n                    hidden: this.cMobileView\n                },\n                {\n                    name: 'address',\n                    label: this.$t('view_transaction_list.address'),\n                    // width: '460px',\n                    itemProp: 'trx.sender',\n                    formatter: (_value, _item) => {\n                        const from = this.getFrom(_item);\n                        const to = this.getTo(_item);\n\n                        if (this.addressCol.toLowerCase() !== from.toLowerCase()) {\n                            return from;\n                        } else {\n                            return to;\n                        }\n                    },\n                    oneLineMode: true,\n                    // hidden: !this.addressCol\n                    // width: '180px'\n                },\n                {\n                    name: 'tokenid',\n                    label: this.$t('token_id'),\n                    itemProp: 'trx.tokenId',\n                    formatter: (value) => {\n                        return parseInt(value, 16);\n                    },\n                    width: '100px',\n                },\n                {\n                    name: 'type',\n                    label: 'Type',\n                    itemProp: 'trx.trxType',\n                    width: '120px',\n                    formatter: (value) => {\n                        return this.$t(ERC1155_TRANSACTION_TYPE[value] || '');\n                    },\n                },\n                {\n                    name: 'token',\n                    label: this.$t('token'),\n                    itemProp: 'trx.token.address',\n                    // width: '250px',\n                },\n            ],\n            pageInfo: {},\n            error: '',\n            loading: false,\n            addressCol: this.address,\n        };\n    },\n\n    computed: {\n        /**\n         * Property is set to `true`, if 'transaction-list-dt-mobile-view' breakpoint is reached.\n         *\n         * @return {Boolean}\n         */\n        cMobileView() {\n            const dataTableBreakpoint = this.$store.state.breakpoints['transaction-list-dt-mobile-view'];\n\n            return dataTableBreakpoint && dataTableBreakpoint.matches;\n        },\n    },\n\n    watch: {\n        address() {\n            this.loadData();\n        }\n    },\n\n    created() {\n        if (this.delay > 0) {\n            this.loading = true;\n            setTimeout(() => { this.loadData(); }, this.delay);\n        } else {\n            this.loadData();\n        }\n    },\n\n    methods: {\n        async loadData(cursor = '') {\n            this.loading = true;\n\n            try {\n                const data = cloneObject(await this.fetchTransations(cursor));\n                const edges = data.edges;\n\n                if (edges && edges.length > 0 && edges[0].id && this.items.length > 0) {\n                    this.loading = false;\n                    return;\n                }\n\n                if (edges && edges.length === 0) {\n                    this.loading = false;\n                }\n\n                this.pageInfo = cloneObject(data.pageInfo);\n\n                if (this.items.length === 0 || !cursor) {\n                    this.items = edges;\n                } else {\n                    for (let i = 0, len1 = edges.length; i < len1; i++) {\n                        this.items.push(edges[i]);\n                    }\n                }\n\n                this.$emit('records-count', formatHexToInt(data.totalCount));\n\n                // this.loading = false;\n            } catch (_error) {\n                this.loading = false;\n                this.error = _error;\n            }\n\n        },\n\n        async fetchTransations(cursor) {\n            const data = await this.$apollo.query({\n                query: gql`\n                    query GetERC1155Transactions($address: Address!, $cursor: Cursor, $count: Int!) {\n                        account (address: $address) {\n                            address\n                            erc1155TxList(cursor: $cursor, count: $count) {\n                                pageInfo {\n                                    first\n                                    last\n                                    hasNext\n                                    hasPrevious\n                                }\n                                totalCount\n                                edges {\n                                    cursor\n                                    trx {\n                                        trxHash\n                                        sender\n                                        recipient\n                                        amount\n                                        timeStamp\n                                        tokenId\n                                        token {\n                                            address\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `,\n                variables: {\n                    address: this.address,\n                    count: 20,\n                    cursor: cursor || null\n                },\n                fetchPolicy: 'network-only',\n            });\n\n            return data.data.account.erc1155TxList || {};\n        },\n\n        fetchMore() {\n            if (this.pageInfo.hasNext) {\n                this.loadData(this.pageInfo.last);\n            }\n        },\n\n        /**\n         * Get item's 'from' value.\n         *\n         * @param {Object} _item\n         * @return {*}\n         */\n        getFrom(_item) {\n            return getNestedProp(_item, 'trx.sender')\n        },\n\n        /**\n         * Get item's 'to' value.\n         *\n         * @param {Object} _item\n         * @return {*}\n         */\n        getTo(_item) {\n            return getNestedProp(_item, 'trx.recipient')\n        },\n\n        timestampToDate,\n    },\n};\n</script>\n"]}]}
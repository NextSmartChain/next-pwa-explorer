{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FForm/FForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FForm/FForm.vue","mtime":1657708592826},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;AAgBA;AACA;AACA;AAEA;EACAA,+BADA;EAGAC;IACA;IACAC;MACAC,aADA;MAEAC;IAFA,CAFA;;IAMA;IACAC;MACAF,aADA;MAEAC;IAFA,CAPA;;IAWA;IACAE;MACAH,aADA;MAEAC;IAFA;EAZA,CAHA;EAqBAG,OArBA,qBAqBA;IACA;AACA;AACA;AACA;IACA;EACA,CA3BA;EA6BAC,OA7BA,qBA6BA;IACA;EACA,CA/BA;EAiCAC;IACA;AACA;AACA;AACA;AACA;AACA;IACAC,UAPA,sBAOAC,KAPA,EAOA;MACA;;MAEA;QACA;MACA;;MAEA;IACA,CAfA;;IAiBA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC,WAxBA,uBAwBAC,MAxBA,EAwBAC,UAxBA,EAwBA;MACA;MAEA,kCACAC;QAAA;MAAA,uBADA;IAGA,CA9BA;IAgCAC,eAhCA,2BAgCAC,KAhCA,EAgCA;MACA;;MAEA;QACA;MACA;;MAEA;QACA;QACA;UACA;YACA;cACAC,oBADA,CAEA;YACA,CAJA,CAKA;;UACA,CANA,MAMA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;QACA,CAZA,MAYA;UACAA;QACA;MACA;;MAEA;IACA,CA3DA;;IA6DA;AACA;AACA;AACA;IACAC,iBAjEA,6BAiEAN,MAjEA,EAiEA;MAAA;;MACA;MAEA;QACA;;QAEA;UACA;YACA;cACAO;YACA,CAFA,MAEA;cACAA,6CADA,CACA;YACA;UACA,CANA,MAMA;YACAA;UACA;QACA;MACA,CAdA;MAgBA;IACA,CArFA;;IAuFA;AACA;AACA;IACAC,MA1FA,oBA0FA;MACA;MACA;MAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;MAGAC;IACA,CA7GA;;IA+GA;AACA;AACA;IACAC,KAlHA,mBAkHA;MACA;IACA,CApHA;IAsHAC,gBAtHA,8BAsHA;MACA;MACA;MACA;;MAEA;QACA;UACAC;;UACA;YACA;YACAC;UACA;QACA;MACA;;MAEA;IACA,CAtIA;;IAwIA;AACA;AACA;AACA;AACA;IACAC,aA7IA,2BA6IA;MACA;MACA;MACA;;MAEA;QACA;UACAC;;UACA;YACAA;UACA;QACA;;QAEAC;;QACA;UACA;;UAEA;YACA;UACA;;UAEA;QACA;;QAEA;MACA;;MAEA;IACA,CAzKA;;IA2KA;AACA;AACA;AACA;AACA;IACAC,QAhLA,oBAgLAC,MAhLA,EAgLA;MACA;MACA;QACAC,sBADA;QAEAd,0CAFA,CAGA;;MAHA;;MAMA;QACA;QAEA;QAEA;MACA;IACA,CA/LA;;IAiMA;AACA;AACA;AACA;AACA;IACAe,QAtMA,oBAsMAF,MAtMA,EAsMA;MACA;QACAA;MACA;;MAEA,IACA,yBACA;QACAX,8BADA;QAEAc,sCAFA;QAGAC,0BAHA;QAIAC;MAJA,EAFA,EAQA;QACAL;;QAEA;MACA;IACA,CAxNA;;IA0NA;AACA;AACA;AACA;AACA;IACAM,OA/NA,mBA+NAN,MA/NA,EA+NA;MACA;QACAC,sBADA;QAEAd,0CAFA,CAGA;;MAHA;IAKA;EArOA;AAjCA","names":["mixins","props","submitOnChange","type","default","cancelSubmit","centerForm","created","mounted","methods","getElement","_name","getElements","_names","_container","isArray","getElementValue","_elem","value","getElementsValues","data","submit","eSubmitBtn","reset","getErrorMessages","elem","errorMessages","checkValidity","child","valid","onChange","_event","eTarget","onSubmit","lastChangedElem","action","method","onInput"],"sourceRoot":"src/components/core/FForm","sources":["FForm.vue"],"sourcesContent":["<template>\n    <form\n        ref=\"form\"\n        method=\"post\"\n        class=\"f-form\"\n        :class=\"{ 'center-form': centerForm }\"\n        novalidate\n        @submit=\"onSubmit\"\n        @change=\"onChange\"\n        @input=\"onInput\"\n    >\n        <slot></slot>\n    </form>\n</template>\n\n<script>\nimport events from '../../../mixins/events.js';\nimport { isArray } from '../../../utils';\nimport { eventBusMixin } from '../../../mixins/event-bus.js';\n\nexport default {\n    mixins: [events, eventBusMixin],\n\n    props: {\n        /** Submit form when an element is changed */\n        submitOnChange: {\n            type: Boolean,\n            default: false,\n        },\n        /** Call preventDefault() on form submit event. */\n        cancelSubmit: {\n            type: Boolean,\n            default: true,\n        },\n        /** Center form body. */\n        centerForm: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    created() {\n        /**\n         * Reference to last changed form element\n         * @type {HTMLElement}\n         */\n        this._lastChangedElem = null;\n    },\n\n    mounted() {\n        this.$refs.form = this.$el.querySelector('form') || this.$el;\n    },\n\n    methods: {\n        /**\n         * Get form element by its name.\n         *\n         * @param {String} _name\n         * @return {HTMLElement|null}\n         */\n        getElement(_name) {\n            const eForm = this.$refs.form;\n\n            if (_name && eForm) {\n                return eForm.querySelector(`[name=${_name}]`);\n            }\n\n            return null;\n        },\n\n        /**\n         * Get form elements by names.\n         *\n         * @param {Array} [_names] Form elements names.\n         * @param {HTMLElement} [_container]\n         * @return {NodeListOf<HTMLElementTagNameMap[string]> | NodeListOf<Element> | NodeListOf<SVGElementTagNameMap[string]> | *}\n         */\n        getElements(_names, _container) {\n            const container = _container || this.$refs.form;\n\n            return container.querySelectorAll(\n                isArray(_names) ? _names.map((_name) => `[name=\"${_name}\"]`).join(',') : '[name]'\n            );\n        },\n\n        getElementValue(_elem) {\n            let value = null;\n\n            if (!_elem) {\n                return value;\n            }\n\n            if (!_elem.disabled) {\n                // && !_elem.hasAttribute('readonly')) {\n                if (_elem.nodeName === 'INPUT') {\n                    if (_elem.type === 'checkbox' || _elem.type === 'radio') {\n                        if (_elem.checked) {\n                            value = _elem.value;\n                            // value = (_elem.value === 'on' ? true : _elem.value);\n                        }\n                        // alert(_elem.checked + ' ' + value);\n                    } else if (_elem.type === 'file') {\n                        value = _elem.files;\n                    } else {\n                        value = _elem.value;\n                    }\n                } else {\n                    value = _elem.value;\n                }\n            }\n\n            return value;\n        },\n\n        /**\n         * @param {Array} [_names] Form elements names.\n         * @return {Object}\n         */\n        getElementsValues(_names) {\n            const data = {};\n\n            this.getElements(_names).forEach((_elem) => {\n                const value = this.getElementValue(_elem);\n\n                if (value !== null && _elem.name) {\n                    if (_elem.name in data) {\n                        if (isArray(data[_elem.name])) {\n                            data[_elem.name].push(value);\n                        } else {\n                            data[_elem.name] = [data[_elem.name], value]; // ??\n                        }\n                    } else {\n                        data[_elem.name] = value;\n                    }\n                }\n            });\n\n            return data;\n        },\n\n        /**\n         * Submit form.\n         */\n        submit() {\n            const eForm = this.$refs.form;\n            let eSubmitBtn = eForm.querySelector('[type=\"submit\"]');\n\n            /*\n                if (!eSubmitBtn) {\n                    eSubmitBtn = createElement({\n                        name: 'button',\n                        attributes: {\n                            type: 'submit',\n                            style: 'display: none;'\n                        }\n                    });\n\n                    eForm.appendChild(eSubmitBtn);\n                }\n*/\n\n            eSubmitBtn.click();\n        },\n\n        /**\n         * Reset form.\n         */\n        reset() {\n            this.$refs.form.reset();\n        },\n\n        getErrorMessages() {\n            const errorMessages = [];\n            const elements = this.$refs.form.elements;\n            let elem;\n\n            if (elements) {\n                for (let i = 0, len1 = elements.length; i < len1; i++) {\n                    elem = elements[i];\n                    if (elem.name && elem.willValidate && !elem.checkValidity()) {\n                        // console.log(elem.name, elem.validity, elem.validationMessage);\n                        errorMessages.push(elem.validationMessage);\n                    }\n                }\n            }\n\n            return errorMessages;\n        },\n\n        /**\n         * Check form validity.\n         *\n         * @return {Boolean}\n         */\n        checkValidity() {\n            const children = this.$children;\n            let valid = true;\n            let child;\n\n            if (this.$refs.form) {\n                for (let i = 0, len1 = children.length; i < len1; i++) {\n                    child = children[i];\n                    if (typeof child.validate === 'function') {\n                        child.validate(true);\n                    }\n                }\n\n                valid = this.$refs.form.checkValidity();\n                if (!valid) {\n                    const errorMessages = this.getErrorMessages();\n\n                    if (errorMessages.length > 0) {\n                        this._eventBus.emit('aria-alert-replace', errorMessages.join(''));\n                    }\n\n                    this.emitCustomEvent('f-form-not-valid');\n                }\n\n                return valid;\n            }\n\n            return valid;\n        },\n\n        /**\n         * Triggered when form element changes.\n         *\n         * @param {Event} _event\n         */\n        onChange(_event) {\n            // this.getElementValue()\n            this.emitCustomEvent('f-form-change', {\n                eTarget: _event.target,\n                value: this.getElementValue(_event.target),\n                // originalEvent: _event\n            });\n\n            if (this.submitOnChange) {\n                this._lastChangedElem = _event.target;\n\n                this.submit();\n\n                this._lastChangedElem = null;\n            }\n        },\n\n        /**\n         * Triggered on form submit.\n         *\n         * @param {Event} _event\n         */\n        onSubmit(_event) {\n            if (this.cancelSubmit) {\n                _event.preventDefault();\n            }\n\n            if (\n                !this.checkValidity() ||\n                !this.emitCustomEvent('f-form-submit', {\n                    data: this.getElementsValues(),\n                    lastChangedElem: this._lastChangedElem,\n                    action: this._submitAction,\n                    method: this.method,\n                })\n            ) {\n                _event.preventDefault();\n\n                this._submitAction = this.action;\n            }\n        },\n\n        /**\n         * Triggered on form element input event.\n         *\n         * @param {Event} _event\n         */\n        onInput(_event) {\n            this.emitCustomEvent('f-form-input', {\n                eTarget: _event.target,\n                value: this.getElementValue(_event.target),\n                // originalEvent: _event\n            });\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
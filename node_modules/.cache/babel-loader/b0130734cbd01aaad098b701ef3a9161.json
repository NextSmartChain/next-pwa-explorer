{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/FValidatorList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/FValidatorList.vue","mtime":1657708591458},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC;EADA,CADA;EAKAC;IACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACAC,WADA;MAEAC,OAFA,sBAEA;QACA;MACA;IAJA,CAPA;;IAaA;AACA;AACA;IACAC;MACAF,YADA;MAEAC;IAFA;EAhBA,CALA;EA2BAE;IACAC;MACAC,00BADA;MAuBAC,MAvBA,kBAuBAC,KAvBA,EAuBAC,IAvBA,EAuBA;QACA;UACAC,aADA;UAEAC,iBAFA;UAGAC;QAHA;QAKA;QACA;QACA;QACA;QACA;QACA;;QAEA;UACAC;UAEAC;UAEAD;YACA;YACAE;YACAA;YACAA;;YAEA;cACAC;YACA;;YAEA;cACAA;YACA;;YAEA;cACAC;YACA;;YAEA;cACAC;YACA;UACA,CArBA,EALA,CA4BA;;UACA;YACAD;cACAE;cACAF;YACA,CAHA;YAKA;UACA,CApCA,CAsCA;;;UACA;YACAC;cACAC;cACAD;YACA,CAHA;YAKA;UACA;;UAEA;YACA;UACA,CAlDA,CAoDA;;;UACAC;UACAN;YACA;cACAM;cACAC;YACA;UACA,CALA;;UAOA;YACA;YAEA;UACA;;UAEA;UAEA;UACA;QACA;MACA,CA5GA;MA6GAC,IA7GA,kBA6GA;QACA;MACA,CA/GA;MAgHAC,KAhHA,iBAgHAC,MAhHA,EAgHA;QACA;MACA;IAlHA;EADA,CA3BA;EAkJAC,OAlJA,qBAkJA;IACA;MACA;IACA;EACA,CAtJA;EAwJAX,IAxJA,kBAwJA;IACA;MACAY,UADA;MAEAC,uBAFA;MAGAC,WACA;QACAC,YADA;QAEAC,0CAFA;QAGAC,8BAHA;QAIAC,wBAJA;QAKAC;MALA,CADA,EAQA;QACAJ,YADA;QAEAC,0CAFA;QAGAC,2BAHA;QAIAG,4BAJA;QAKAD;MALA,CARA,EAeA;QACAJ,UADA;QAEAC,wCAFA;QAGAK,yBAHA;QAIAD,mBAJA;QAKAD;MALA,CAfA,EAsBA;QACAJ,qBADA;QAEAC,6CAFA;QAGAI,sBAHA;QAIAD;MAJA,CAtBA,EA4BA;QACAJ,gBADA;QAEAC,8CAFA;QAGAK;UAAA;QAAA,CAHA;QAIAD,mBAJA;QAKAD;MALA,CA5BA,EAmCA;QACAJ,aADA;QAEAC,iDAFA;QAGAK;UAAA;QAAA,CAHA;QAIAD,mBAJA;QAKAF;MALA,CAnCA,EA0CA;QACAH,mBADA;QAEAC,+CAFA;QAGAK;UAAA;QAAA,CAHA;QAIAD,mBAJA;QAKAF;MALA,CA1CA,EAiDA;MACA;QACAH,kBADA;QAEAC,kDAFA;QAGAK;UAAA;QAAA,CAHA;QAIAD,mBAJA;QAKA;QACAF;MANA;MAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MAlEA;IAHA;EAwEA,CAjOA;EAmOAI;IACA;AACA;AACA;AACA;AACA;IACAC,WANA,yBAMA;MACA;MAEA;IACA,CAVA;IAYAC,QAZA,sBAYA;MACA;IACA;EAdA,CAnOA;EAoPAC;IACAC,QADA,oBACAC,CADA,EACAC,CADA,EACA;MACA;IACA,CAHA;IAKAC,oBALA,kCAKA;MAAA;;MAAA;;MACAC;;MACAA;QACAC;MACA,CAFA;IAGA,CAVA;IAYAC,kBAZA;IAaAC,gCAbA;IAcAC,sBAdA;IAeAC;EAfA;AApPA","names":["components","FDataTable","props","items","type","default","code","apollo","stakers","query","result","_data","_key","selfStaked","totalDelegated","totalStaked","data","shuffle","totals","_item","offline","flagged","remove","inactive","skip","error","_error","created","dItems","dValidatorListError","dColumns","name","label","itemProp","cssClass","width","sortFunc","formatter","computed","cMobileView","cLoading","methods","sortDesc","a","b","removeItemsByIndices","_indices","_array","WEIToFTM","timestampToDate","numToFixed","clampDowntime"],"sourceRoot":"src/data-tables","sources":["FValidatorList.vue"],"sourcesContent":["<template>\n    <div class=\"validator-list-dt\">\n        <template v-if=\"!dValidatorListError\">\n            <f-data-table\n                :columns=\"dColumns\"\n                :items=\"dItems\"\n                :mobile-view=\"cMobileView\"\n                :loading=\"cLoading\"\n                :code=\"code\"\n                first-m-v-column-width=\"6\"\n                fixed-header\n                class=\"f-data-table-body-bg-color\"\n            >\n                <template v-slot:column-logo=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-6 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n                            <div class=\"validator-img\">\n                                <img v-if=\"value\"  :src=\"value\" :alt=\"item.stakerInfo.name\" class=\"not-fluid\">\n                                <img v-else src=\"/img/next-logo.png\" alt=\"next logo\" class=\"not-fluid\">\n                            </div>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <div class=\"validator-img\">\n                            <img v-if=\"value\"  :src=\"value\" :alt=\"item.stakerInfo.name\" class=\"not-fluid\">\n                            <img v-else src=\"/img/next-logo.png\" alt=\"next logo\" class=\"not-fluid\">\n                        </div>\n                    </template>\n                </template>\n\n                <template v-slot:column-name=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-6 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n                            {{ value }}\n                            <a v-if=\"(item.stakerInfo ? item.stakerInfo.website || item.stakerInfo.contact : '')\" :href=\"(item.stakerInfo ? item.stakerInfo.website || item.stakerInfo.contact : '')\" target=\"_blank\" rel=\"nofollow\" class=\"validator-website\">\n                                <icon data=\"@/assets/svg/external-link-alt.svg\"></icon>\n                            </a>\n                        </div>\n                    </div>\n                    <template v-else>\n                        {{ value }}\n                        <a v-if=\"(item.stakerInfo ? item.stakerInfo.website || item.stakerInfo.contact : '')\" :href=\"(item.stakerInfo ? item.stakerInfo.website || item.stakerInfo.contact : '')\" target=\"_blank\" rel=\"nofollow\" class=\"validator-website\">\n                            <icon data=\"@/assets/svg/external-link-alt.svg\"></icon>\n                        </a>\n                    </template>\n                </template>\n\n\n                <template v-slot:column-stakerAddress=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-6 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n<!--                            <div v-if=\"item.isOffline\" class=\"offline\">{{ $t('view_validator_list.offline') }}</div>-->\n                            <router-link :to=\"{name: 'validator-detail', params: {address: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                        </div>\n                    </div>\n                    <template v-else>\n<!--                        <div v-if=\"item.isOffline\" class=\"offline\">{{ $t('view_validator_list.offline') }}</div>-->\n                        <router-link :to=\"{name: 'validator-detail', params: {address: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                    </template>\n                </template>\n\n<!--\n                <template v-slot:column-link=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-6 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n                            <a v-if=\"value\" :href=\"value\" target=\"_blank\" rel=\"nofollow\">\n                                <icon data=\"@/assets/svg/external-link-alt.svg\" width=\"20\" height=\"20\"></icon>\n                            </a>\n                            <template v-else>-</template>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <a v-if=\"value || (item.stakerInfo && item.stakerInfo.contact)\" :href=\"value || (item.stakerInfo && item.stakerInfo.contact)\" target=\"_blank\" rel=\"nofollow\">\n                            <icon data=\"@/assets/svg/external-link-alt.svg\"></icon>\n                        </a>\n                        <template v-else>-</template>\n                    </template>\n                </template>\n-->\n            </f-data-table>\n        </template>\n\n        <template v-else>\n            <div class=\"query-error\">{{ dValidatorListError }}</div>\n        </template>\n    </div>\n</template>\n\n<script>\n    import FDataTable from \"../components/core/FDataTable/FDataTable.vue\";\n    import gql from 'graphql-tag';\n    import { WEIToFTM } from \"../utils/transactions.js\";\n    import {formatHexToInt, timestampToDate, numToFixed, formatNumberByLocale, clampDowntime} from \"../filters.js\";\n    import {sortByHex, sortByLocaleString, sortByString} from \"../utils/array-sorting.js\";\n    import {cloneObject} from \"@/utils\";\n    import {shuffle} from \"@/utils/array.js\";\n\n    export default {\n        components: {\n            FDataTable\n        },\n\n        props: {\n            /**\n             * Data and action.\n             * Actions:\n             * '' - replace items\n             * 'append' - append new items\n             */\n            items: {\n                type: Array,\n                default() {\n                    return [];\n                }\n            },\n            /**\n             * Grid's code used for identification in local storage\n             */\n            code: {\n                type: String,\n                default: '',\n            },\n        },\n\n        apollo: {\n            stakers: {\n                query: gql`\n                    query Stakers {\n                        stakers {\n                            id\n                            stakerAddress\n                            isOffline\n                            isCheater\n                            isActive\n                            createdTime\n                            stake\n                            totalStake\n                            delegatedMe\n                            downtime\n                            validatorInfo {\n                                name\n                                website\n                                contact\n                                logoUrl\n                            }\n                        }\n                    }\n                `,\n                result(_data, _key) {\n                    const totals = {\n                        selfStaked: 0,\n                        totalDelegated: 0,\n                        totalStaked: 0\n                    };\n                    let data;\n                    const offline = [];\n                    const flagged = [];\n                    const inactive = [];\n                    let remove = [];\n                    const tUnknown = this.$t('view_validator_list.unknown');\n\n                    if (_key === 'stakers') {\n                        data = [..._data.data.stakers];\n\n                        shuffle(data);\n\n                        data.forEach((_item, _idx) => {\n                            // _item.total_staked = WEIToFTM(_item.stake) + WEIToFTM(_item.delegatedMe);\n                            totals.selfStaked += parseFloat(numToFixed(WEIToFTM(_item.stake), 0));\n                            totals.totalDelegated += parseFloat(numToFixed(WEIToFTM(_item.delegatedMe), 0));\n                            totals.totalStaked += parseFloat(numToFixed(WEIToFTM(_item.totalStake), 0));\n\n                            if (!_item.stakerInfo) {\n                                _item.stakerInfo = {};\n                            }\n\n                            if (!_item.stakerInfo.name) {\n                                _item.stakerInfo.name = tUnknown;\n                            }\n\n                            if (_item.isOffline && !_item.isCheater) {\n                                offline.push(_idx);\n                            }\n\n                            if (_item.isCheater) {\n                                flagged.push(_idx);\n                            }\n                        });\n\n                        // offline validators\n                        if (offline.length > 0) {\n                            offline.forEach((_idx, _index) => {\n                                remove.push(_idx);\n                                offline[_index] = cloneObject(data[_idx]);\n                            });\n\n                            this.$emit('validator-list-offline', offline);\n                        }\n\n                        // flagged validators\n                        if (flagged.length > 0) {\n                            flagged.forEach((_idx, _index) => {\n                                remove.push(_idx);\n                                flagged[_index] = cloneObject(data[_idx]);\n                            });\n\n                            this.$emit('validator-list-flagged', flagged);\n                        }\n\n                        if (remove.length > 0) {\n                            this.removeItemsByIndices(data, remove);\n                        }\n\n                        // inactive validators\n                        remove = [];\n                        data.forEach((_item, _idx) => {\n                            if (!_item.isActive) {\n                                remove.push(_idx);\n                                inactive.push(cloneObject(data[_idx]));\n                            }\n                        });\n\n                        if (inactive.length > 0) {\n                            this.removeItemsByIndices(data, remove);\n\n                            this.$emit('validator-list-inactive', inactive);\n                        }\n\n                        this.dItems = data;\n\n                        this.$emit('records-count', this.dItems.length);\n                        this.$emit('validator-list-totals', totals);\n                    }\n                },\n                skip() {\n                    return (this.items.length > 0);\n                },\n                error(_error) {\n                    this.dValidatorListError = _error.message;\n                }\n            }\n        },\n\n        created() {\n            if (this.items.length > 0) {\n                this.dItems = this.items;\n            }\n        },\n\n        data() {\n            return {\n                dItems: [],\n                dValidatorListError: '',\n                dColumns: [\n                    {\n                        name: 'logo',\n                        label: this.$t('view_validator_list.logo'),\n                        itemProp: 'stakerInfo.logoUrl',\n                        cssClass: 'align-center',\n                        width: '80px'\n                    },\n                    {\n                        name: 'name',\n                        label: this.$t('view_validator_list.name'),\n                        itemProp: 'stakerInfo.name',\n                        sortFunc: sortByLocaleString,\n                        width: '200px',\n                    },\n                    {\n                        name: 'id',\n                        label: this.$t('view_validator_list.id'),\n                        formatter: formatHexToInt,\n                        sortFunc: sortByHex,\n                        width: '80px'\n                    },\n                    {\n                        name: 'stakerAddress',\n                        label: this.$t('view_validator_list.address'),\n                        sortFunc: sortByString,\n                        width: '200px',\n                    },\n                    {\n                        name: 'downtime',\n                        label: this.$t('view_validator_list.downtime'),\n                        formatter: _value => `${clampDowntime((Math.round(formatHexToInt(_value) / 10000000) / 100))} s`,\n                        sortFunc: sortByHex,\n                        width: '140px',\n                    },\n                    {\n                        name: 'stake',\n                        label: this.$t('view_validator_list.self_staked'),\n                        formatter: _value => formatNumberByLocale(numToFixed(WEIToFTM(_value), 0), 0),\n                        sortFunc: sortByHex,\n                        cssClass: 'align-end',\n                    },\n                    {\n                        name: 'delegatedMe',\n                        label: this.$t('view_validator_list.delegated'),\n                        formatter: _value => formatNumberByLocale(numToFixed(WEIToFTM(_value), 0), 0),\n                        sortFunc: sortByHex,\n                        cssClass: 'align-end',\n                    },\n                    // computed\n                    {\n                        name: 'totalStake',\n                        label: this.$t('view_validator_list.total_staked'),\n                        formatter: _value => formatNumberByLocale(numToFixed(WEIToFTM(_value), 0), 0),\n                        sortFunc: sortByHex,\n                        // sortDir: 'desc',\n                        cssClass: 'align-end',\n                    },\n/*\n                    {\n                        name: 'link',\n                        label: this.$t('view_validator_list.link'),\n                        itemProp: 'stakerInfo.website',\n                        css: {textAlign: 'center'},\n                        width: '50px'\n                    }\n*/\n                ]\n            }\n        },\n\n        computed: {\n            /**\n             * Property is set to `true`, if 'tvalidator-list-dt-mobile-view' breakpoint is reached.\n             *\n             * @return {Boolean}\n             */\n            cMobileView() {\n                const dataTableBreakpoint = this.$store.state.breakpoints['validator-list-dt-mobile-view'];\n\n                return (dataTableBreakpoint && dataTableBreakpoint.matches);\n            },\n\n            cLoading() {\n                return this.loading || this.$apollo.queries.stakers.loading;\n            }\n        },\n\n        methods: {\n            sortDesc(a, b) {\n                return b - a;\n            },\n\n            removeItemsByIndices(_array = [], _indices = []) {\n                _indices.sort(this.sortDesc)\n                _indices.forEach((_idx) => {\n                    _array.splice(_idx, 1);\n                })\n            },\n\n            WEIToFTM,\n            timestampToDate,\n            numToFixed,\n            clampDowntime,\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .validator-list-dt {\n        .offline {\n            color: $error-color;\n            font-weight: bold;\n        }\n    }\n</style>\n"]}]}
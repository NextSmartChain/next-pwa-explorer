{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/eslint-loader/index.js??ref--14-0!/mnt/websites/ex.nextsmartchain.com/src/plugins/ffetch.js","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/plugins/ffetch.js","mtime":1657708590550},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/eslint-loader/index.js","mtime":1655491290241}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getCurrentHttpProvider","getNestedProp","fFetch","FFetch","_query","operationName","query","od","definitions","find","_item","kind","name","value","fetch","variables","loc","source","body","_queryName","_pageInfo","edges","pageInfo","hasNext","last","nested","indexOf","cursor","fetchGQLQuery","data","item","concat","_data","_url","_method","fetchOptions","method","headers","response","resp","JSON","stringify","json","text","_Vue","prototype","$fFetch"],"sources":["/mnt/websites/ex.nextsmartchain.com/src/plugins/ffetch.js"],"sourcesContent":["import { getCurrentHttpProvider } from '@/plugins/apollo-provider.js';\nimport { getNestedProp } from '@/utils';\n// import { print } from 'graphql';\n\n/** @type {FFetch} */\nexport let fFetch = null;\n\n/**\n * Minimalistic graphql client.\n */\nexport class FFetch {\n    /**\n     * @param {Vue} _Vue\n     */\n    static install(_Vue) {\n        if (!fFetch) {\n            fFetch = new FFetch();\n            _Vue.prototype.$fFetch = fFetch;\n        }\n    }\n\n    /**\n     * Fetch graphql query.\n     *\n     * @param {{variables: {}, query: object|string, operationName: string}} _query\n     * @return {Promise<*>}\n     */\n    fetchGQLQuery(_query) {\n        if (!_query.operationName && typeof _query.query === 'object') {\n            const od = _query.query.definitions.find((_item) => _item.kind === 'OperationDefinition');\n\n            if (od && od.name) {\n                _query.operationName = od.name.value;\n            }\n        }\n\n        return this.fetch({\n            operationName: _query.operationName,\n            variables: _query.variables,\n            query: _query.query.loc ? _query.query.loc.source.body : _query.query,\n        });\n    }\n\n    /**\n     * Fetch all records.\n     *\n     * @param {{variables: {}, query: object|string, operationName: string}} _query\n     * @param {string} _queryName\n     * @param {object} _pageInfo\n     * @return {Promise<[]>}\n     */\n    async fetchAllGQLQuery(_query, _queryName, _pageInfo) {\n        let edges = [];\n        let pageInfo = _pageInfo || { hasNext: true, last: null };\n        let data;\n        let item;\n        const nested = _queryName.indexOf('.') > -1;\n\n        while (pageInfo && pageInfo.hasNext) {\n            _query.variables.cursor = pageInfo.last;\n\n            data = await this.fetchGQLQuery(_query);\n\n            if (nested) {\n                item = getNestedProp(data.data, _queryName);\n            } else {\n                item = data.data[_queryName];\n            }\n\n            pageInfo = item.pageInfo;\n            if (item.edges) {\n                edges = edges.concat(item.edges);\n            }\n        }\n\n        if (nested) {\n            item.edges = edges;\n            return data;\n        } else {\n            return edges;\n        }\n    }\n\n    /**\n     * @param {object} _data\n     * @param {string} _url\n     * @param {string} [_method]\n     * @return {Promise<*>}\n     * @private\n     */\n    async fetch(_data, _url = getCurrentHttpProvider(), _method = 'POST') {\n        const fetchOptions = {\n            method: _method,\n            headers: {\n                'Content-type': 'application/json',\n            },\n        };\n        let response = null;\n        let resp = null;\n\n        fetchOptions.body = JSON.stringify(_data || {});\n\n        response = await fetch(_url, fetchOptions);\n\n        if (fetchOptions.headers['Content-type'] === 'application/json') {\n            resp = await response.json();\n        } else {\n            resp = response.text();\n        }\n\n        return resp;\n    }\n}\n"],"mappings":"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"}]}
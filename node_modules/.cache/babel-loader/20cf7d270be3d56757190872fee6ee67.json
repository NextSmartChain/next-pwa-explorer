{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/Erc20TransationList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/Erc20TransationList.vue","mtime":1657708591622},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;AAyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E,CACA;AACA;;AAEA;EACAA,2BADA;EAGAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA,CAHA;EAKAC;IACAC;MACAC,YADA;MAEAC,WAFA;MAGAC;IAHA,CADA;IAMAC;MACAH,YADA;MAEAC;IAFA;EANA,CALA;EAiBAG,IAjBA,kBAiBA;IAAA;;IACA;MACAC,SADA;MAEAC,UACA;QACAd,YADA;QAEAe,+CAFA;QAGAC,cAHA;QAIAC;MAJA,CADA,EAOA;QACAjB,iBADA;QAEAe,4CAFA;QAGAE,yBAHA;QAIA;QACAC;MALA,CAPA,EAcA;QACAlB,eADA;QAEAe,+CAFA;QAGA;QACAE,sBAJA;QAKAE;UACA;;UACA;;UAEA;YACA;UACA,CAFA,MAEA;YACA;UACA;QACA,CAdA;QAeAC,iBAfA,CAgBA;QACA;;MAjBA,CAdA,EAiCA;QACApB,cADA;QAEAe,yDAFA;QAGAE,sBAHA;QAIAE;UACA;UACA;QACA,CAPA;QAQAH,cARA;QASAK;UACAC;QADA;MATA,CAjCA,EA8CA;QACAtB,YADA;QAEAe,aAFA;QAGAE,uBAHA;QAIAE;UACA;QACA;MANA,CA9CA,EAsDA;QACAnB,aADA;QAEAe,uBAFA;QAGAE,qBAHA;QAIAD;MAJA,CAtDA,CAFA;MA+DAO,YA/DA;MAgEAC,SAhEA;MAiEAC,cAjEA;MAkEAC;IAlEA;EAoEA,CAtFA;EAwFAC;IACA;AACA;AACA;AACA;AACA;IACAC,WANA,yBAMA;MACA;MAEA;IACA;EAVA,CAxFA;EAqGAC;IACAtB,OADA,qBACA;MACA;IACA;EAHA,CArGA;EA2GAuB,OA3GA,qBA2GA;IAAA;;IACA;MACA;MACAC;QAAA;MAAA;IACA,CAHA,MAGA;MACA;IACA;EACA,CAlHA;EAoHAC;IACAC,QADA,sBACA;MAAA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAAC;gBACA;gBADA;gBAAA,cAIAC,WAJA;gBAAA;gBAAA,OAIA,+BAJA;;cAAA;gBAAA;gBAIAvB,IAJA;gBAKAwB,KALA,GAKAxB,UALA;;gBAAA,MAOAwB,mEAPA;kBAAA;kBAAA;gBAAA;;gBAQA;gBARA;;cAAA;gBAYA;kBACA;gBACA;;gBAEA;;gBAEA;kBACA;gBACA,CAFA,MAEA;kBACA;oBACA;kBACA;gBACA;;gBAEA,+DA1BA,CA4BA;;;gBA5BA;gBAAA;;cAAA;gBAAA;gBAAA;gBA8BA;gBACA;;cA/BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAkCA,CAnCA;IAqCAC,gBArCA,4BAqCAH,MArCA,EAqCA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACA;kBACAI,gkDADA;kBAmCAC;oBACAhC,uBADA;oBAEAiC,SAFA;oBAGAN;kBAHA,CAnCA;kBAwCAO;gBAxCA,EADA;;cAAA;gBACA7B,IADA;gBAAA,kCA4CAA,mCA5CA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA6CA,CAlFA;IAoFA8B,SApFA,uBAoFA;MACA;QACA;MACA;IACA,CAxFA;;IA0FA;AACA;AACA;AACA;AACA;AACA;IACAC,OAhGA,mBAgGAC,KAhGA,EAgGA;MACA;IACA,CAlGA;;IAoGA;AACA;AACA;AACA;AACA;AACA;IACAC,KA1GA,iBA0GAD,KA1GA,EA0GA;MACA;IACA,CA5GA;IA8GAE;EA9GA;AApHA","names":["name","components","FCryptoSymbol","FTokenValue","FAccountTransactionAmount","FDataTable","props","address","type","default","required","delay","data","items","columns","label","width","itemProp","hidden","formatter","oneLineMode","css","textAlign","pageInfo","error","loading","addressCol","computed","cMobileView","watch","created","setTimeout","methods","loadData","cursor","cloneObject","edges","fetchTransations","query","variables","count","fetchPolicy","fetchMore","getFrom","_item","getTo","timestampToDate"],"sourceRoot":"src/data-tables","sources":["Erc20TransationList.vue"],"sourcesContent":["\n<template>\n    <div class=\"address-asset-list-dt\">\n        <div v-if=\"error\" class=\"query-error\">{{ error }}</div>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :loading=\"loading\"\n            :disable-infinite-scroll=\"!pageInfo.hasNext\"\n            :mobile-view=\"cMobileView\"\n            infinite-scroll\n            first-m-v-column-width=\"5\"\n            class=\"f-data-table-body-bg-color\"\n            @fetch-more=\"fetchMore\"\n        >\n            <template v-slot:column-hash=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <router-link :to=\"{name: 'transaction-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                    </div>\n                </div>\n                <template v-else>\n                    <router-link :to=\"{name: 'transaction-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                </template>\n            </template>\n\n            <template v-slot:column-timestamp=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                    </div>\n                </div>\n                <template v-else>\n                    <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                </template>\n            </template>\n\n            <template v-slot:column-address=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\"><router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link></div>\n                </div>\n                <template v-else>\n                    <router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                </template>\n            </template>\n\n            <template v-slot:column-amount=\"{ value, item, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <template v-if=\"addressCol\">\n                            <f-account-transaction-amount\n                                :address=\"addressCol\"\n                                :from=\"getFrom(item)\"\n                                :to=\"getTo(item)\"\n                                :amount=\"value\"\n                            />\n                        </template>\n                        <template v-else>\n                            <f-token-value :value=\"value\" :decimals=\"2\" :use-placeholder=\"false\" no-currency />\n                        </template>\n                    </div>\n                </div>\n                <template v-else>\n                    <template v-if=\"addressCol\">\n                        <f-account-transaction-amount\n                            :address=\"addressCol\"\n                            :from=\"getFrom(item)\"\n                            :to=\"getTo(item)\"\n                            :amount=\"value\"\n                        />\n                    </template>\n                    <template v-else>\n                        <f-token-value :value=\"value\" :decimals=\"2\" :use-placeholder=\"false\" no-currency />\n                    </template>\n                </template>\n            </template>\n\n            <template v-slot:column-token=\"{ value, column }\">\n                <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                    <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                    <div class=\"col\">\n                        <div class=\"smalltoken\">\n                            <f-crypto-symbol :token=\"value\" no-symbol img-width=\"16px\" img-height=\"16px\" /> {{ value.name }} ({{ value.symbol }})\n                        </div>\n                    </div>\n                </div>\n                <template v-else>\n                    <div class=\"smalltoken\">\n                        <f-crypto-symbol :token=\"value\" no-symbol img-width=\"16px\" img-height=\"16px\" /> {{ value.name }} ({{ value.symbol }})\n                    </div>\n<!--                    <router-link :to=\"{name: 'asset-detail', params: {address: value.address}}\" :title=\"value\">\n                        <f-crypto-symbol :token=\"value\" no-symbol img-width=\"16px\" img-height=\"16px\" /> {{ value.name }} ({{ value.symbol }})\n                    </router-link>-->\n                </template>\n            </template>\n        </f-data-table>\n    </div>\n</template>\n\n<script>\nimport FDataTable from '../components/core/FDataTable/FDataTable.vue';\nimport {formatHexToInt, timestampToDate} from \"@/filters.js\";\nimport {cloneObject, getNestedProp} from '@/utils';\nimport gql from \"graphql-tag\";\nimport FAccountTransactionAmount from \"@/components/FAccountTransactionAmount.vue\";\nimport FTokenValue from \"@/components/core/FTokenValue/FTokenValue.vue\";\nimport FCryptoSymbol from \"@/components/core/FCryptoSymbol/FCryptoSymbol.vue\";\nimport {ERC20_TRANSACTION_TYPE} from \"@/constants/transaction-types.js\";\n// import { stringSort } from '../utils/array-sorting.js';\n// import { formatNumberByLocale } from '../filters.js';\n\nexport default {\n    name: 'Erc20TransationList',\n\n    components: {FCryptoSymbol, FTokenValue, FAccountTransactionAmount, FDataTable },\n\n    props: {\n        address: {\n            type: String,\n            default: '',\n            required: true,\n        },\n        delay: {\n            type: Number,\n            default: 0,\n        }\n    },\n\n    data() {\n        return {\n            items: [],\n            columns: [\n                {\n                    name: 'hash',\n                    label: this.$t('view_transaction_list.tx_hash'),\n                    width: '200px',\n                    itemProp: 'trx.trxHash',\n                },\n                {\n                    name: 'timestamp',\n                    label: this.$t('view_transaction_list.time'),\n                    itemProp: 'trx.timeStamp',\n                    // width: '220px',\n                    hidden: this.cMobileView\n                },\n                {\n                    name: 'address',\n                    label: this.$t('view_transaction_list.address'),\n                    // width: '460px',\n                    itemProp: 'trx.sender',\n                    formatter: (_value, _item) => {\n                        const from = this.getFrom(_item);\n                        const to = this.getTo(_item);\n\n                        if (this.addressCol.toLowerCase() !== from.toLowerCase()) {\n                            return from;\n                        } else {\n                            return to;\n                        }\n                    },\n                    oneLineMode: true,\n                    // hidden: !this.addressCol\n                    // width: '180px'\n                },\n                {\n                    name: 'amount',\n                    label: `${this.$t('view_transaction_list.amount')}`,\n                    itemProp: 'trx.amount',\n                    formatter: (value, item) => {\n                        // return formatNumberByLocale(numToFixed(WEIToFTM(_value), 2), 2)\n                        return this.$defi.fromTokenValue(value, item.trx.token);\n                    },\n                    width: '150px',\n                    css: {\n                        textAlign: 'end'\n                    }\n                },\n                {\n                    name: 'type',\n                    label: 'Type',\n                    itemProp: 'trx.trxType',\n                    formatter: (value) => {\n                        return this.$t(ERC20_TRANSACTION_TYPE[value] || '');\n                    },\n                },\n                {\n                    name: 'token',\n                    label: this.$t('token'),\n                    itemProp: 'trx.token',\n                    width: '250px',\n                },\n            ],\n            pageInfo: {},\n            error: '',\n            loading: false,\n            addressCol: this.address,\n        };\n    },\n\n    computed: {\n        /**\n         * Property is set to `true`, if 'transaction-list-dt-mobile-view' breakpoint is reached.\n         *\n         * @return {Boolean}\n         */\n        cMobileView() {\n            const dataTableBreakpoint = this.$store.state.breakpoints['transaction-list-dt-mobile-view'];\n\n            return dataTableBreakpoint && dataTableBreakpoint.matches;\n        },\n    },\n\n    watch: {\n        address() {\n            this.loadData();\n        }\n    },\n\n    created() {\n        if (this.delay > 0) {\n            this.loading = true;\n            setTimeout(() => { this.loadData(); }, this.delay);\n        } else {\n            this.loadData();\n        }\n    },\n\n    methods: {\n        async loadData(cursor = '') {\n            this.loading = true;\n\n            try {\n                const data = cloneObject(await this.fetchTransations(cursor));\n                const edges = data.edges;\n\n                if (edges && edges.length > 0 && edges[0].id && this.items.length > 0) {\n                    this.loading = false;\n                    return;\n                }\n\n                if (edges && edges.length === 0) {\n                    this.loading = false;\n                }\n\n                this.pageInfo = cloneObject(data.pageInfo);\n\n                if (this.items.length === 0 || !cursor) {\n                    this.items = edges;\n                } else {\n                    for (let i = 0, len1 = edges.length; i < len1; i++) {\n                        this.items.push(edges[i]);\n                    }\n                }\n\n                this.$emit('records-count', formatHexToInt(data.totalCount));\n\n                // this.loading = false;\n            } catch (_error) {\n                this.loading = false;\n                this.error = _error;\n            }\n\n        },\n\n        async fetchTransations(cursor) {\n            const data = await this.$apollo.query({\n                query: gql`\n                    query GetERC20Transactions($address: Address!, $cursor: Cursor, $count: Int!) {\n                        account (address: $address) {\n                            address\n                            erc20TxList(cursor: $cursor, count: $count) {\n                                pageInfo {\n                                    first\n                                    last\n                                    hasNext\n                                    hasPrevious\n                                }\n                                totalCount\n                                edges {\n                                    cursor\n                                    trx {\n                                        trxHash\n                                        sender\n                                        recipient\n                                        amount\n                                        timeStamp\n                                        trxType\n                                        token {\n                                            address\n                                            name\n                                            symbol\n                                            decimals\n                                            logoURL\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                `,\n                variables: {\n                    address: this.address,\n                    count: 20,\n                    cursor: cursor || null\n                },\n                fetchPolicy: 'network-only',\n            });\n\n            return data.data.account.erc20TxList || {};\n        },\n\n        fetchMore() {\n            if (this.pageInfo.hasNext) {\n                this.loadData(this.pageInfo.last);\n            }\n        },\n\n        /**\n         * Get item's 'from' value.\n         *\n         * @param {Object} _item\n         * @return {*}\n         */\n        getFrom(_item) {\n            return getNestedProp(_item, 'trx.sender')\n        },\n\n        /**\n         * Get item's 'to' value.\n         *\n         * @param {Object} _item\n         * @return {*}\n         */\n        getTo(_item) {\n            return getNestedProp(_item, 'trx.recipient')\n        },\n\n        timestampToDate,\n    },\n};\n</script>\n"]}]}
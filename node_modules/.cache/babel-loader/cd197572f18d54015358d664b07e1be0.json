{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/FBreakpoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/FBreakpoints.vue","mtime":1657708593498},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL21udC93ZWJzaXRlcy9leC5uZXh0c21hcnRjaGFpbi5jb20vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgZXZlbnRzIGZyb20gIi4uL21peGlucy9ldmVudHMuanMiOwp2YXIgX3NwYWNlc1JFID0gLyAvZzsKLyoqCiAqIE1hbmFnZXMgbWVkaWEgcXVlcnkgYnJlYWtwb2ludHMuCiAqLwoKZXhwb3J0IGRlZmF1bHQgewogIG1peGluczogW2V2ZW50c10sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8qKiBBcnJheSBvZiBwcm9wcyBvZiBgRkJyZWFrcG9pbnRgIGNvbXBvbmVudHMqLwogICAgdGhpcy5fYnJlYWtwb2ludHMgPSBbXTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnByZXBhcmVCcmVha3BvaW50cygpOwogICAgdGhpcy5iaW5kQnJlYWtwb2ludHNFdmVudHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogQ29sbGVjdCBgRkJyZWFrcG9pbnRgJ3MgZGF0YSBmcm9tIGRlZmF1bHQgc2xvdC4KICAgICAqLwogICAgcHJlcGFyZUJyZWFrcG9pbnRzOiBmdW5jdGlvbiBwcmVwYXJlQnJlYWtwb2ludHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY2hpbGRyZW4gPSB0aGlzLiRjaGlsZHJlbjsKICAgICAgdmFyIGJyZWFrcG9pbnQ7CiAgICAgIGNoaWxkcmVuLmZvckVhY2goZnVuY3Rpb24gKF9jaGlsZCkgewogICAgICAgIGlmIChfY2hpbGQuJG9wdGlvbnMuX2NvbXBvbmVudFRhZyA9PT0gJ2YtYnJlYWtwb2ludCcpIHsKICAgICAgICAgIGJyZWFrcG9pbnQgPSBfb2JqZWN0U3ByZWFkKHt9LCBfY2hpbGQuJHByb3BzKTsKICAgICAgICAgIGJyZWFrcG9pbnQubWVkaWEgPSBfY2hpbGQuZE1lZGlhOwoKICAgICAgICAgIF90aGlzLl9icmVha3BvaW50cy5wdXNoKGJyZWFrcG9pbnQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogQmluZCBtZWRpYSBxdWVyeSBldmVudHMuCiAgICAgKi8KICAgIGJpbmRCcmVha3BvaW50c0V2ZW50czogZnVuY3Rpb24gYmluZEJyZWFrcG9pbnRzRXZlbnRzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuX2JyZWFrcG9pbnRzLmZvckVhY2goZnVuY3Rpb24gKF9icmVha3BvaW50KSB7CiAgICAgICAgdmFyIGV2ID0gd2luZG93Lm1hdGNoTWVkaWEoX2JyZWFrcG9pbnQubWVkaWEpOwogICAgICAgIGV2LmFkZExpc3RlbmVyKGZ1bmN0aW9uIChfZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdGhpczIub25CcmVha3BvaW50Q2hhbmdlKF9ldmVudCk7CiAgICAgICAgfSk7IC8vIGJlY2F1c2Ugb2YgSUUxMS4uLgoKICAgICAgICBfdGhpczIub25CcmVha3BvaW50Q2hhbmdlKGV2KTsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogUmV0dXJuIHN0cmluZyB3aXRob3V0IHNwYWNlcy4KICAgICAqCiAgICAgKiBAcGFyYW0gX3N0cgogICAgICogQHJldHVybiB7U3RyaW5nfQogICAgICovCiAgICB3aXRob3V0U3BhY2VzOiBmdW5jdGlvbiB3aXRob3V0U3BhY2VzKF9zdHIpIHsKICAgICAgcmV0dXJuIF9zdHIucmVwbGFjZShfc3BhY2VzUkUsICcnKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDYWxsZWQgd2hlbiBtZWRpYSBxdWVyeSBicmVha3BvaW50IGNoYW5nZXMuCiAgICAgKgogICAgICogQHBhcmFtIHtFdmVudH0gX2V2ZW50CiAgICAgKi8KICAgIG9uQnJlYWtwb2ludENoYW5nZTogZnVuY3Rpb24gb25CcmVha3BvaW50Q2hhbmdlKF9ldmVudCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBicmVha3BvaW50ID0gdGhpcy5fYnJlYWtwb2ludHMuZmlsdGVyKGZ1bmN0aW9uIChfYnJlYWtwb2ludCkgewogICAgICAgIHJldHVybiBfdGhpczMud2l0aG91dFNwYWNlcyhfYnJlYWtwb2ludC5tZWRpYSkgPT09IF90aGlzMy53aXRob3V0U3BhY2VzKF9ldmVudC5tZWRpYSk7CiAgICAgIH0pOwoKICAgICAgdmFyIGRhdGE7CgogICAgICBpZiAoYnJlYWtwb2ludC5sZW5ndGggPT09IDEpIHsKICAgICAgICBkYXRhID0gewogICAgICAgICAgdmFsdWU6IGJyZWFrcG9pbnRbMF0udmFsdWUsCiAgICAgICAgICBjb2RlOiBicmVha3BvaW50WzBdLmNvZGUsCiAgICAgICAgICBtZWRpYTogX2V2ZW50Lm1lZGlhLAogICAgICAgICAgbWF0Y2hlczogX2V2ZW50Lm1hdGNoZXMKICAgICAgICB9OwogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0QnJlYWtwb2ludCcsIGRhdGEpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;AAOA;AAEA;AAEA;AACA;AACA;;AACA;EACAA,gBADA;EAGAC,OAHA,qBAGA;IACA;IACA;EACA,CANA;EAQAC,OARA,qBAQA;IACA;IACA;EACA,CAXA;EAaAC;IACA;AACA;AACA;IACAC,kBAJA,gCAIA;MAAA;;MACA;MACA;MAEAC;QACA;UACAC,+BACAC,aADA;UAIAD;;UAEA;QACA;MACA,CAVA;IAWA,CAnBA;;IAqBA;AACA;AACA;IACAE,qBAxBA,mCAwBA;MAAA;;MACA;QACA;QACAC;UAAA;QAAA,GAFA,CAEA;;QACA;MACA,CAJA;IAKA,CA9BA;;IAgCA;AACA;AACA;AACA;AACA;AACA;IACAC,aAtCA,yBAsCAC,IAtCA,EAsCA;MACA;IACA,CAxCA;;IA0CA;AACA;AACA;AACA;AACA;IACAC,kBA/CA,8BA+CAC,MA/CA,EA+CA;MAAA;;MACA,0CACA;QAAA,OACA,8EADA;MAAA,CADA;;MAIA;;MAEA;QACAC;UACAC,0BADA;UAEAC,wBAFA;UAGAC,mBAHA;UAIAC;QAJA;QAOA;MACA;IACA;EAhEA;AAbA","names":["mixins","created","mounted","methods","prepareBreakpoints","children","breakpoint","_child","bindBreakpointsEvents","ev","withoutSpaces","_str","onBreakpointChange","_event","data","value","code","media","matches"],"sourceRoot":"src/components","sources":["FBreakpoints.vue"],"sourcesContent":["<template>\n    <div style=\"display: none\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import events from \"../mixins/events.js\";\n\n    const _spacesRE = / /g;\n\n    /**\n     * Manages media query breakpoints.\n     */\n    export default {\n        mixins: [events],\n\n        created() {\n            /** Array of props of `FBreakpoint` components*/\n            this._breakpoints = [];\n        },\n\n        mounted() {\n            this.prepareBreakpoints();\n            this.bindBreakpointsEvents();\n        },\n\n        methods: {\n            /**\n             * Collect `FBreakpoint`'s data from default slot.\n             */\n            prepareBreakpoints() {\n                const children = this.$children;\n                let breakpoint;\n\n                children.forEach(_child => {\n                    if (_child.$options._componentTag === 'f-breakpoint') {\n                        breakpoint = {\n                            ..._child.$props\n                        };\n\n                        breakpoint.media = _child.dMedia;\n\n                        this._breakpoints.push(breakpoint);\n                    }\n                });\n            },\n\n            /**\n             * Bind media query events.\n             */\n            bindBreakpointsEvents() {\n                this._breakpoints.forEach(_breakpoint => {\n                    const ev = window.matchMedia(_breakpoint.media);\n                    ev.addListener(_event => this.onBreakpointChange(_event)); // because of IE11...\n                    this.onBreakpointChange(ev);\n                });\n            },\n\n            /**\n             * Return string without spaces.\n             *\n             * @param _str\n             * @return {String}\n             */\n            withoutSpaces(_str) {\n                return _str.replace(_spacesRE, '');\n            },\n\n            /**\n             * Called when media query breakpoint changes.\n             *\n             * @param {Event} _event\n             */\n            onBreakpointChange(_event) {\n                const breakpoint = this._breakpoints.filter(\n                    _breakpoint =>\n                        this.withoutSpaces(_breakpoint.media) === this.withoutSpaces(_event.media),\n                );\n                let data;\n\n                if (breakpoint.length === 1) {\n                    data = {\n                        value: breakpoint[0].value,\n                        code: breakpoint[0].code,\n                        media: _event.media,\n                        matches: _event.matches,\n                    };\n                    \n                    this.$store.commit('setBreakpoint', data);\n                }\n            }\n        }\n    }\n</script>\n"]}]}
{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/views/DataTablePlayground.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/views/DataTablePlayground.vue","mtime":1657708589818},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgRkRhdGFUYWJsZSBmcm9tICIuLi9jb21wb25lbnRzL2NvcmUvRkRhdGFUYWJsZS9GRGF0YVRhYmxlLnZ1ZSI7CmltcG9ydCBGUGFnaW5hdGlvbiBmcm9tICIuLi9jb21wb25lbnRzL0ZQYWdpbmF0aW9uLnZ1ZSI7CmltcG9ydCB7IGNsb25lT2JqZWN0IH0gZnJvbSAiLi4vdXRpbHMvaW5kZXguanMiOwppbXBvcnQgc2hvcnRpZCBmcm9tICdzaG9ydGlkJzsKdmFyIGNvbHVtbnMgPSBbewogIG5hbWU6ICdudW0nLAogIGxhYmVsOiAnTnVtJywKICB3aWR0aDogJzUwcHgnIC8vIG1pbldpZHRoOiAnMzAwcHgnCgp9LCB7CiAgbmFtZTogJ2NvdW50cnlfbmFtZScsCiAgbGFiZWw6ICdDb3VudHJ5IG5hbWUnLAogIC8vIHdpZHRoOiAnMjAwcHgnLAogIC8vIG1pbldpZHRoOiAnMjAwcHgnLAogIG9uZUxpbmVNb2RlOiB0cnVlLAogIGNzczogewogICAgdGV4dEFsaWduOiAnY2VudGVyJwogIH0KfSwgewogIG5hbWU6ICdjb3VudHJ5X2NvZGUnLAogIGxhYmVsOiAnQ291bnRyeSBjb2RlJywKICB3aWR0aDogJzMwMHB4JyAvLyBtaW5XaWR0aDogJzMwMHB4JwoKfV07CnZhciBpdGVtcyA9IFt7CiAgY291bnRyeV9uYW1lOiAnQ3plY2ggcmVwdWJsaWMnLAogIGNvdW50cnlfY29kZTogJ2N6Jwp9LCB7CiAgY291bnRyeV9uYW1lOiAnU2xvdmFraWEnLAogIGNvdW50cnlfY29kZTogJ3NrJywKICBjc3M6IHsKICAgIGNvbG9yOiAnI2ZmZicsCiAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjODg4JwogIH0KfSwgewogIGNvdW50cnlfbmFtZTogJ1BvbGFuZCcsCiAgY291bnRyeV9jb2RlOiAncGwnCn1dOwoKZm9yICh2YXIgaSA9IDA7IGkgPCA1MDsgaSsrKSB7CiAgaXRlbXMucHVzaCh7CiAgICBjb3VudHJ5X25hbWU6IHNob3J0aWQuZ2VuZXJhdGUoKSwKICAgIGNvdW50cnlfY29kZTogc2hvcnRpZC5nZW5lcmF0ZSgpLnNsaWNlKDIpCiAgfSk7Cn0KCnZhciBpdGVtczIgPSBbewogIGNvdW50cnlfbmFtZTogJ0RldXRjaGxhbmQnLAogIGNvdW50cnlfY29kZTogJ2RlJwp9LCB7CiAgY291bnRyeV9uYW1lOiAnVVNBJywKICBjb3VudHJ5X2NvZGU6ICd1cycKfV07Cgpmb3IgKHZhciBfaSA9IDAsIGxlbjEgPSBpdGVtcy5sZW5ndGg7IF9pIDwgbGVuMTsgX2krKykgewogIGl0ZW1zW19pXS5udW0gPSBfaTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEZEYXRhVGFibGU6IEZEYXRhVGFibGUsCiAgICBGUGFnaW5hdGlvbjogRlBhZ2luYXRpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpdGVtczogY2xvbmVPYmplY3QoaXRlbXMpLAogICAgICBtb2JpbGVWaWV3OiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmNvbHVtbnMgPSBjb2x1bW5zOyAvLyB0aGlzLml0ZW1zID0gaXRlbXM7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgey8vIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uUGFnZUNoYW5nZTogZnVuY3Rpb24gb25QYWdlQ2hhbmdlKF9kYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKCdQQUdFIENIQU5HRWQnLCBfZGF0YSk7CiAgICB9LAogICAgb25OZXdJdGVtc0NsaWNrOiBmdW5jdGlvbiBvbk5ld0l0ZW1zQ2xpY2soKSB7CiAgICAgIHRoaXMuaXRlbXMgPSBjbG9uZU9iamVjdChpdGVtczIpOwogICAgfSwKICAgIG9uTm9JdGVtc0NsaWNrOiBmdW5jdGlvbiBvbk5vSXRlbXNDbGljaygpIHsKICAgICAgdGhpcy5pdGVtcyA9IFtdOwogICAgfSwKICAgIG9uUHVzaENsaWNrOiBmdW5jdGlvbiBvblB1c2hDbGljaygpIHsKICAgICAgdGhpcy5pdGVtcy5wdXNoKHsKICAgICAgICBjb3VudHJ5X25hbWU6ICdBcmdlbnRpbmEnLAogICAgICAgIGNvdW50cnlfY29kZTogJ2FyJwogICAgICB9KTsgLy8gdGhpcy5pdGVtcyA9IGl0ZW1zMjsKICAgIH0sCiAgICBvblByZXBlbmRDbGljazogZnVuY3Rpb24gb25QcmVwZW5kQ2xpY2soKSB7CiAgICAgIHRoaXMuaXRlbXMudW5zaGlmdCh7CiAgICAgICAgY291bnRyeV9uYW1lOiAnQ2FuYWRhJywKICAgICAgICBjb3VudHJ5X2NvZGU6ICdjYScKICAgICAgfSk7IC8vIHRoaXMuaXRlbXMgPSBpdGVtczI7CiAgICB9LAogICAgb25VcGRhdGVDbGljazogZnVuY3Rpb24gb25VcGRhdGVDbGljaygpIHsKICAgICAgdGhpcy4kY2hpbGRyZW5bMF0udXBkYXRlUm93KDEsIHsKICAgICAgICBjb3VudHJ5X25hbWU6ICdDaGlsZScsCiAgICAgICAgY291bnRyeV9jb2RlOiAnY2wnLAogICAgICAgIGNzczogewogICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJ2dyZWVuJwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgb25VcGRhdGVDZWxsQ2xpY2s6IGZ1bmN0aW9uIG9uVXBkYXRlQ2VsbENsaWNrKCkgewogICAgICB0aGlzLiRjaGlsZHJlblswXS51cGRhdGVDZWxsKDEsICdjb3VudHJ5X2NvZGUnLCAnVVBEQVRFRCBDT0RFJyk7CiAgICB9LAogICAgb25Nb2JpbGVWaWV3Q2xpY2s6IGZ1bmN0aW9uIG9uTW9iaWxlVmlld0NsaWNrKCkgewogICAgICB0aGlzLm1vYmlsZVZpZXcgPSAhdGhpcy5tb2JpbGVWaWV3OwogICAgfQogIH0KfTs="},{"version":3,"mappings":";AAwFA;AACA;AACA;AACA;AAEA,eACA;EACAA,WADA;EAEAC,YAFA;EAGAC,aAHA,CAIA;;AAJA,CADA,EAOA;EACAF,oBADA;EAEAC,qBAFA;EAGA;EACA;EACAE,iBALA;EAMAC;IACAC;EADA;AANA,CAPA,EAiBA;EACAL,oBADA;EAEAC,qBAFA;EAGAC,cAHA,CAIA;;AAJA,CAjBA;AAyBA,aACA;EACAI,8BADA;EAEAC;AAFA,CADA,EAKA;EACAD,wBADA;EAEAC,kBAFA;EAGAH;IACAI,aADA;IAEAC;EAFA;AAHA,CALA,EAaA;EACAH,sBADA;EAEAC;AAFA,CAbA;;AAmBA;EACAG;IACAJ,gCADA;IAEAC;EAFA;AAIA;;AAEA,cACA;EACAD,0BADA;EAEAC;AAFA,CADA,EAKA;EACAD,mBADA;EAEAC;AAFA,CALA;;AAWA;EACAG;AACA;;AAEA;EACAC;IACAC,sBADA;IAEAC;EAFA,CADA;EAMAC,IANA,kBAMA;IACA;MACAJ,yBADA;MAEAK;IAFA;EAIA,CAXA;EAaAC,OAbA,qBAaA;IACA,uBADA,CAEA;EACA,CAhBA;EAkBAC,OAlBA,qBAkBA,CACA;EACA,CApBA;EAsBAC;IACAC,YADA,wBACAC,KADA,EACA;MACAC;IACA,CAHA;IAKAC,eALA,6BAKA;MACA;IACA,CAPA;IASAC,cATA,4BASA;MACA;IACA,CAXA;IAaAC,WAbA,yBAaA;MACA;QACAlB,yBADA;QAEAC;MAFA,GADA,CAKA;IACA,CAnBA;IAqBAkB,cArBA,4BAqBA;MACA;QACAnB,sBADA;QAEAC;MAFA,GADA,CAKA;IACA,CA3BA;IA6BAmB,aA7BA,2BA6BA;MACA;QACApB,qBADA;QAEAC,kBAFA;QAGAH;UACAI,aADA;UAEAC;QAFA;MAHA;IAQA,CAtCA;IAwCAkB,iBAxCA,+BAwCA;MACA;IACA,CA1CA;IA4CAC,iBA5CA,+BA4CA;MACA;IACA;EA9CA;AAtBA","names":["name","label","width","oneLineMode","css","textAlign","country_name","country_code","color","backgroundColor","items","components","FDataTable","FPagination","data","mobileView","created","mounted","methods","onPageChange","_data","console","onNewItemsClick","onNoItemsClick","onPushClick","onPrependClick","onUpdateClick","onUpdateCellClick","onMobileViewClick"],"sourceRoot":"src/views","sources":["DataTablePlayground.vue"],"sourcesContent":["<template>\n    <div class=\"narrow-container\">\n        <div class=\"test-controls\">\n            <button @click=\"onNewItemsClick\">Set new items</button>\n            <button @click=\"onNoItemsClick\">No items</button>\n            <button @click=\"onPushClick\">Push item</button>\n            <button @click=\"onPrependClick\">Prepend item</button>\n            <button @click=\"onUpdateClick\">Update item on index 1</button>\n            <button @click=\"onUpdateCellClick\">Update cell on index 1</button>\n            <button @click=\"onMobileViewClick\">Toggle mobile view</button>\n        </div>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :total-items=\"items.length\"\n            :items-per-page=\"20\"\n            :mobile-view=\"mobileView\"\n            height=\"400px\"\n            use-pagination\n            fixed-header\n            class=\"f-data-table-body-bg-color\"\n        >\n            <template v-slot:before-table>\n                <div style=\"text-align: end;padding-bottom: 4px;\">\n                    <h3>Complex data table</h3>\n                    <f-pagination\n                        :total-items=\"items.length\"\n                        :items-per-page=\"20\"\n                        @page-change=\"onPageChange\"\n                    >\n                        <template v-slot:pages=\"{ data }\">\n                            {{ data.currPage }} / {{ data.numPages }} ({{ data.totalItems }})\n                        </template>\n                    </f-pagination>\n                </div>\n            </template>\n\n            <template v-slot:after-table>\n                <div>After table slot</div>\n            </template>\n\n            <template v-slot:column-country_name=\"{ value, column }\">\n                <div v-if=\"column\">\n                    <span class=\"column-label\">{{ column.label }}</span> <span><a href=\"#\">{{ value }}</a></span>\n                </div>\n                <div v-else>\n                    <a href=\"#\">{{ value }}</a>\n                </div>\n            </template>\n\n            <template v-slot:column-country_code=\"{ value, column }\">\n                <div v-if=\"column\">\n                    <span class=\"column-label\">{{ column.label }}</span> {{ value }}\n                </div>\n                <div v-else>\n                    <div class=\"tpl-test\">{{ value }}</div>\n                </div>\n            </template>\n        </f-data-table>\n\n        <h3>Data table with no items</h3>\n        <f-data-table\n            :columns=\"columns\"\n            class=\"f-data-table-body-bg-color\"\n        >\n            <!--            <template v-slot:no-items>No itemo</template>-->\n        </f-data-table>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :total-items=\"items.length\"\n            :items-per-page=\"20\"\n            fixed-header\n            class=\"f-data-table-body-bg-color\"\n        >\n            <template v-slot:before-table>\n                <h3>Default data table</h3>\n            </template>\n            <template v-slot:after-table>\n                <div>After table slot</div>\n            </template>\n        </f-data-table>\n    </div>\n</template>\n\n<script>\n    import FDataTable from \"../components/core/FDataTable/FDataTable.vue\";\n    import FPagination from \"../components/FPagination.vue\";\n    import {cloneObject} from \"../utils/index.js\";\n    import shortid from 'shortid';\n\n    const columns = [\n        {\n            name: 'num',\n            label: 'Num',\n            width: '50px'\n            // minWidth: '300px'\n        },\n        {\n            name: 'country_name',\n            label: 'Country name',\n            // width: '200px',\n            // minWidth: '200px',\n            oneLineMode: true,\n            css: {\n                textAlign: 'center'\n            }\n        },\n        {\n            name: 'country_code',\n            label: 'Country code',\n            width: '300px'\n            // minWidth: '300px'\n        }\n    ];\n\n    const items = [\n        {\n            country_name: 'Czech republic',\n            country_code: 'cz'\n        },\n        {\n            country_name: 'Slovakia',\n            country_code: 'sk',\n            css: {\n                color: '#fff',\n                backgroundColor: '#888'\n            }\n        },\n        {\n            country_name: 'Poland',\n            country_code: 'pl'\n        }\n    ];\n\n    for (let i = 0; i < 50; i++) {\n        items.push({\n            country_name: shortid.generate(),\n            country_code: shortid.generate().slice(2)\n        })\n    }\n\n    const items2 = [\n        {\n            country_name: 'Deutchland',\n            country_code: 'de'\n        },\n        {\n            country_name: 'USA',\n            country_code: 'us'\n        }\n    ];\n\n    for (let i = 0, len1 = items.length; i < len1; i++) {\n        items[i].num = i;\n    }\n\n    export default {\n        components: {\n            FDataTable,\n            FPagination\n        },\n\n        data() {\n            return {\n                items: cloneObject(items),\n                mobileView: false\n            }\n        },\n\n        created() {\n            this.columns = columns;\n            // this.items = items;\n        },\n\n        mounted() {\n            // console.log(this.$route);\n        },\n\n        methods: {\n            onPageChange(_data) {\n                console.log('PAGE CHANGEd', _data);\n            },\n\n            onNewItemsClick() {\n                this.items = cloneObject(items2);\n            },\n\n            onNoItemsClick() {\n                this.items = [];\n            },\n\n            onPushClick() {\n                this.items.push({\n                    country_name: 'Argentina',\n                    country_code: 'ar'\n                });\n                // this.items = items2;\n            },\n\n            onPrependClick() {\n                this.items.unshift({\n                    country_name: 'Canada',\n                    country_code: 'ca'\n                });\n                // this.items = items2;\n            },\n\n            onUpdateClick() {\n                this.$children[0].updateRow(1, {\n                    country_name: 'Chile',\n                    country_code: 'cl',\n                    css: {\n                        color: '#fff',\n                        backgroundColor: 'green'\n                    }\n                });\n            },\n\n            onUpdateCellClick() {\n                this.$children[0].updateCell(1, 'country_code', 'UPDATED CODE');\n            },\n\n            onMobileViewClick() {\n                this.mobileView = !this.mobileView;\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .test-controls {\n        margin-bottom: 1rem;\n\n        button {\n            margin-inline-end: 4px;\n            margin-bottom: 4px;\n        }\n    }\n\n    .tpl-test {\n        color: #fff;\n        background-color: #00B7FF;\n        border-radius: 0.5rem;\n        padding: 0.5rem 1rem;\n    }\n</style>\n"]}]}
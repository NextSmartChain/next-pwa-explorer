{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js!/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js!/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js??ref--1-0!/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FToggleButton/FToggleButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FToggleButton/FToggleButton.vue","mtime":1657708592006},{"path":"/mnt/websites/ex.nextsmartchain.com/babel.config.js","mtime":1657708595230},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/thread-loader/dist/cjs.js","mtime":1655491285854},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY2hlY2tib3hNaXhpbiB9IGZyb20gJ0AvbWl4aW5zL2NoZWNrYm94LmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGVG9nZ2xlQnV0dG9uJywKICBtaXhpbnM6IFtjaGVja2JveE1peGluXSwKICBtb2RlbDogewogICAgcHJvcDogJ2NoZWNrZWQnLAogICAgZXZlbnQ6ICdjaGFuZ2UnCiAgfSwKICBwcm9wczogewogICAgLyoqCiAgICAgKiBQb3NpdGlvbiBvZiB0aHJlZSBkb3RzLgogICAgICoKICAgICAqIEB0eXBlIHsoJ3N0YXJ0JyB8ICdtaWRkbGUnIHwgJ2VuZCcpfQogICAgICovCiAgICBzaXplOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ21kJywKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IoX3ZhbHVlKSB7CiAgICAgICAgcmV0dXJuIFsneHMnLCAnc20nLCAnbWQnLCAnbGcnXS5pbmRleE9mKF92YWx1ZSkgIT09IC0xOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgc2l6ZUNsYXNzOiBmdW5jdGlvbiBzaXplQ2xhc3MoKSB7CiAgICAgIHJldHVybiAidG9nZ2xlLWJ0bi0tIi5jb25jYXQodGhpcy5zaXplKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShfZXZlbnQpIHsKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgX2V2ZW50LnRhcmdldC5jaGVja2VkKTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":"AAkBA;AAEA;EACAA,qBADA;EAGAC,uBAHA;EAKAC;IACAC,eADA;IAEAC;EAFA,CALA;EAUAC;IACA;AACA;AACA;AACA;AACA;IACAC;MACAC,YADA;MAEAC,aAFA;MAGAC;QACA;MACA;IALA;EANA,CAVA;EAyBAC;IACAC,SADA,uBACA;MACA;IACA;EAHA,CAzBA;EA+BAC;IACAC,QADA,oBACAC,MADA,EACA;MACA;IACA;EAHA;AA/BA","names":["name","mixins","model","prop","event","props","size","type","default","validator","computed","sizeClass","methods","onChange","_event"],"sourceRoot":"src/components/core/FToggleButton","sources":["FToggleButton.vue"],"sourcesContent":["<template>\n    <label class=\"toggle-btn\" :class=\"sizeClass\">\n        <!--<input type=\"checkbox\" class=\"toggle-btn__input\" v-bind=\"checkboxProps\" />-->\n        <input type=\"checkbox\" class=\"toggle-btn__input\" v-bind=\"checkboxProps\" @change=\"onChange\" />\n        <span class=\"toggle-btn__btn\"></span>\n        <span class=\"toggle-btn__label\">\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n    <!--\n    <label class=\"option\">\n        <input type=\"checkbox\" v-bind=\"checkboxProps\" @change=\"onChange\" />\n        <span class=\"checkbox\"></span> <slot>{{ label }}</slot>\n    </label>\n    -->\n</template>\n\n<script>\nimport { checkboxMixin } from '@/mixins/checkbox.js';\n\nexport default {\n    name: 'FToggleButton',\n\n    mixins: [checkboxMixin],\n\n    model: {\n        prop: 'checked',\n        event: 'change',\n    },\n\n    props: {\n        /**\n         * Position of three dots.\n         *\n         * @type {('start' | 'middle' | 'end')}\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validator: function (_value) {\n                return ['xs', 'sm', 'md', 'lg'].indexOf(_value) !== -1;\n            },\n        },\n    },\n\n    computed: {\n        sizeClass() {\n            return `toggle-btn--${this.size}`;\n        },\n    },\n\n    methods: {\n        onChange(_event) {\n            this.$emit('change', _event.target.checked);\n        },\n    },\n};\n</script>\n"]}]}
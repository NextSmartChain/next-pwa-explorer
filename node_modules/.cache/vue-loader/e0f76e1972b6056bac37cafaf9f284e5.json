{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FToggleButton/FToggleButton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FToggleButton/FToggleButton.vue","mtime":1657708592006},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGNoZWNrYm94TWl4aW4gfSBmcm9tICdAL21peGlucy9jaGVja2JveC5qcyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnRlRvZ2dsZUJ1dHRvbicsCgogICAgbWl4aW5zOiBbY2hlY2tib3hNaXhpbl0sCgogICAgbW9kZWw6IHsKICAgICAgICBwcm9wOiAnY2hlY2tlZCcsCiAgICAgICAgZXZlbnQ6ICdjaGFuZ2UnLAogICAgfSwKCiAgICBwcm9wczogewogICAgICAgIC8qKgogICAgICAgICAqIFBvc2l0aW9uIG9mIHRocmVlIGRvdHMuCiAgICAgICAgICoKICAgICAgICAgKiBAdHlwZSB7KCdzdGFydCcgfCAnbWlkZGxlJyB8ICdlbmQnKX0KICAgICAgICAgKi8KICAgICAgICBzaXplOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ21kJywKICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiAoX3ZhbHVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gWyd4cycsICdzbScsICdtZCcsICdsZyddLmluZGV4T2YoX3ZhbHVlKSAhPT0gLTE7CiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgIH0sCgogICAgY29tcHV0ZWQ6IHsKICAgICAgICBzaXplQ2xhc3MoKSB7CiAgICAgICAgICAgIHJldHVybiBgdG9nZ2xlLWJ0bi0tJHt0aGlzLnNpemV9YDsKICAgICAgICB9LAogICAgfSwKCiAgICBtZXRob2RzOiB7CiAgICAgICAgb25DaGFuZ2UoX2V2ZW50KSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIF9ldmVudC50YXJnZXQuY2hlY2tlZCk7CiAgICAgICAgfSwKICAgIH0sCn07Cg=="},{"version":3,"sources":["FToggleButton.vue"],"names":[],"mappings":";AAkBA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"FToggleButton.vue","sourceRoot":"src/components/core/FToggleButton","sourcesContent":["<template>\n    <label class=\"toggle-btn\" :class=\"sizeClass\">\n        <!--<input type=\"checkbox\" class=\"toggle-btn__input\" v-bind=\"checkboxProps\" />-->\n        <input type=\"checkbox\" class=\"toggle-btn__input\" v-bind=\"checkboxProps\" @change=\"onChange\" />\n        <span class=\"toggle-btn__btn\"></span>\n        <span class=\"toggle-btn__label\">\n            <slot>{{ label }}</slot>\n        </span>\n    </label>\n    <!--\n    <label class=\"option\">\n        <input type=\"checkbox\" v-bind=\"checkboxProps\" @change=\"onChange\" />\n        <span class=\"checkbox\"></span> <slot>{{ label }}</slot>\n    </label>\n    -->\n</template>\n\n<script>\nimport { checkboxMixin } from '@/mixins/checkbox.js';\n\nexport default {\n    name: 'FToggleButton',\n\n    mixins: [checkboxMixin],\n\n    model: {\n        prop: 'checked',\n        event: 'change',\n    },\n\n    props: {\n        /**\n         * Position of three dots.\n         *\n         * @type {('start' | 'middle' | 'end')}\n         */\n        size: {\n            type: String,\n            default: 'md',\n            validator: function (_value) {\n                return ['xs', 'sm', 'md', 'lg'].indexOf(_value) !== -1;\n            },\n        },\n    },\n\n    computed: {\n        sizeClass() {\n            return `toggle-btn--${this.size}`;\n        },\n    },\n\n    methods: {\n        onChange(_event) {\n            this.$emit('change', _event.target.checked);\n        },\n    },\n};\n</script>\n"]}]}
{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/FDelegationList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/FDelegationList.vue","mtime":1657708591514},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FDelegationList.vue"],"names":[],"mappings":";AAyDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FDelegationList.vue","sourceRoot":"src/data-tables","sourcesContent":["<template>\n    <div class=\"delegation-list-dt\">\n        <template v-if=\"!dBlockListError\">\n            <f-data-table\n                :columns=\"dColumns\"\n                :items=\"dItems\"\n                :disable-infinite-scroll=\"!dHasNext\"\n                :loading=\"cLoading\"\n                first-m-v-column-width=\"5\"\n                infinite-scroll\n                fixed-header\n                class=\"f-data-table-body-bg-color\"\n                @loader-visibility=\"onLoaderVisibility\"\n            >\n                <template v-slot:column-address=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n                            <router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <router-link :to=\"{name: 'address-detail', params: {id: value}}\" :title=\"value\">{{ value | formatHash }}</router-link>\n                    </template>\n                </template>\n\n                <template v-slot:column-amount=\"{ value, item, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-5 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col break-word\">\n                            <f-token-value\n                                :value=\"value\"\n                                :decimals=\"2\"\n                                :use-placeholder=\"false\"\n                                no-currency\n                            />\n                        </div>\n                    </div>\n                    <template v-else>\n                        <f-token-value\n                            :value=\"value\"\n                            :decimals=\"2\"\n                            :use-placeholder=\"false\"\n                            no-currency\n                        />\n                    </template>\n                </template>\n            </f-data-table>\n        </template>\n\n        <template v-else>\n            <div class=\"query-error\">{{ dBlockListError }}</div>\n        </template>\n    </div>\n</template>\n\n<script>\n    import FDataTable from \"../components/core/FDataTable/FDataTable.vue\";\n    import gql from 'graphql-tag';\n    import { WEIToFTM } from \"../utils/transactions.js\";\n    import {formatHexToInt, timestampToDate, formatNumberByLocale, numToFixed, formatDate} from \"../filters.js\";\n    import {cloneObject} from \"@/utils\";\n    import FTokenValue from \"@/components/core/FTokenValue/FTokenValue.vue\";\n\n    export default {\n        components: {\n            FTokenValue,\n            FDataTable\n        },\n\n        props: {\n            /** */\n            stakerId: {\n                type: String,\n                default: ''\n            },\n            /** Number of items per page. */\n            itemsPerPage: {\n                type: Number,\n                default: 20\n            }\n        },\n\n        apollo: {\n            delegationsOf: {\n                query: gql`\n                    query DelegationList($staker: BigInt!, $cursor: Cursor, $count: Int!) {\n                        delegationsOf(staker: $staker, cursor: $cursor, count: $count) {\n                            totalCount\n                            pageInfo {\n                                first\n                                last\n                                hasNext\n                                hasPrevious\n                            }\n                            edges {\n                                cursor\n                                delegation {\n                                    address\n                                    amount\n                                    createdTime\n                                }\n                            }\n                        }\n                    }\n                `,\n                skip() {\n                    return !this.stakerId;\n                },\n                variables() {\n                    return {\n                        staker: this.stakerId,\n                        cursor: null,\n                        count: this.itemsPerPage\n                    }\n                },\n                result(_data, _key) {\n                    let data;\n\n\n                    if (_key === 'delegationsOf') {\n                        data = _data.data.delegationsOf;\n\n                        const edges = cloneObject(data.edges);\n\n                        this.dHasNext = data.pageInfo.hasNext;\n\n                        if (this.dItems.length === 0) {\n                            this.dItems = edges;\n                        } else {\n                            for (let i = 0, len1 = edges.length; i < len1; i++) {\n                                this.dItems.push(edges[i]);\n                            }\n\n                            if (this.loaderVisible) {\n                                this.fetchMore();\n                            }\n                        }\n\n                        this.$emit('records-count', formatHexToInt(data.totalCount));\n                    }\n                },\n                error(_error) {\n                    this.dBlockListError = _error.message;\n                }\n            }\n        },\n\n        data() {\n            return {\n                dItems: [],\n                dHasNext: false,\n                dBlockListError: '',\n                loaderVisible: false,\n                dColumns: [\n                    {\n                        name: 'address',\n                        label: this.$t('delegation_list_dt.address'),\n                        itemProp: 'delegation.address'\n                    },\n                    {\n                        name: 'createdTime',\n                        label: this.$t('delegation_list_dt.created_on'),\n                        itemProp: 'delegation.createdTime',\n                        formatter: _value => formatDate(timestampToDate(formatHexToInt(_value)))\n                    },\n                    {\n                        name: 'amount',\n                        label: this.$t('delegation_list_dt.amount'),\n                        itemProp: 'delegation.amount',\n                        formatter: _value => WEIToFTM(_value),\n                        cssClass: 'align-end',\n                    }\n                ]\n            }\n        },\n\n        computed: {\n            /**\n             * @return {boolean}\n             */\n            cLoading() {\n                return this.$apollo.queries.delegationsOf.loading;\n            },\n\n            /**\n             * Property is set to `true`, if 'tdelegation-list-dt-mobile-view' breakpoint is reached.\n             *\n             * @return {boolean}\n             */\n            cMobileView() {\n                const dataTableBreakpoint = this.$store.state.breakpoints['delegation-list-dt-mobile-view'];\n\n                return (dataTableBreakpoint && dataTableBreakpoint.matches);\n            }\n        },\n\n        created() {\n            /** If `true`, transaction items will be appended. */\n            this.appendItems = false;\n        },\n\n        methods: {\n            fetchMore() {\n                const {delegationsOf} = this;\n\n                if (delegationsOf && delegationsOf.pageInfo && delegationsOf.pageInfo.hasNext) {\n                    const cursor = delegationsOf.pageInfo.last;\n\n                    this.$apollo.queries.delegationsOf.fetchMore({\n                        variables: {\n                            cursor,\n                            count: this.itemsPerPage\n                        },\n                        updateQuery: (previousResult, { fetchMoreResult }) => {\n                            return fetchMoreResult;\n                        }\n                    });\n                }\n            },\n\n            onLoaderVisibility(_visible) {\n                this.loaderVisible = _visible;\n\n                if (this.loaderVisible && !this.cLoading) {\n                    this.fetchMore();\n                }\n            },\n\n            WEIToFTM,\n            timestampToDate,\n            formatHexToInt,\n            formatNumberByLocale,\n            numToFixed,\n            formatDate\n        }\n    }\n</script>\n"]}]}
{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/layouts/FTransactionDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/layouts/FTransactionDetail.vue","mtime":1657708591110},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgRkNhcmQgZnJvbSAiLi4vY29tcG9uZW50cy9jb3JlL0ZDYXJkL0ZDYXJkLnZ1ZSI7CiAgICBpbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJzsKICAgIGltcG9ydCB7IFdFSVRvRlRNIH0gZnJvbSAiLi4vdXRpbHMvdHJhbnNhY3Rpb25zLmpzIjsKICAgIGltcG9ydCB7IGZvcm1hdEhleFRvSW50LCB0aW1lc3RhbXBUb0RhdGUsIGZvcm1hdERhdGUgfSBmcm9tICIuLi9maWx0ZXJzLmpzIjsKICAgIGltcG9ydCBGVHJhbnNhY3Rpb25TdGF0dXMgZnJvbSAiLi4vY29tcG9uZW50cy9GVHJhbnNhY3Rpb25TdGF0dXMudnVlIjsKICAgIGltcG9ydCBUb2tlblRyYW5zYWN0aW9uc0xpc3QgZnJvbSAiQC9kYXRhLXRhYmxlcy9Ub2tlblRyYW5zYWN0aW9uc0xpc3QiOwoKICAgIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgICBjb21wb25lbnRzOiB7CiAgICAgICAgICAgIFRva2VuVHJhbnNhY3Rpb25zTGlzdCwKICAgICAgICAgICAgRlRyYW5zYWN0aW9uU3RhdHVzLAogICAgICAgICAgICBGQ2FyZAogICAgICAgIH0sCgogICAgICAgIHByb3BzOiB7CiAgICAgICAgICAgIC8qKiBUcmFuc2FjdGlvbiBpZCAqLwogICAgICAgICAgICBpZDogewogICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgICAgICBkZWZhdWx0OiAnJwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgYXBvbGxvOiB7CiAgICAgICAgICAgIHRyYW5zYWN0aW9uOiB7CiAgICAgICAgICAgICAgICBxdWVyeTogZ3FsYAogICAgICAgICAgICAgICAgICAgIHF1ZXJ5IFRyYW5zYWN0aW9uQnlIYXNoKCRoYXNoOiBCeXRlczMyISkgewogICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2FjdGlvbiAoaGFzaDogJGhhc2gpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub25jZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZnJvbQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG8KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnYXMKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhc1VzZWQKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdhc1ByaWNlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dERhdGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYmxvY2sgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXAKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuVHJhbnNhY3Rpb25zIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnhJbmRleAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuQWRkcmVzcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuTmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuU3ltYm9sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5UeXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW5JZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuRGVjaW1hbHMKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VuZGVyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjaXBpZW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW1vdW50CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBgLAogICAgICAgICAgICAgICAgdmFyaWFibGVzKCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhhc2g6IHRoaXMuaWQKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXJyb3IoX2Vycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5kVHJhbnNhY3Rpb25CeUhhc2hFcnJvciA9IF9lcnJvci5tZXNzYWdlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgZGF0YSgpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGRUcmFuc2FjdGlvbkJ5SGFzaEVycm9yOiAnJwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgY29tcHV0ZWQ6IHsKICAgICAgICAgICAgY1RyYW5zYWN0aW9uKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNhY3Rpb24gfHwge2Jsb2NrOiB7fX07CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBjVHJhbnNhY3Rpb25GZWUoKSB7CiAgICAgICAgICAgICAgICBjb25zdCB7dHJhbnNhY3Rpb259ID0gdGhpczsKCiAgICAgICAgICAgICAgICBpZiAodHJhbnNhY3Rpb24pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gV0VJVG9GVE0odGhpcy5mb3JtYXRIZXhUb0ludCh0cmFuc2FjdGlvbi5nYXNQcmljZSkgKiB0aGlzLmZvcm1hdEhleFRvSW50KHRyYW5zYWN0aW9uLmdhc1VzZWQpKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNTdGF0dXMoKSB7CiAgICAgICAgICAgICAgICBsZXQgc3RhdHVzID0gMjsKCiAgICAgICAgICAgICAgICBpZiAodGhpcy50cmFuc2FjdGlvbikgewogICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnRyYW5zYWN0aW9uLnN0YXR1cyAhPT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXMgPSB0aGlzLmZvcm1hdEhleFRvSW50KHRoaXMudHJhbnNhY3Rpb24uc3RhdHVzKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgcmV0dXJuIHN0YXR1czsKICAgICAgICAgICAgfQovKgogICAgICAgICAgICBjTG9hZGluZygpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRhcG9sbG8ucXVlcmllcy50cmFuc2FjdGlvbi5sb2FkaW5nOwogICAgICAgICAgICB9CiovCiAgICAgICAgfSwKCiAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICBXRUlUb0ZUTSwKICAgICAgICAgICAgZm9ybWF0SGV4VG9JbnQsCiAgICAgICAgICAgIHRpbWVzdGFtcFRvRGF0ZSwKICAgICAgICAgICAgZm9ybWF0RGF0ZSwKICAgICAgICB9CiAgICB9Cg=="},{"version":3,"sources":["FTransactionDetail.vue"],"names":[],"mappings":";AAufile":"FTransactionDetail.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\n    <div class=\"f-transaction-detail f-data-layout\">\n        <f-card>\n            <template v-if=\"!dTransactionByHashError\">\n                <template v-if=\"cTransaction.hash && cTransaction.hash === '0x0000000000000000000000000000000000000000000000000000000000000000'\">\n                    Transaction <b>{{ id }}</b> does not exist.\n                </template>\n                <template v-else>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.hash') }}</div>\n                        <div class=\"col\"><div class=\"break-word\">{{ id }}</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.status') }}</div>\n                        <div class=\"col\">\n                            <div v-show=\"cTransaction && ('status' in cTransaction)\"><f-transaction-status :status=\"cStatus\"></f-transaction-status></div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.from') }}</div>\n                        <div class=\"col\">\n                            <div class=\"break-word\" v-show=\"cTransaction\">\n                                <router-link :to=\"{name: 'address-detail', params: {id: cTransaction.from}}\">{{ cTransaction.from }}</router-link>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.to') }}</div>\n                        <div class=\"col\">\n                            <div class=\"break-word\" v-show=\"cTransaction\">\n                                <router-link :to=\"{name: 'address-detail', params: {id: cTransaction.to}}\">{{ cTransaction.to }}</router-link>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.time') }}</div>\n                        <div class=\"col\">\n                            <div class=\"break-word\" v-show=\"cTransaction && cTransaction.block.timestamp\">\n                                <timeago :datetime=\"timestampToDate(cTransaction.block.timestamp)\"></timeago>\n                                ({{ formatDate(timestampToDate(cTransaction.block.timestamp)) }})\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.amount') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  WEIToFTM(cTransaction.value) }} NEXT</div></div>\n                    </div>\n                    <!--\n                                <div class=\"row no-collapse\">\n                                    <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.fee') }}</div>\n                                    <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  WEIToFTM(cTransaction.fee) }} NEXT</div></div>\n                                </div>\n                    -->\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.block') }}</div>\n                        <div class=\"col\">\n                            <div class=\"break-word\" v-show=\"cTransaction\">\n                                <router-link :to=\"{name: 'block-detail', params: {id: cTransaction.block.number | formatHexToInt}}\">\n                                    {{cTransaction.block.number | formatHexToInt}}\n                                </router-link>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.gas_used') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  cTransaction.gasUsed | formatHexToInt }}</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.gas_limit') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  cTransaction.gas | formatHexToInt }}</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.gas_price') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  cTransaction.gasPrice | formatHexToInt }} WEI</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.nonce') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  cTransaction.nonce | formatHexToInt }}</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.transaction_fee') }}</div>\n                        <div class=\"col\"><div class=\"break-word\" v-show=\"cTransaction\">{{  cTransactionFee }} NEXT</div></div>\n                    </div>\n                    <div class=\"row no-collapse\">\n                        <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.input_data') }}</div>\n                        <div class=\"col\"><div class=\"break-word input-data\" v-show=\"cTransaction\">{{  encodeURIComponent(cTransaction.inputData) }}</div></div>\n                    </div>\n                    <template v-if=\"cTransaction && cTransaction.tokenTransactions && cTransaction.tokenTransactions.length !== 0\">\n                        <div class=\"row no-collapse\">\n                            <div class=\"col-4 f-row-label\">{{ $t('view_transaction_detail.token_txs') }}</div>\n                        </div>\n                        <token-transactions-list v-if=\"cTransaction\" :token-transactions=\"cTransaction.tokenTransactions\" />\n                    </template>\n                </template>\n            </template>\n            <template v-else>\n                <div class=\"query-error\">{{ $t('view_transaction_detail.transaction_not_found') }}</div>\n            </template>\n        </f-card>\n    </div>\n</template>\n\n<script>\n    import FCard from \"../components/core/FCard/FCard.vue\";\n    import gql from 'graphql-tag';\n    import { WEIToFTM } from \"../utils/transactions.js\";\n    import { formatHexToInt, timestampToDate, formatDate } from \"../filters.js\";\n    import FTransactionStatus from \"../components/FTransactionStatus.vue\";\n    import TokenTransactionsList from \"@/data-tables/TokenTransactionsList\";\n\n    export default {\n        components: {\n            TokenTransactionsList,\n            FTransactionStatus,\n            FCard\n        },\n\n        props: {\n            /** Transaction id */\n            id: {\n                type: String,\n                required: true,\n                default: ''\n            }\n        },\n\n        apollo: {\n            transaction: {\n                query: gql`\n                    query TransactionByHash($hash: Bytes32!) {\n                        transaction (hash: $hash) {\n                            hash\n                            index\n                            nonce\n                            from\n                            to\n                            value\n                            gas\n                            gasUsed\n                            gasPrice\n                            inputData\n                            status\n                            block {\n                                hash\n                                number\n                                timestamp\n                            }\n                            tokenTransactions {\n                                trxIndex\n                                tokenAddress\n                                tokenName\n                                tokenSymbol\n                                tokenType\n                                tokenId\n                                tokenDecimals\n                                type\n                                sender\n                                recipient\n                                amount\n                            }\n                        }\n                    }\n                `,\n                variables() {\n                    return {\n                        hash: this.id\n                    }\n                },\n                error(_error) {\n                    this.dTransactionByHashError = _error.message;\n                }\n            }\n        },\n\n        data() {\n            return {\n                dTransactionByHashError: ''\n            }\n        },\n\n        computed: {\n            cTransaction() {\n                return this.transaction || {block: {}};\n            },\n\n            cTransactionFee() {\n                const {transaction} = this;\n\n                if (transaction) {\n                    return WEIToFTM(this.formatHexToInt(transaction.gasPrice) * this.formatHexToInt(transaction.gasUsed));\n                }\n\n                return 0;\n            },\n\n            cStatus() {\n                let status = 2;\n\n                if (this.transaction) {\n                    if (this.transaction.status !== null) {\n                        status = this.formatHexToInt(this.transaction.status);\n                    }\n                }\n\n                return status;\n            }\n/*\n            cLoading() {\n                return this.$apollo.queries.transaction.loading;\n            }\n*/\n        },\n\n        methods: {\n            WEIToFTM,\n            formatHexToInt,\n            timestampToDate,\n            formatDate,\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n.f-transaction-detail {\n    .token-transaction-item {\n        margin-left: 80px;\n    }\n    .token-transaction-item {\n        padding-bottom: 0.3em;\n    }\n}\n</style>\n"]}]}
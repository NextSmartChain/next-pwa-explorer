{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/FBreakpoints.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/FBreakpoints.vue","mtime":1657708593498},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgZXZlbnRzIGZyb20gIi4uL21peGlucy9ldmVudHMuanMiOwoKICAgIGNvbnN0IF9zcGFjZXNSRSA9IC8gL2c7CgogICAgLyoqCiAgICAgKiBNYW5hZ2VzIG1lZGlhIHF1ZXJ5IGJyZWFrcG9pbnRzLgogICAgICovCiAgICBleHBvcnQgZGVmYXVsdCB7CiAgICAgICAgbWl4aW5zOiBbZXZlbnRzXSwKCiAgICAgICAgY3JlYXRlZCgpIHsKICAgICAgICAgICAgLyoqIEFycmF5IG9mIHByb3BzIG9mIGBGQnJlYWtwb2ludGAgY29tcG9uZW50cyovCiAgICAgICAgICAgIHRoaXMuX2JyZWFrcG9pbnRzID0gW107CiAgICAgICAgfSwKCiAgICAgICAgbW91bnRlZCgpIHsKICAgICAgICAgICAgdGhpcy5wcmVwYXJlQnJlYWtwb2ludHMoKTsKICAgICAgICAgICAgdGhpcy5iaW5kQnJlYWtwb2ludHNFdmVudHMoKTsKICAgICAgICB9LAoKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgKiBDb2xsZWN0IGBGQnJlYWtwb2ludGAncyBkYXRhIGZyb20gZGVmYXVsdCBzbG90LgogICAgICAgICAgICAgKi8KICAgICAgICAgICAgcHJlcGFyZUJyZWFrcG9pbnRzKCkgewogICAgICAgICAgICAgICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLiRjaGlsZHJlbjsKICAgICAgICAgICAgICAgIGxldCBicmVha3BvaW50OwoKICAgICAgICAgICAgICAgIGNoaWxkcmVuLmZvckVhY2goX2NoaWxkID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoX2NoaWxkLiRvcHRpb25zLl9jb21wb25lbnRUYWcgPT09ICdmLWJyZWFrcG9pbnQnKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrcG9pbnQgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5fY2hpbGQuJHByb3BzCiAgICAgICAgICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgICAgICAgICBicmVha3BvaW50Lm1lZGlhID0gX2NoaWxkLmRNZWRpYTsKCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2JyZWFrcG9pbnRzLnB1c2goYnJlYWtwb2ludCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICAvKioKICAgICAgICAgICAgICogQmluZCBtZWRpYSBxdWVyeSBldmVudHMuCiAgICAgICAgICAgICAqLwogICAgICAgICAgICBiaW5kQnJlYWtwb2ludHNFdmVudHMoKSB7CiAgICAgICAgICAgICAgICB0aGlzLl9icmVha3BvaW50cy5mb3JFYWNoKF9icmVha3BvaW50ID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBldiA9IHdpbmRvdy5tYXRjaE1lZGlhKF9icmVha3BvaW50Lm1lZGlhKTsKICAgICAgICAgICAgICAgICAgICBldi5hZGRMaXN0ZW5lcihfZXZlbnQgPT4gdGhpcy5vbkJyZWFrcG9pbnRDaGFuZ2UoX2V2ZW50KSk7IC8vIGJlY2F1c2Ugb2YgSUUxMS4uLgogICAgICAgICAgICAgICAgICAgIHRoaXMub25CcmVha3BvaW50Q2hhbmdlKGV2KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgLyoqCiAgICAgICAgICAgICAqIFJldHVybiBzdHJpbmcgd2l0aG91dCBzcGFjZXMuCiAgICAgICAgICAgICAqCiAgICAgICAgICAgICAqIEBwYXJhbSBfc3RyCiAgICAgICAgICAgICAqIEByZXR1cm4ge1N0cmluZ30KICAgICAgICAgICAgICovCiAgICAgICAgICAgIHdpdGhvdXRTcGFjZXMoX3N0cikgewogICAgICAgICAgICAgICAgcmV0dXJuIF9zdHIucmVwbGFjZShfc3BhY2VzUkUsICcnKTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgKiBDYWxsZWQgd2hlbiBtZWRpYSBxdWVyeSBicmVha3BvaW50IGNoYW5nZXMuCiAgICAgICAgICAgICAqCiAgICAgICAgICAgICAqIEBwYXJhbSB7RXZlbnR9IF9ldmVudAogICAgICAgICAgICAgKi8KICAgICAgICAgICAgb25CcmVha3BvaW50Q2hhbmdlKF9ldmVudCkgewogICAgICAgICAgICAgICAgY29uc3QgYnJlYWtwb2ludCA9IHRoaXMuX2JyZWFrcG9pbnRzLmZpbHRlcigKICAgICAgICAgICAgICAgICAgICBfYnJlYWtwb2ludCA9PgogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLndpdGhvdXRTcGFjZXMoX2JyZWFrcG9pbnQubWVkaWEpID09PSB0aGlzLndpdGhvdXRTcGFjZXMoX2V2ZW50Lm1lZGlhKSwKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICBsZXQgZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoYnJlYWtwb2ludC5sZW5ndGggPT09IDEpIHsKICAgICAgICAgICAgICAgICAgICBkYXRhID0gewogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYnJlYWtwb2ludFswXS52YWx1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogYnJlYWtwb2ludFswXS5jb2RlLAogICAgICAgICAgICAgICAgICAgICAgICBtZWRpYTogX2V2ZW50Lm1lZGlhLAogICAgICAgICAgICAgICAgICAgICAgICBtYXRjaGVzOiBfZXZlbnQubWF0Y2hlcywKICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0QnJlYWtwb2ludCcsIGRhdGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQo="},{"version":3,"sources":["FBreakpoints.vue"],"names":[],"mappings":";AAOA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FBreakpoints.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div style=\"display: none\">\n        <slot></slot>\n    </div>\n</template>\n\n<script>\n    import events from \"../mixins/events.js\";\n\n    const _spacesRE = / /g;\n\n    /**\n     * Manages media query breakpoints.\n     */\n    export default {\n        mixins: [events],\n\n        created() {\n            /** Array of props of `FBreakpoint` components*/\n            this._breakpoints = [];\n        },\n\n        mounted() {\n            this.prepareBreakpoints();\n            this.bindBreakpointsEvents();\n        },\n\n        methods: {\n            /**\n             * Collect `FBreakpoint`'s data from default slot.\n             */\n            prepareBreakpoints() {\n                const children = this.$children;\n                let breakpoint;\n\n                children.forEach(_child => {\n                    if (_child.$options._componentTag === 'f-breakpoint') {\n                        breakpoint = {\n                            ..._child.$props\n                        };\n\n                        breakpoint.media = _child.dMedia;\n\n                        this._breakpoints.push(breakpoint);\n                    }\n                });\n            },\n\n            /**\n             * Bind media query events.\n             */\n            bindBreakpointsEvents() {\n                this._breakpoints.forEach(_breakpoint => {\n                    const ev = window.matchMedia(_breakpoint.media);\n                    ev.addListener(_event => this.onBreakpointChange(_event)); // because of IE11...\n                    this.onBreakpointChange(ev);\n                });\n            },\n\n            /**\n             * Return string without spaces.\n             *\n             * @param _str\n             * @return {String}\n             */\n            withoutSpaces(_str) {\n                return _str.replace(_spacesRE, '');\n            },\n\n            /**\n             * Called when media query breakpoint changes.\n             *\n             * @param {Event} _event\n             */\n            onBreakpointChange(_event) {\n                const breakpoint = this._breakpoints.filter(\n                    _breakpoint =>\n                        this.withoutSpaces(_breakpoint.media) === this.withoutSpaces(_event.media),\n                );\n                let data;\n\n                if (breakpoint.length === 1) {\n                    data = {\n                        value: breakpoint[0].value,\n                        code: breakpoint[0].code,\n                        media: _event.media,\n                        matches: _event.matches,\n                    };\n                    \n                    this.$store.commit('setBreakpoint', data);\n                }\n            }\n        }\n    }\n</script>\n"]}]}
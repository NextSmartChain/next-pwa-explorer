{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FLabel/FLabel.vue?vue&type=style&index=0&id=75508466&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FLabel/FLabel.vue","mtime":1657708592614},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgInN0eWxlIjsK"},{"version":3,"sources":["FLabel.vue"],"names":[],"mappings":";AAuDA","file":"FLabel.vue","sourceRoot":"src/components/core/FLabel","sourcesContent":["<template>\n    <label v-if=\"native\" :for=\"id\" :class=\"classes\">\n        <slot>{{ label }}</slot>\n    </label>\n    <span v-else :id=\"id\" :class=\"classes\">\n        <slot>{{ label }}</slot>\n    </span>\n</template>\n\n<script>\n/**\n * Renders `label` or `span` element.\n */\nexport default {\n    name: 'FLabel',\n\n    props: {\n        /** Id for `for` attribute of `label` element or id of `span` element */\n        id: {\n            type: String,\n            default: '',\n            required: true,\n        },\n        /** Text */\n        label: {\n            type: String,\n            default: '',\n        },\n        /**\n         * If `true`, component renders `label` element with `for` attribute,\n         * otherwise `span` element with `id`\n         */\n        native: {\n            type: Boolean,\n            default: false,\n        },\n        /** If `true`, component will be visible just for screen readers */\n        notVisible: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        classes() {\n            return {\n                flabel: true,\n                'flabel-notvisible': this.notVisible,\n            };\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"style\";\n</style>\n"]}]}
{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FDataTable/FDataTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FDataTable/FDataTable.vue","mtime":1657708592954},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FDataTable.vue"],"names":[],"mappings":";AA0KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FDataTable.vue","sourceRoot":"src/components/core/FDataTable","sourcesContent":["<template>\n    <f-card :off=\"fCardOff\" class=\"f-data-table-card\">\n        <div :id=\"dId\" class=\"f-data-table\" :class=\"cCssClass\" @page-change=\"onPageChange\">\n            <slot name=\"before-table\">\n                <div v-if=\"usePagination\" class=\"before-table\">\n                    <f-pagination\n                        :total-items=\"totalItems\"\n                        :items-per-page=\"itemsPerPage\"\n                        :curr-page=\"currPage\"\n                    ></f-pagination>\n                </div>\n            </slot>\n            <div\n                v-if=\"columns.length\"\n                class=\"table-container\"\n                :style=\"cHeight\"\n                @click=\"onTableClick\"\n                @keyup=\"onTabletKeyup\"\n            >\n                <table v-if=\"!cMobileView\">\n                    <slot name=\"header\">\n                        <thead>\n                            <tr @click=\"onHeaderClick\">\n                                <th\n                                    v-for=\"(col, index) in columns\"\n                                    v-show=\"!col.hidden\"\n                                    :key=\"col.name\"\n                                    :class=\"getColumnClass(index, col) + ' ' + getHeadingColumnClass(col)\"\n                                >\n                                    <div>{{ col.label }}</div>\n                                </th>\n                            </tr>\n                        </thead>\n                    </slot>\n                    <slot>\n                        <tbody v-if=\"cItems.length\">\n                        <template v-for=\"item in cItems\">\n                            <tr\n                                :key=\"item.id\"\n                                :style=\"item.css ? obj2css(item.css) : ''\"\n                                :data-dt-item-id=\"actionOnRow ? item.id : undefined\"\n                                :tabindex=\"actionOnRow ? 0 : -1\"\n                            >\n                                <td\n                                    v-for=\"(col, index) in columns\"\n                                    v-show=\"!col.hidden\"\n                                    :key=\"col.name\"\n                                    :class=\"getColumnClass(index, col)\"\n                                >\n                                    <slot\n                                        :name=\"`column-${col.name}`\"\n                                        :value=\"getItemPropValue(item, col)\"\n                                        :item=\"item\"\n                                    >\n                                        {{ getItemPropValue(item, col) }}\n                                    </slot>\n                                </td>\n                            </tr>\n                            <slot\n                                name=\"subrow\"\n                                :style=\"item.css ? obj2css(item.css) : ''\"\n                                :dtItemId=\"actionOnRow ? item.id : undefined\"\n                                :tabindex=\"actionOnRow ? 0 : -1\"\n                                :item=\"item\"\n                                :columns=\"columns\"\n                                :visibleColumnsNum=\"dVisibleColumnsNum\"\n                                :mobileView=\"false\"\n                            ></slot>\n                        </template>\n                        </tbody>\n                        <tbody v-else-if=\"!loading\">\n                            <tr>\n                                <td :colspan=\"dVisibleColumnsNum\">\n                                    <slot name=\"no-items\">\n                                        <div class=\"no-items\">{{ $t('no_items') }}</div>\n                                    </slot>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </slot>\n                    <slot name=\"footer\">\n                        <tfoot>\n                            <tr v-if=\"infiniteScroll && cItems.length\" v-show=\"!disableInfiniteScroll\">\n                                <td :colspan=\"dVisibleColumnsNum\">\n                                    <f-intersection-observer :root-margin=\"`${infiniteScrollDistance}px 0px`\" @entry=\"onEntry\" class=\"f-loading-more\">\n                                        <pulse-loader color=\"#1969ff\"></pulse-loader>\n                                    </f-intersection-observer>\n                                </td>\n                            </tr>\n\n                            <tr v-if=\"loading && (!cItems.length || forceLoading)\">\n                                <td :colspan=\"dVisibleColumnsNum\">\n                                    <div class=\"f-loading-more\">\n                                        <pulse-loader color=\"#1969ff\"></pulse-loader>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </slot>\n                </table>\n\n                <div v-else class=\"mobile-view f-data-layout normal-padding\">\n                    <div v-if=\"cItems.length\">\n                        <template v-for=\"item in cItems\">\n                            <div\n                                :key=\"item.id\"\n                                :style=\"item.css ? obj2css(item.css) : ''\"\n                                :data-dt-item-id=\"actionOnRow ? item.id : undefined\"\n                                :tabindex=\"actionOnRow ? 0 : -1\"\n                                class=\"mobile-item\"\n                            >\n                                <div\n                                    v-for=\"(col, index) in columns\"\n                                    :key=\"col.name\"\n                                    :class=\"getColumnClass(index, col)\"\n                                >\n                                    <template v-if=\"!col.hidden\">\n                                        <slot\n                                            :name=\"`column-${col.name}`\"\n                                            :value=\"getItemPropValue(item, col)\"\n                                            :item=\"item\"\n                                            :column=\"col\"\n                                        >\n                                            <div class=\"row no-collapse no-vert-col-padding\">\n                                                <div :class=\"`col-${firstMVColumnWidth} f-row-label`\">\n                                                    {{ col.label }}\n                                                </div>\n                                                <div class=\"col break-word\">{{ getItemPropValue(item, col) }}</div>\n                                            </div>\n                                        </slot>\n                                    </template>\n                                </div>\n                                <slot\n                                    name=\"subrow\"\n                                    :style=\"item.css ? obj2css(item.css) : ''\"\n                                    :dtItemId=\"actionOnRow ? item.id : undefined\"\n                                    :tabindex=\"actionOnRow ? 0 : -1\"\n                                    :item=\"item\"\n                                    :columns=\"columns\"\n                                    :visibleColumnsNum=\"dVisibleColumnsNum\"\n                                    :mobileView=\"true\"\n                                ></slot>\n                            </div>\n                        </template>\n                    </div>\n                    <div v-else-if=\"!loading\">\n                        <div class=\"no-items\">{{ $t('no_items') }}</div>\n                    </div>\n\n                    <div v-if=\"infiniteScroll && cItems.length\" v-show=\"!disableInfiniteScroll\">\n                        <f-intersection-observer :root-margin=\"`${infiniteScrollDistance}px 0px`\" @entry=\"onEntry\" class=\"f-loading-more\">\n                            <pulse-loader color=\"#1969ff\"></pulse-loader>\n                        </f-intersection-observer>\n                    </div>\n\n                    <div v-if=\"loading && (!cItems.length || forceLoading)\">\n                        <div class=\"f-loading-more\">\n                            <pulse-loader color=\"#1969ff\"></pulse-loader>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <slot name=\"after-table\"></slot>\n\n            <f-head-style :css=\"dCss\"></f-head-style>\n        </div>\n    </f-card>\n</template>\n\n<script>\nimport FHeadStyle from '../FHeadStyle/FHeadStyle.vue';\nimport FPagination from '../FPagination/FPagination.vue';\nimport { getNestedProp, isValidIndex } from '../../../utils';\nimport { cloneObject, isObjectEmpty } from '../../../utils';\nimport { obj2css } from '../../../utils';\nimport { helpersMixin } from '../../../mixins/helpers.js';\nimport events from '../../../mixins/events.js';\nimport FCard from '../FCard/FCard.vue';\nimport PulseLoader from 'vue-spinner/src/PulseLoader.vue';\nimport { isAriaAction } from '@/utils/aria.js';\nimport FIntersectionObserver from \"@/components/core/FIntersectionObserver/FIntersectionObserver.vue\";\n\nconst GRID_STORAGE_KEY = 'next-data-grid';\n\nexport default {\n    components: {\n        FIntersectionObserver,\n        FCard,\n        FHeadStyle,\n        FPagination,\n        PulseLoader,\n    },\n\n    mixins: [helpersMixin, events],\n\n    props: {\n        /**\n         * Array of columns descriptions.\n         *\n         * One item is an object with keys:\n         * `name` {string} - unique name of column (required). Can be used as a data item property.\n         * `label` {string} - label of column placed in the header of table\n         * `itemProp` {string} - can be used to get data from nested data item property - 'prop1.prop2' for example\n         * `formatter` {function} - apply this formatter to data item value\n         * `readValueFrom` {string} - if there is no key `name` in data item object, read value from column with name `value`\n         * `width` {string} - minimum width of column\n         * `hidden` {boolean} - if `true`, column will be hidden\n         * `css` {object} - style for whole column. Keys are css properties in camel case, values are valid css values.\n         * `cssClass` {string} - css class to be added to column\n         * `cellChildrenCss` {object} - style for column cells direct children. Keys are css properties in camel case, values are valid css values.\n         * `oneLineMode` {boolean} - if `true`, no line breaks are allowed in column's cells.\n         */\n        columns: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            },\n        },\n\n        /**\n         * Array of table rows.\n         *\n         * One item is an object, where keys are column names.\n         * Reserved keys are:\n         * `css` {object} - style for whole row. Keys are css properties in camel case, values are valid css values.\n         */\n        items: {\n            type: Array,\n            default() {\n                return [];\n            },\n        },\n\n        /** Height of data table. */\n        height: {\n            type: String,\n            default: 'auto',\n        },\n\n        /** Array of column names to be hidden. */\n        hiddenColumns: {\n            type: Array,\n            default() {\n                return [];\n            },\n        },\n\n        /**\n         * Grid's code used for identification in local storage\n         */\n        code: {\n            type: String,\n            default: '',\n        },\n\n        /**\n         * Width of first column in mobile view (from '1' to '12').\n         * Used in mobile view slot's default content only.\n         */\n        firstMVColumnWidth: {\n            type: String,\n            default: '4',\n        },\n\n        /**  */\n        fixedHeader: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** Enable infinite scrolling. */\n        infiniteScroll: {\n            type: Boolean,\n            default: false,\n        },\n\n        /**\n         * The minimum distance between the bottom of the element and the bottom of the viewport\n         * before the v-infinite-scroll method is executed.\n         */\n        infiniteScrollDistance: {\n            type: Number,\n            default: 800,\n        },\n\n        /**  */\n        disableInfiniteScroll: {\n            type: Boolean,\n            default: true,\n        },\n\n        /** Server side pagination and sorting. */\n        serverSide: {\n            type: Boolean,\n            default: false,\n        },\n\n        /**  */\n        usePagination: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** Display loading message. */\n        loading: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** Display loading message, even if items exist. */\n        forceLoading: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** Render data table in mobile view. */\n        mobileView: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** If `true`, no line breaks are allowed in table cells. */\n        oneLineMode: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** If `true`, f-card element will be without any style. */\n        fCardOff: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** No left padding on the first column and right padding on the last column. */\n        noFLPadding: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** If `true`, row will become clickable and 'row-action' event will be triggered. */\n        actionOnRow: {\n            type: Boolean,\n            default: false,\n        },\n\n        /** If `true` and `code` prop is set, save info about sorting to local storage. */\n        saveSorting: {\n            type: Boolean,\n            default: true,\n        },\n\n        ...FPagination.props,\n    },\n\n    data() {\n        return {\n            dId: `tbl${this._uid}`,\n            dCss: '',\n            dPagination: {},\n            dVisibleColumnsNum: 0,\n            // dItems: this.items\n        };\n    },\n\n    computed: {\n        /**\n         * Property is set to `true`, if 'data-table-mobile-view' breakpoint is reached.\n         *\n         * @return {Boolean}\n         */\n        cMobileView() {\n            const dataTableBreakpoint = this.$store.state.breakpoints['data-table-mobile-view'];\n\n            return (dataTableBreakpoint && dataTableBreakpoint.matches) || this.mobileView;\n        },\n\n        /**\n         * Get items (rows). If pagination is used, return proper slice of items.\n         */\n        cItems() {\n            const { itemsIndices } = this.dPagination;\n\n            this.setIds(this.items);\n\n            if (!this.serverSide && this.usePagination) {\n                return itemsIndices ? this.items.slice(itemsIndices.from, itemsIndices.to + 1) : [];\n            } else {\n                if (this.items.length > 0) {\n                    this.initialSort();\n                }\n\n                return this.items;\n            }\n        },\n\n        /**\n         * Calculates max-height of data table.\n         */\n        cHeight() {\n            if (this.height === 'auto') {\n                return '';\n            }\n\n            return `max-height: ${this.height}`;\n        },\n\n        /**\n         * Container's css classes.\n         */\n        cCssClass() {\n            return {\n                'f-card-on': !this.fCardOff,\n                'height-set': this.height !== 'auto',\n                'fixed-header': this.fixedHeader,\n                'no-fl-padding': this.noFLPadding || !this.fCardOff,\n                'action-on-row': this.actionOnRow,\n            };\n        },\n    },\n\n    created() {\n        this.colClassRE = /\\s*_c(\\d)\\s*/;\n        this._sortByCol = -1;\n        this._initialSort = true;\n        // Settings stored in local storage. Keys are codes, values are settings.\n        this._settings = this.getStoredSettings();\n\n        this.prepareColumns();\n    },\n\n    methods: {\n        initialSort() {\n            if (this._initialSort) {\n                this._initialSort = false;\n\n                setTimeout(() => {\n                    const { sorting } = this._settings;\n                    let column = null;\n\n                    if (sorting) {\n                        column = this.getColumnByName(sorting.sortBy);\n                        if (column) {\n                            this.sortByColumn(column, sorting.sortDir);\n                        }\n                    } else if (this._sortByCol > -1) {\n                        column = this.columns[this._sortByCol];\n                        this.sortByColumn(column, column.sortDir);\n                    }\n                }, 10);\n            }\n        },\n\n        /**\n         * Set columns css, ...\n         */\n        prepareColumns() {\n            const { columns } = this;\n            const hiddenColumns = this.hiddenColumns.length > 0 ? this.hiddenColumns : null;\n            let cssStr = '';\n            let dVisibleColumnsNum = 0;\n            let firstVisible = false;\n\n            columns.forEach((_column, _index) => {\n                const css = {};\n                const cellChildrenCss = {};\n\n                _column._index = _index;\n\n                if (_column.sortDir) {\n                    this._sortByCol = _index;\n                }\n\n                if (hiddenColumns && hiddenColumns.indexOf(_column.name) > -1) {\n                    _column.hidden = true;\n                }\n\n                if (!_column.hidden) {\n                    dVisibleColumnsNum++;\n\n                    if (!firstVisible) {\n                        firstVisible = true;\n\n                        _column.cssClass = `${_column.cssClass || ''} f-col`;\n                    }\n                }\n\n                if (_column.width) {\n                    css.width = _column.width;\n                    css.minWidth = css.width;\n                } else if (_column.minWidth) {\n                    css.minWidth = _column.minWidth;\n                }\n\n                if (_column.css) {\n                    Object.assign(css, _column.css);\n                }\n\n                if (_column.cellChildrenCss) {\n                    Object.assign(cellChildrenCss, _column.cellChildrenCss);\n                }\n\n                if (this.oneLineMode || _column.oneLineMode) {\n                    const threeDots = {\n                        whiteSpace: 'nowrap',\n                        overflow: 'hidden',\n                        textOverflow: 'ellipsis',\n                    };\n\n                    Object.assign(css, threeDots);\n                    // Object.assign(cellChildrenCss, threeDots);\n                }\n\n                if (!isObjectEmpty(css)) {\n                    cssStr += `#${this.dId} .${this.getColumnClass(_index)} {${obj2css(css)}}`;\n                }\n\n                if (!isObjectEmpty(cellChildrenCss)) {\n                    cssStr += `#${this.dId} .${this.getColumnClass(_index)} > * {${obj2css(cellChildrenCss)}}`;\n                }\n            });\n\n            for (let i = columns.length - 1; i >= 0; i--) {\n                if (!columns[i].hidden) {\n                    columns[i].cssClass = `${columns[i].cssClass || ''} l-col`;\n                    break;\n                }\n            }\n\n            if (cssStr) {\n                this.dCss = cssStr;\n            }\n\n            if (dVisibleColumnsNum > 0) {\n                this.dVisibleColumnsNum = dVisibleColumnsNum;\n            }\n        },\n\n        /**\n         * Fetch more data.\n         */\n        fetchMore(_visible) {\n            this.$emit('loader-visibility', _visible);\n\n            if (_visible) {\n                this.$emit('fetch-more');\n            }\n        },\n\n        /**\n         * @param {int} _index\n         * @param {object} _data\n         * @return {boolean}\n         */\n        updateRow(_index, _data) {\n            if (isValidIndex(_index, this.items)) {\n                this.$set(this.items, _index, _data);\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * @param {int} _rowIndex\n         * @param {string} _colName\n         * @param {*} _data\n         * @return {boolean}\n         */\n        updateCell(_rowIndex, _colName, _data) {\n            if (isValidIndex(_rowIndex, this.items)) {\n                // && _colName in columnsByName (object)!!\n                this.$set(this.items[_rowIndex], _colName, _data);\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Get column's css class.\n         *\n         * @param {int} _index\n         * @param {object} [_column]\n         * @return {string}\n         */\n        getColumnClass(_index, _column) {\n            return `_c${_index} ` + (_column && _column.cssClass ? _column.cssClass : '');\n        },\n\n        /**\n         * Get heading column's css classes.\n         *\n         * @param {object} [_column]\n         * @return {string}\n         */\n        getHeadingColumnClass(_column) {\n            if (_column.sortFunc) {\n                return `sortable ${_column.sortDir || ''}`;\n            }\n\n            return '';\n        },\n\n        /**\n         * Get column by its css class.\n         *\n         * @param {string} _class\n         * @return {object}\n         */\n        getColumnByClass(_class) {\n            const match = this.colClassRE.exec(_class);\n            let column = null;\n\n            if (match && match.length === 2) {\n                column = this.columns[parseInt(match[1])] || null;\n            }\n\n            return column;\n        },\n\n        getColumnByName(name) {\n            return this.columns.find(column => column.name === name);\n        },\n\n        /**\n         * Get data item value.\n         *\n         * @param {object} _item\n         * @param {object} _col\n         * @return {*}\n         */\n        getItemPropValue(_item, _col) {\n            let value;\n\n            if (_col.itemProp) {\n                value = getNestedProp(_item, _col.itemProp);\n            } else if (_col.readValueFrom) {\n                value = _item[_col.readValueFrom];\n            } else {\n                value = _item[_col.name];\n            }\n\n            if (_col.formatter && !_col.hidden) {\n                value = _col.formatter(value, _item);\n            }\n\n            return value;\n        },\n\n        /**\n         * Sort table by column.\n         *\n         * @param {Object} _column\n         * @param {String} [_sortDir] 'asc'|'desc'\n         * @param {boolean} [_click]\n         */\n        sortByColumn(_column, _sortDir, _click) {\n            if (_column && _column.sortFunc) {\n                const sortByCol = this._sortByCol;\n\n                if (sortByCol > -1 && sortByCol !== _column._index) {\n                    this.columns[sortByCol].sortDir = '';\n                }\n\n                if (_sortDir) {\n                    _column.sortDir = _sortDir;\n                } else {\n                    // default sort on column header click is 'desc'\n                    if (_column.sortDir === 'desc') {\n                        _column.sortDir = 'asc';\n                    } else {\n                        _column.sortDir = 'desc';\n                    }\n                }\n\n                this._sortByCol = _column._index;\n\n                if (_click && this.code && this.saveSorting) {\n                    const sorting = {\n                        sortBy: _column.name,\n                        sortDir: _column.sortDir,\n                    }\n\n                    console.log('save sorting', sorting);\n                    this.saveSettings({ ...this._settings, sorting});\n                }\n\n                this.items.sort(_column.sortFunc(_column.itemProp || _column.name, _column.sortDir));\n            }\n        },\n\n        /**\n         * @return {Object}\n         */\n        getStoredSettings() {\n            const { localStorage } = window;\n            let settings = {};\n\n            if (this.code && localStorage) {\n                const gridSettings = JSON.parse(localStorage.getItem(GRID_STORAGE_KEY) || '{}');\n\n                if (gridSettings && gridSettings[this.code]) {\n                    settings = gridSettings[this.code];\n                }\n            }\n\n            return settings;\n        },\n\n        /**\n         * @param {Object} settings\n         */\n        saveSettings(settings) {\n            const { localStorage } = window;\n\n            if (this.code && localStorage) {\n                const gridSettings = JSON.parse(localStorage.getItem(GRID_STORAGE_KEY) || '{}');\n\n                gridSettings[this.code] = settings;\n\n                localStorage.setItem(GRID_STORAGE_KEY, JSON.stringify(gridSettings));\n            }\n        },\n\n        /**\n         * @param {Event} _event\n         */\n        onTableClick(_event) {\n            /** @type {HTMLElement} */\n            let elem;\n\n            if (this.actionOnRow) {\n                elem = _event.target.closest('[data-dt-item-id]');\n                if (elem) {\n                    const id = elem.getAttribute('data-dt-item-id');\n                    const item = this.items.find((_item) => _item.id === id);\n\n                    if (item) {\n                        this.$emit('row-action', { ...item });\n                    }\n                }\n            }\n        },\n\n        /**\n         * @param {KeyboardEvent} _event\n         */\n        onTabletKeyup(_event) {\n            if (isAriaAction(_event)) {\n                this.onTableClick(_event);\n            }\n        },\n\n        /**\n         * @param {Event} _event\n         */\n        onHeaderClick(_event) {\n            let elem = _event.target.closest('th');\n            const column = elem ? this.getColumnByClass(elem.className) : null;\n\n            this.sortByColumn(column, '', true);\n        },\n\n        /**\n         * Triggered on `FPagination`'s `'page-change'` event.\n         *\n         * @param {Object} _data\n         */\n        onPageChange(_data) {\n            this.dPagination = cloneObject(_data.detail);\n        },\n\n        /**\n         * @param {IntersectionObserverEntry} _entry\n         */\n        onEntry(_entry) {\n            this.fetchMore(_entry.isIntersecting);\n        },\n\n        /**\n         * Convert object, where keys are css properties, to string.\n         *\n         * @param {object} _cssObj\n         * @return {string}\n         */\n        obj2css: obj2css,\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
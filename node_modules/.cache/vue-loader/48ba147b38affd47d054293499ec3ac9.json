{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/FPagination.vue?vue&type=style&index=0&id=2514111d&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/FPagination.vue","mtime":1657708593370},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mLXBhZ2luYXRpb24gewogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwoKICAgIC5wYWdlcyB7CiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICAgICAgcGFkZGluZzogMCAxNnB4OwogICAgfQoKICAgIGJ1dHRvbiB7CiAgICAgICAgbWFyZ2luLWlubGluZS1lbmQ6IDRweDsKCiAgICAgICAgJjpsYXN0LWNoaWxkIHsKICAgICAgICAgICAgbWFyZ2luLWlubGluZS1lbmQ6IDA7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["FPagination.vue"],"names":[],"mappings":";AAiJA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FPagination.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"f-pagination\">\n        <button class=\"first same-size small round\" @click=\"onFirstItemButClick\" :disabled=\"cDisablePrevButs\">&lt;&lt;</button>\n        <button class=\"prev same-size small round\" @click=\"onPrevItemButClick\" :disabled=\"cDisablePrevButs\">&lt;</button>\n\n        <span class=\"pages\">\n            <slot name=\"pages\" :data=\"getState()\">{{ dCurrPage }} of {{ cNumPages }}</slot>\n        </span>\n\n        <button class=\"next same-size small round\" @click=\"onNextItemButClick\" :disabled=\"cDisableNextButs\">&gt;</button>\n        <button class=\"last same-size small round\" @click=\"onLastItemButClick\" :disabled=\"cDisableNextButs\">&gt;&gt;</button>\n    </div>\n</template>\n\n<script>\n    import events from \"../mixins/events.js\";\n\n    export default {\n        mixins: [events],\n\n        props: {\n            /** Total amount of items. */\n            totalItems: {\n                type: Number,\n                default: 0\n            },\n\n            /** Number of items per page. */\n            itemsPerPage: {\n                type: Number,\n                default: 20\n            },\n\n            /** Current page index. */\n            currPage: {\n                type: Number,\n                default: 1\n            }\n        },\n\n        data() {\n            return {\n                /** Current page index. */\n                dCurrPage: this.currPage\n            }\n        },\n\n        computed: {\n            /**\n             * Returns number of pages.\n             *\n             * @return {int}\n             */\n            cNumPages() {\n                return Math.max(Math.ceil(this.totalItems / this.itemsPerPage), 1);\n            },\n\n            /**\n             * Get `from` and `to` indices according to current page.\n             *\n             * @return {object}\n             */\n            cItemsIndices() {\n                return {\n                    from: (this.dCurrPage - 1) * this.itemsPerPage,\n                    to: (this.dCurrPage * this.itemsPerPage) - 1\n                };\n            },\n\n            cDisablePrevButs() {\n                return (this.dCurrPage <= 1);\n            },\n\n            cDisableNextButs() {\n                return (this.dCurrPage >= this.cNumPages);\n            }\n        },\n\n        created() {\n            this.goToPage(this.dCurrPage);\n        },\n\n        methods: {\n            /**\n             * @param {int} _pageNum\n             */\n            goToPage(_pageNum) {\n                this.dCurrPage = Math.min(Math.max(_pageNum, 1), this.cNumPages);\n                this.$nextTick(() => {this.emitCustomEvent('page-change', this.getState())});\n            },\n\n            /**\n             * Get pagination state.\n             *\n             * @return {{numPages: (default.computed.cNumPages|(function(): number)), totalItems: (default.props.totalItems|{default, type}), currPage: (default.props.currPage|{default, type}|*), itemsPerPage: (default.props.itemsPerPage|{default, type}), itemsIndices: (default.computed.cItemsIndices|(function(): {from: number, to: number}))}}\n             */\n            getState() {\n                return {\n                    totalItems: this.totalItems,\n                    itemsPerPage: this.itemsPerPage,\n                    currPage: this.dCurrPage,\n                    numPages: this.cNumPages,\n                    itemsIndices: this.cItemsIndices\n                }\n            },\n\n            onFirstItemButClick() {\n                this.goToPage(1);\n            },\n\n            onPrevItemButClick() {\n                this.goToPage(this.dCurrPage - 1);\n            },\n\n            onNextItemButClick() {\n                this.goToPage(this.dCurrPage + 1);\n            },\n\n            onLastItemButClick() {\n                this.goToPage(this.cNumPages);\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .f-pagination {\n        display: inline-block;\n\n        .pages {\n            display: inline-block;\n            vertical-align: middle;\n            padding: 0 16px;\n        }\n\n        button {\n            margin-inline-end: 4px;\n\n            &:last-child {\n                margin-inline-end: 0;\n            }\n        }\n    }\n</style>\n"]}]}
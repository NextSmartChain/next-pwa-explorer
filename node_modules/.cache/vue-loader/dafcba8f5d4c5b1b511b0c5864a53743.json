{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/HomeBlockList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/HomeBlockList.vue","mtime":1657708591430},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBGQmxvY2tMaXN0IGZyb20gIkAvZGF0YS10YWJsZXMvRkJsb2NrTGlzdC52dWUiOwppbXBvcnQgRkRhdGFUYWJsZSBmcm9tICJAL2NvbXBvbmVudHMvY29yZS9GRGF0YVRhYmxlL0ZEYXRhVGFibGUudnVlIjsKaW1wb3J0IHtXRUlUb0ZUTX0gZnJvbSAiQC91dGlscy90cmFuc2FjdGlvbnMuanMiOwppbXBvcnQge3RpbWVzdGFtcFRvRGF0ZX0gZnJvbSAiQC9maWx0ZXJzLmpzIjsKaW1wb3J0IGdxbCBmcm9tICJncmFwaHFsLXRhZyI7CmltcG9ydCB7Y2xvbmVPYmplY3R9IGZyb20gIkAvdXRpbHMiOwppbXBvcnQge3BvbGxpbmdNaXhpbn0gZnJvbSAiQC9taXhpbnMvcG9sbGluZy5qcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiSG9tZUJsb2NrTGlzdCIsCgogICAgbWl4aW5zOiBbcG9sbGluZ01peGluXSwKCiAgICBjb21wb25lbnRzOiB7RkRhdGFUYWJsZX0sCgogICAgcHJvcHM6IHsKICAgICAgICAuLi5GQmxvY2tMaXN0LnByb3BzLAogICAgfSwKCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC4uLkZCbG9ja0xpc3QuZGF0YS5jYWxsKHRoaXMpLAogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgIH0KICAgIH0sCgogICAgY29tcHV0ZWQ6IHsKICAgICAgICBjTG9hZGluZygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZEl0ZW1zLmxlbmd0aCA9PT0gMDsKICAgICAgICB9CiAgICB9LAoKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy51cGRhdGVJdGVtcygpOwogICAgfSwKCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuX3BvbGxpbmcuc3RhcnQoCiAgICAgICAgICAgICd1cGRhdGUtYmxvY2tzJywKICAgICAgICAgICAgKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVJdGVtcyh0cnVlKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgMzMwMAogICAgICAgICk7CiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBhc3luYyB1cGRhdGVJdGVtcyhfYW5pbWF0ZSkgewogICAgICAgICAgICB0aGlzLmRJdGVtcyA9IGF3YWl0IHRoaXMuZmV0Y2hEYXRhKCk7CgogICAgICAgICAgICBpZiAoX2FuaW1hdGUpIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvdyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHt0aGlzLnNob3cgPSB0cnVlO30pOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogQHJldHVybnMge1Byb21pc2U8QXJyYXk+fQogICAgICAgICAqLwogICAgICAgIGFzeW5jIGZldGNoRGF0YSgpIHsKICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuJGFwb2xsby5xdWVyeSh7CiAgICAgICAgICAgICAgICBxdWVyeTogZ3FsYAogICAgICAgICAgICAgICAgICAgIHF1ZXJ5IEJsb2NrTGlzdCgkY3Vyc29yOiBDdXJzb3IsICRjb3VudDogSW50ISkgewogICAgICAgICAgICAgICAgICAgICAgICBibG9ja3MgKGN1cnNvcjogJGN1cnNvciwgY291bnQ6ICRjb3VudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxDb3VudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnZUluZm8gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpcnN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc05leHQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNQcmV2aW91cwogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWRnZXMgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzaAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zYWN0aW9uQ291bnQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2FzVXNlZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJzb3IKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGAsCiAgICAgICAgICAgICAgICB2YXJpYWJsZXM6IHsKICAgICAgICAgICAgICAgICAgICBjdXJzb3I6IG51bGwsCiAgICAgICAgICAgICAgICAgICAgY291bnQ6IHRoaXMuaXRlbXNQZXJQYWdlCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZmV0Y2hQb2xpY3k6ICduZXR3b3JrLW9ubHknLAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHJldHVybiBjbG9uZU9iamVjdChkYXRhLmRhdGEgJiYgZGF0YS5kYXRhLmJsb2NrcyAmJiBkYXRhLmRhdGEuYmxvY2tzLmVkZ2VzID8gZGF0YS5kYXRhLmJsb2Nrcy5lZGdlcyA6IFtdKTsKICAgICAgICB9LAoKICAgICAgICBXRUlUb0ZUTSwKICAgICAgICB0aW1lc3RhbXBUb0RhdGUKICAgIH0KfQo="},{"version":3,"sources":["HomeBlockList.vue"],"names":[],"mappings":";AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"HomeBlockList.vue","sourceRoot":"src/data-tables","sourcesContent":["<template>\n    <div class=\"homeblocklist\">\n        <transition enter-active-class=\"fadelong-enter-active\">\n            <f-data-table\n                v-show=\"show\"\n                :columns=\"dColumns\"\n                :items=\"dItems\"\n                :disable-infinite-scroll=\"!dHasNext\"\n                :loading=\"cLoading\"\n                fixed-header\n                f-card-off\n                mobile-view\n                height=\"300px\"\n                v-bind=\"{...$attrs, ...$props}\"\n                class=\"f-data-table-body-bg-color\"\n            >\n                <template v-slot:column-block=\"{ value, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-4 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col\">\n                            <router-link :to=\"{name: 'block-detail', params: {id: value}}\" :title=\"value\">{{value}}</router-link>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <router-link :to=\"{name: 'block-detail', params: {id: value}}\" :title=\"value\">{{value}}</router-link>\n                    </template>\n                </template>\n\n                <template v-slot:column-age=\"{ value, column }\">\n                    <div v-if=\"column\" class=\"row no-collapse no-vert-col-padding\">\n                        <div class=\"col-4 f-row-label\">{{ column.label }}</div>\n                        <div class=\"col\">\n                            <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"1\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                        </div>\n                    </div>\n                    <template v-else>\n                        <timeago :datetime=\"timestampToDate(value)\" :auto-update=\"5\" :converter-options=\"{includeSeconds: true}\"></timeago>\n                    </template>\n                </template>\n            </f-data-table>\n        </transition>\n    </div>\n</template>\n\n<script>\nimport FBlockList from \"@/data-tables/FBlockList.vue\";\nimport FDataTable from \"@/components/core/FDataTable/FDataTable.vue\";\nimport {WEIToFTM} from \"@/utils/transactions.js\";\nimport {timestampToDate} from \"@/filters.js\";\nimport gql from \"graphql-tag\";\nimport {cloneObject} from \"@/utils\";\nimport {pollingMixin} from \"@/mixins/polling.js\";\n\nexport default {\n    name: \"HomeBlockList\",\n\n    mixins: [pollingMixin],\n\n    components: {FDataTable},\n\n    props: {\n        ...FBlockList.props,\n    },\n\n    data() {\n        return {\n            ...FBlockList.data.call(this),\n            show: true,\n        }\n    },\n\n    computed: {\n        cLoading() {\n            return this.dItems.length === 0;\n        }\n    },\n\n    created() {\n        this.updateItems();\n    },\n\n    mounted() {\n        this._polling.start(\n            'update-blocks',\n            () => {\n                this.updateItems(true);\n            },\n            3300\n        );\n    },\n\n    methods: {\n        async updateItems(_animate) {\n            this.dItems = await this.fetchData();\n\n            if (_animate) {\n                this.show = false;\n\n                this.$nextTick(() => {this.show = true;});\n            }\n        },\n\n        /**\n         * @returns {Promise<Array>}\n         */\n        async fetchData() {\n            const data = await this.$apollo.query({\n                query: gql`\n                    query BlockList($cursor: Cursor, $count: Int!) {\n                        blocks (cursor: $cursor, count: $count) {\n                            totalCount\n                            pageInfo {\n                                first\n                                last\n                                hasNext\n                                hasPrevious\n                            }\n                            edges {\n                                block {\n                                    hash\n                                    number\n                                    timestamp\n                                    transactionCount\n                                    gasUsed\n                                }\n                                cursor\n                            }\n                        }\n                    }\n                `,\n                variables: {\n                    cursor: null,\n                    count: this.itemsPerPage\n                },\n                fetchPolicy: 'network-only',\n            });\n\n            return cloneObject(data.data && data.data.blocks && data.data.blocks.edges ? data.data.blocks.edges : []);\n        },\n\n        WEIToFTM,\n        timestampToDate\n    }\n}\n</script>\n"]}]}
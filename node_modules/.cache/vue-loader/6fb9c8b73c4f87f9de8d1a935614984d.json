{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FEllipsis/FEllipsis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FEllipsis/FEllipsis.vue","mtime":1657708592870},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qKgogKiBSZW5kZXJzIGVsbGlwc2lzICh1c2luZyBjc3MgdGV4dC1vdmVyZmxvdyBwcm9wZXJ0eSkgYXQgdGhlIHN0YXJ0LCBhdCB0aGUgbWlkZGxlIG9yIGF0IHRoZSBlbmQgb2YgdGhlIGdpdmVuIHRleHQuCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnRkVsbGlwc2lzJywKCiAgICBwcm9wczogewogICAgICAgIHRleHQ6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJywKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBQb3NpdGlvbiBvZiB0aHJlZSBkb3RzLgogICAgICAgICAqCiAgICAgICAgICogQHR5cGUgeygnc3RhcnQnIHwgJ21pZGRsZScgfCAnZW5kJyl9CiAgICAgICAgICovCiAgICAgICAgb3ZlcmZsb3c6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnZW5kJywKICAgICAgICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiAoX3ZhbHVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gWydzdGFydCcsICdtaWRkbGUnLCAnZW5kJ10uaW5kZXhPZihfdmFsdWUpICE9PSAtMTsKICAgICAgICAgICAgfSwKICAgICAgICB9LAogICAgICAgIC8qKiBOdW1iZXIgb2YgZml4ZWQgY2hhcmFjdGVycyAoYXQgdGhlIHN0YXJ0IG9yIGF0IHRoZSBlbmQpLCBpZiBgb3ZlcmZsb3dgIGlzIHNldCB0byBgJ21pZGRsZSdgLiAqLwogICAgICAgIGZpeGVkQ2hhcnNDb3VudDogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDUsCiAgICAgICAgICAgIHZhbGlkYXRvcihfdmFsdWUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdmFsdWUgPiAwOwogICAgICAgICAgICB9LAogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogUG9zaXRpb24gb2YgZml4ZWQgY2hhcmFjdGVycywgaWYgYG92ZXJmbG93YCBpcyBzZXQgdG8gYCdtaWRkbGUnYC4KICAgICAgICAgKgogICAgICAgICAqIEB0eXBlIHsoJ3N0YXJ0JyB8ICdlbmQnKX0KICAgICAgICAgKi8KICAgICAgICBmaXhlZENoYXJzUG9zOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ2VuZCcsCiAgICAgICAgICAgIHZhbGlkYXRvcihfdmFsdWUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBbJ3N0YXJ0JywgJ2VuZCddLmluZGV4T2YoX3ZhbHVlKSAhPT0gLTE7CiAgICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBBbGlnbiB0ZXh0IHRvIHRoZSByaWdodC4KICAgICAgICAgKi8KICAgICAgICBhbGlnblJpZ2h0OiB7CiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgICAgIH0sCiAgICB9LAoKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgY1RleHQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLnRleHQ7CiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogR2V0IGxlZnQgcGFydCBvZiB0ZXh0LgogICAgICAgICAqLwogICAgICAgIGxlZnRDaGFycygpIHsKICAgICAgICAgICAgY29uc3QgeyBjVGV4dCB9ID0gdGhpczsKCiAgICAgICAgICAgIGlmICh0aGlzLmZpeGVkQ2hhcnNQb3MgPT09ICdlbmQnKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gY1RleHQuc3Vic3RyaW5nKDAsIGNUZXh0Lmxlbmd0aCAtIHRoaXMuZml4ZWRDaGFyc0NvdW50KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGNUZXh0LnN1YnN0cmluZygwLCB0aGlzLmZpeGVkQ2hhcnNDb3VudCk7CiAgICAgICAgfSwKCiAgICAgICAgLyoqCiAgICAgICAgICogR2V0IHJpZ2h0IHBhcnQgb2YgdGV4dC4KICAgICAgICAgKi8KICAgICAgICByaWdodENoYXJzKCkgewogICAgICAgICAgICBjb25zdCB7IGNUZXh0IH0gPSB0aGlzOwoKICAgICAgICAgICAgaWYgKHRoaXMuZml4ZWRDaGFyc1BvcyA9PT0gJ2VuZCcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBjVGV4dC5zdWJzdHJpbmcoY1RleHQubGVuZ3RoIC0gdGhpcy5maXhlZENoYXJzQ291bnQpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gY1RleHQuc3Vic3RyaW5nKHRoaXMuZml4ZWRDaGFyc0NvdW50KTsKICAgICAgICB9LAoKICAgICAgICBjc3NDbGFzcygpIHsKICAgICAgICAgICAgcmV0dXJuIFsKICAgICAgICAgICAgICAgIGBvdmVyZmxvdy0ke3RoaXMub3ZlcmZsb3d9YCwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAnZml4ZWQtY2hhci1wb3Mtc3RhcnQnOiB0aGlzLmZpeGVkQ2hhcnNQb3MgPT09ICdzdGFydCcsCiAgICAgICAgICAgICAgICAgICAgJ2YtZWxsaXBzaXMtYWxpZ24tcmlnaHQnOiB0aGlzLmFsaWduUmlnaHQsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdOwogICAgICAgIH0sCiAgICB9LAp9Owo="},{"version":3,"sources":["FEllipsis.vue"],"names":[],"mappings":";AAiBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FEllipsis.vue","sourceRoot":"src/components/core/FEllipsis","sourcesContent":["<template>\n    <span class=\"f-ellipsis\" :class=\"cssClass\">\n        <span><slot name=\"prefix\"></slot></span>\n\n        <template v-if=\"overflow === 'middle'\">\n            <span class=\"left-chars\">{{ leftChars }} </span>\n            <span class=\"right-chars\">{{ rightChars }} </span>\n        </template>\n        <template v-else>\n            {{ cText }}\n        </template>\n\n        <span><slot name=\"suffix\"></slot></span>\n    </span>\n</template>\n\n<script>\n/**\n * Renders ellipsis (using css text-overflow property) at the start, at the middle or at the end of the given text.\n */\nexport default {\n    name: 'FEllipsis',\n\n    props: {\n        text: {\n            type: String,\n            default: '',\n            required: true,\n        },\n        /**\n         * Position of three dots.\n         *\n         * @type {('start' | 'middle' | 'end')}\n         */\n        overflow: {\n            type: String,\n            default: 'end',\n            validator: function (_value) {\n                return ['start', 'middle', 'end'].indexOf(_value) !== -1;\n            },\n        },\n        /** Number of fixed characters (at the start or at the end), if `overflow` is set to `'middle'`. */\n        fixedCharsCount: {\n            type: Number,\n            default: 5,\n            validator(_value) {\n                return _value > 0;\n            },\n        },\n        /**\n         * Position of fixed characters, if `overflow` is set to `'middle'`.\n         *\n         * @type {('start' | 'end')}\n         */\n        fixedCharsPos: {\n            type: String,\n            default: 'end',\n            validator(_value) {\n                return ['start', 'end'].indexOf(_value) !== -1;\n            },\n        },\n        /**\n         * Align text to the right.\n         */\n        alignRight: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        cText() {\n            return this.text;\n        },\n\n        /**\n         * Get left part of text.\n         */\n        leftChars() {\n            const { cText } = this;\n\n            if (this.fixedCharsPos === 'end') {\n                return cText.substring(0, cText.length - this.fixedCharsCount);\n            }\n\n            return cText.substring(0, this.fixedCharsCount);\n        },\n\n        /**\n         * Get right part of text.\n         */\n        rightChars() {\n            const { cText } = this;\n\n            if (this.fixedCharsPos === 'end') {\n                return cText.substring(cText.length - this.fixedCharsCount);\n            }\n\n            return cText.substring(this.fixedCharsCount);\n        },\n\n        cssClass() {\n            return [\n                `overflow-${this.overflow}`,\n                {\n                    'fixed-char-pos-start': this.fixedCharsPos === 'start',\n                    'f-ellipsis-align-right': this.alignRight,\n                },\n            ];\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
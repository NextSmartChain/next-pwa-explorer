{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FTokenValue/FTokenValue.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FTokenValue/FTokenValue.vue","mtime":1657708591978},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGZvcm1hdE51bWJlckJ5TG9jYWxlIH0gZnJvbSAnQC9maWx0ZXJzLmpzJzsKaW1wb3J0IEZQbGFjZWhvbGRlciBmcm9tICdAL2NvbXBvbmVudHMvY29yZS9GUGxhY2Vob2xkZXIvRlBsYWNlaG9sZGVyLnZ1ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnRlRva2VuVmFsdWUnLAoKICAgIGNvbXBvbmVudHM6IHsgRlBsYWNlaG9sZGVyIH0sCgogICAgcHJvcHM6IHsKICAgICAgICAvKiogQHR5cGUge0RlZmlUb2tlbn0gKi8KICAgICAgICB0b2tlbjogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4ge307CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgLyoqIFRva2VuJ3MgdmFsdWUuICovCiAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgICAgICAgZGVmYXVsdDogMCwKICAgICAgICB9LAogICAgICAgIGNvbnZlcnRWYWx1ZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgICB9LAogICAgICAgIC8qKiBIaWRlIGN1cnJlbmN5LiAqLwogICAgICAgIG5vQ3VycmVuY3k6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgICAgfSwKICAgICAgICAvKiogVXNlIEZQbGFjZWhvbGRlci4gKi8KICAgICAgICB1c2VQbGFjZWhvbGRlcjogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgLyoqIERldGVybWluZXMgd2hldGhlciB0aGUgY29udGVudCBpcyBsb2FkZWQgb3Igbm90LiAqLwogICAgICAgIGNvbnRlbnRMb2FkZWQ6IHsKICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgICAgfSwKICAgICAgICAvKiogUmVwbGFjZW1lbnQgdGV4dCBmb3IgRlBsYWNlaG9sZGVyLiAqLwogICAgICAgIHJlcGxhY2VtZW50VGV4dDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICcxMCwwMDAuMDAgTkVYVCcsCiAgICAgICAgfSwKICAgICAgICAvKiogQ3VycmVuY3kgc3ltYm9sIHVzZWQgaW4gYGZvcm1hdE51bWJlckJ5TG9jYWxlYCBmdW5jdGlvbiAqLwogICAgICAgIG51bWJlckN1cnJlbmN5OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJycsCiAgICAgICAgfSwKICAgICAgICAvKiogTnVtYmVyIG9mIGRlY2ltYWwgcGxhY2VzLiBJZiBub3Qgc2V0ICgtMSksIHRva2VuIGRlY2ltYWwgcGxhY2VzIHdpbGwgYmUgdGFrZW4uICovCiAgICAgICAgZGVjaW1hbHM6IHsKICAgICAgICAgICAgdHlwZTogTnVtYmVyLAogICAgICAgICAgICBkZWZhdWx0OiAtMSwKICAgICAgICB9LAogICAgICAgIG1heERlY2ltYWxzOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgZGVmYXVsdDogMCwKICAgICAgICB9LAogICAgICAgIC8qKiBBZGQgdGhpcyBudW1iZXIgb2YgZGVjaW1hbHMgdG8gZGVmYXVsdCB0b2tlbiBkZWNpbWFscy4gKi8KICAgICAgICBhZGREZWNpbWFsczogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgICAgIGRlZmF1bHQ6IDAsCiAgICAgICAgfSwKICAgIH0sCgogICAgY29tcHV0ZWQ6IHsKICAgICAgICB0b2tlblN5bWJvbCgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGRlZmkuZ2V0VG9rZW5TeW1ib2wodGhpcy50b2tlbik7CiAgICAgICAgfSwKCiAgICAgICAgdG9rZW5WYWx1ZSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0VG9rZW5WYWx1ZSh0aGlzLmNWYWx1ZSk7CiAgICAgICAgfSwKCiAgICAgICAgY0RlY2ltYWxzKCkgewogICAgICAgICAgICBjb25zdCB7IG1heERlY2ltYWxzIH0gPSB0aGlzOwogICAgICAgICAgICBjb25zdCBkZWNpbWFscyA9CiAgICAgICAgICAgICAgICB0aGlzLmRlY2ltYWxzID4gLTEgPyB0aGlzLmRlY2ltYWxzIDogdGhpcy4kZGVmaS5nZXRUb2tlbkRlY2ltYWxzKHRoaXMudG9rZW4pICsgdGhpcy5hZGREZWNpbWFsczsKCiAgICAgICAgICAgIHJldHVybiBtYXhEZWNpbWFscyA+IDAgJiYgZGVjaW1hbHMgPiBtYXhEZWNpbWFscyA/IG1heERlY2ltYWxzIDogZGVjaW1hbHM7CiAgICAgICAgfSwKCiAgICAgICAgY1ZhbHVlKCkgewogICAgICAgICAgICBsZXQgdmFsdWUgPSB0aGlzLnZhbHVlOwoKICAgICAgICAgICAgaWYgKHRoaXMuY29udmVydFZhbHVlKSB7CiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMuJGRlZmkuZnJvbVRva2VuVmFsdWUodGhpcy52YWx1ZSwgdGhpcy50b2tlbik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB2YWx1ZTsKICAgICAgICB9LAoKICAgICAgICBzaG93RG90cygpIHsKICAgICAgICAgICAgY29uc3QgeyBjRGVjaW1hbHMgfSA9IHRoaXM7CgogICAgICAgICAgICBpZiAoY0RlY2ltYWxzID4gMCkgewogICAgICAgICAgICAgICAgY29uc3QgZlZhbHVlID0gcGFyc2VGbG9hdCh0aGlzLmNWYWx1ZSk7CiAgICAgICAgICAgICAgICBjb25zdCB0ZlZhbHVlID0gZlZhbHVlLnRvRml4ZWQoY0RlY2ltYWxzKTsKICAgICAgICAgICAgICAgIGNvbnN0IGZ0ZlZhbHVlID0gcGFyc2VGbG9hdCh0ZlZhbHVlKTsKCiAgICAgICAgICAgICAgICBpZiAoZlZhbHVlICE9PSBmdGZWYWx1ZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHNwbCA9IHRmVmFsdWUuc3BsaXQoJy4nKTsKCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHNwbC5sZW5ndGggPT09IDIgJiYgcGFyc2VJbnQoc3BsWzFdKSA9PT0gMDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0sCiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBmb3JtYXRUb2tlblZhbHVlKF92YWx1ZSkgewogICAgICAgICAgICBjb25zdCB7IGNEZWNpbWFscyB9ID0gdGhpczsKCiAgICAgICAgICAgIHJldHVybiBfdmFsdWUgPT09IDAKICAgICAgICAgICAgICAgID8gMAogICAgICAgICAgICAgICAgOiBmb3JtYXROdW1iZXJCeUxvY2FsZShwYXJzZUZsb2F0KF92YWx1ZSkudG9GaXhlZChjRGVjaW1hbHMpLCBjRGVjaW1hbHMsIHRoaXMubnVtYmVyQ3VycmVuY3kpOwogICAgICAgIH0sCiAgICB9LAp9Owo="},{"version":3,"sources":["FTokenValue.vue"],"names":[],"mappings":";AAsfile":"FTokenValue.vue","sourceRoot":"src/components/core/FTokenValue","sourcesContent":["<template>\n    <span class=\"f-token-value\" :title=\"cValue\">\n        <f-placeholder\n            v-if=\"usePlaceholder\"\n            :content-loaded=\"!!token.symbol || contentLoaded\"\n            :replacement-text=\"replacementText\"\n        >\n            <span class=\"f-token-value__value\">\n                {{ tokenValue }}<span v-if=\"showDots\" class=\"f-token-value__dots\">&#8230;</span>\n            </span>\n            <span v-if=\"!noCurrency\" class=\"currency\">{{ tokenSymbol }}</span>\n        </f-placeholder>\n        <template v-else>\n            <span class=\"f-token-value__value\">\n                {{ tokenValue }}<span v-if=\"showDots\" class=\"f-token-value__dots\">&#8230;</span>\n            </span>\n            <span v-if=\"!noCurrency\" class=\"currency\">{{ tokenSymbol }}</span>\n        </template>\n    </span>\n</template>\n\n<script>\nimport { formatNumberByLocale } from '@/filters.js';\nimport FPlaceholder from '@/components/core/FPlaceholder/FPlaceholder.vue';\n\nexport default {\n    name: 'FTokenValue',\n\n    components: { FPlaceholder },\n\n    props: {\n        /** @type {DefiToken} */\n        token: {\n            type: Object,\n            default() {\n                return {};\n            },\n            // required: true,\n        },\n        /** Token's value. */\n        value: {\n            type: [Number, String],\n            default: 0,\n        },\n        convertValue: {\n            type: Boolean,\n            default: false,\n        },\n        /** Hide currency. */\n        noCurrency: {\n            type: Boolean,\n            default: false,\n        },\n        /** Use FPlaceholder. */\n        usePlaceholder: {\n            type: Boolean,\n            default: true,\n        },\n        /** Determines whether the content is loaded or not. */\n        contentLoaded: {\n            type: Boolean,\n            default: false,\n        },\n        /** Replacement text for FPlaceholder. */\n        replacementText: {\n            type: String,\n            default: '10,000.00 NEXT',\n        },\n        /** Currency symbol used in `formatNumberByLocale` function */\n        numberCurrency: {\n            type: String,\n            default: '',\n        },\n        /** Number of decimal places. If not set (-1), token decimal places will be taken. */\n        decimals: {\n            type: Number,\n            default: -1,\n        },\n        maxDecimals: {\n            type: Number,\n            default: 0,\n        },\n        /** Add this number of decimals to default token decimals. */\n        addDecimals: {\n            type: Number,\n            default: 0,\n        },\n    },\n\n    computed: {\n        tokenSymbol() {\n            return this.$defi.getTokenSymbol(this.token);\n        },\n\n        tokenValue() {\n            return this.formatTokenValue(this.cValue);\n        },\n\n        cDecimals() {\n            const { maxDecimals } = this;\n            const decimals =\n                this.decimals > -1 ? this.decimals : this.$defi.getTokenDecimals(this.token) + this.addDecimals;\n\n            return maxDecimals > 0 && decimals > maxDecimals ? maxDecimals : decimals;\n        },\n\n        cValue() {\n            let value = this.value;\n\n            if (this.convertValue) {\n                value = this.$defi.fromTokenValue(this.value, this.token);\n            }\n\n            return value;\n        },\n\n        showDots() {\n            const { cDecimals } = this;\n\n            if (cDecimals > 0) {\n                const fValue = parseFloat(this.cValue);\n                const tfValue = fValue.toFixed(cDecimals);\n                const ftfValue = parseFloat(tfValue);\n\n                if (fValue !== ftfValue) {\n                    const spl = tfValue.split('.');\n\n                    return spl.length === 2 && parseInt(spl[1]) === 0;\n                }\n            }\n\n            return false;\n        },\n    },\n\n    methods: {\n        formatTokenValue(_value) {\n            const { cDecimals } = this;\n\n            return _value === 0\n                ? 0\n                : formatNumberByLocale(parseFloat(_value).toFixed(cDecimals), cDecimals, this.numberCurrency);\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}
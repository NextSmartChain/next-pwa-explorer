{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/TokenTransactionsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/TokenTransactionsList.vue","mtime":1657708591374},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBhcHBDb25maWcgZnJvbSAnLi4vLi4vYXBwLmNvbmZpZy5qcyc7CmltcG9ydCBGVG9rZW5WYWx1ZSBmcm9tICdAL2NvbXBvbmVudHMvY29yZS9GVG9rZW5WYWx1ZS9GVG9rZW5WYWx1ZS52dWUnOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1Rva2VuVHJhbnNhY3Rpb25zTGlzdCcsCgogICAgY29tcG9uZW50czogewogICAgICAgIEZUb2tlblZhbHVlLAogICAgfSwKCiAgICBwcm9wczogewogICAgICAgIC8vIHRva2VuIHRyYW5zYWN0aW9ucyBsaXN0CiAgICAgICAgdG9rZW5UcmFuc2FjdGlvbnM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgIH0sCgogICAgICAgIC8vIGFjY291bnQgYWRkcmVzcwogICAgICAgIGFkZHJlc3M6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnJywKICAgICAgICB9LAogICAgfSwKCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGV4cGxvcmVyVXJsOiBhcHBDb25maWcuZXhwbG9yZXJVcmwsCiAgICAgICAgfTsKICAgIH0sCgogICAgbWV0aG9kczogewogICAgICAgIGlzT3RoZXJBZGRyZXNzKGFkZHJlc3MpIHsKICAgICAgICAgICAgcmV0dXJuICgKICAgICAgICAgICAgICAgIGFkZHJlc3MudG9Mb3dlckNhc2UoKSAhPT0gdGhpcy5hZGRyZXNzLnRvTG93ZXJDYXNlKCkgJiYKICAgICAgICAgICAgICAgIGFkZHJlc3MudG9Mb3dlckNhc2UoKSAhPT0gJzB4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCcKICAgICAgICAgICAgKTsKICAgICAgICB9LAoKICAgICAgICB0b0NhbWVsQ2FzZShzdHIpIHsKICAgICAgICAgICAgcmV0dXJuIHN0ci5jaGFyQXQoMCkgKyBzdHIuc2xpY2UoMSkudG9Mb3dlckNhc2UoKTsKICAgICAgICB9LAogICAgfSwKfTsK"},{"version":3,"sources":["TokenTransactionsList.vue"],"names":[],"mappings":";AAyBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"TokenTransactionsList.vue","sourceRoot":"src/data-tables","sourcesContent":["<template>\n    <div>\n        <div v-for=\"(tx, index) in tokenTransactions\" :key=\"index\" class=\"token-transaction-item\">\n            <!-- Transfer 5 wFTM (ERC-20) From 0x.... To 0x... -->\n            <span class=\"txType\">{{ toCamelCase(tx.type) }}</span>\n            <f-token-value\n                :token=\"{ symbol: tx.tokenSymbol || 'tokens', decimals: tx.tokenDecimals }\"\n                :value=\"tx.amount\"\n                convert-value\n                :use-placeholder=\"false\"\n            />\n            <small>({{ tx.tokenType }})</small>\n            <template v-if=\"isOtherAddress(tx.sender)\">\n                <span>From</span>\n                <router-link :to=\"{name: 'address-detail', params: {id: tx.sender}}\" :title=\"tx.sender\">{{ tx.sender | formatHash }}</router-link>\n            </template>\n            <template v-if=\"isOtherAddress(tx.recipient)\">\n                <span>To</span>\n                <router-link :to=\"{name: 'address-detail', params: {id: tx.recipient}}\" :title=\"tx.recipient\">{{ tx.recipient | formatHash }}</router-link>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport appConfig from '../../app.config.js';\nimport FTokenValue from '@/components/core/FTokenValue/FTokenValue.vue';\n\nexport default {\n    name: 'TokenTransactionsList',\n\n    components: {\n        FTokenValue,\n    },\n\n    props: {\n        // token transactions list\n        tokenTransactions: {\n            type: Array,\n            required: true,\n        },\n\n        // account address\n        address: {\n            type: String,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            explorerUrl: appConfig.explorerUrl,\n        };\n    },\n\n    methods: {\n        isOtherAddress(address) {\n            return (\n                address.toLowerCase() !== this.address.toLowerCase() &&\n                address.toLowerCase() !== '0x0000000000000000000000000000000000000000'\n            );\n        },\n\n        toCamelCase(str) {\n            return str.charAt(0) + str.slice(1).toLowerCase();\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.token-transaction-item {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    gap: 6px;\n\n    a {\n        max-width: 200px;\n    }\n\n    small {\n        font-size: 0.8em;\n    }\n\n    .f-token-value {\n        font-weight: bold;\n    }\n\n    .txType {\n        color: var(--f-success-color);\n    }\n\n    .subrow {\n        height: auto !important;\n\n        td {\n            padding-top: 0;\n            vertical-align: top !important;\n        }\n    }\n}\n</style>\n"]}]}
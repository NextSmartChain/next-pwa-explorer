{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/data-tables/TokenTransactionsList.vue?vue&type=style&index=0&id=165ab086&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/data-tables/TokenTransactionsList.vue","mtime":1657708591374},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50b2tlbi10cmFuc2FjdGlvbi1pdGVtIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogICAgZmxleC13cmFwOiB3cmFwOwogICAgZ2FwOiA2cHg7CgogICAgYSB7CiAgICAgICAgbWF4LXdpZHRoOiAyMDBweDsKICAgIH0KCiAgICBzbWFsbCB7CiAgICAgICAgZm9udC1zaXplOiAwLjhlbTsKICAgIH0KCiAgICAuZi10b2tlbi12YWx1ZSB7CiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICB9CgogICAgLnR4VHlwZSB7CiAgICAgICAgY29sb3I6IHZhcigtLWYtc3VjY2Vzcy1jb2xvcik7CiAgICB9CgogICAgLnN1YnJvdyB7CiAgICAgICAgaGVpZ2h0OiBhdXRvICFpbXBvcnRhbnQ7CgogICAgICAgIHRkIHsKICAgICAgICAgICAgcGFkZGluZy10b3A6IDA7CiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3AgIWltcG9ydGFudDsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["TokenTransactionsList.vue"],"names":[],"mappings":";AAuEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"TokenTransactionsList.vue","sourceRoot":"src/data-tables","sourcesContent":["<template>\n    <div>\n        <div v-for=\"(tx, index) in tokenTransactions\" :key=\"index\" class=\"token-transaction-item\">\n            <!-- Transfer 5 wFTM (ERC-20) From 0x.... To 0x... -->\n            <span class=\"txType\">{{ toCamelCase(tx.type) }}</span>\n            <f-token-value\n                :token=\"{ symbol: tx.tokenSymbol || 'tokens', decimals: tx.tokenDecimals }\"\n                :value=\"tx.amount\"\n                convert-value\n                :use-placeholder=\"false\"\n            />\n            <small>({{ tx.tokenType }})</small>\n            <template v-if=\"isOtherAddress(tx.sender)\">\n                <span>From</span>\n                <router-link :to=\"{name: 'address-detail', params: {id: tx.sender}}\" :title=\"tx.sender\">{{ tx.sender | formatHash }}</router-link>\n            </template>\n            <template v-if=\"isOtherAddress(tx.recipient)\">\n                <span>To</span>\n                <router-link :to=\"{name: 'address-detail', params: {id: tx.recipient}}\" :title=\"tx.recipient\">{{ tx.recipient | formatHash }}</router-link>\n            </template>\n        </div>\n    </div>\n</template>\n\n<script>\nimport appConfig from '../../app.config.js';\nimport FTokenValue from '@/components/core/FTokenValue/FTokenValue.vue';\n\nexport default {\n    name: 'TokenTransactionsList',\n\n    components: {\n        FTokenValue,\n    },\n\n    props: {\n        // token transactions list\n        tokenTransactions: {\n            type: Array,\n            required: true,\n        },\n\n        // account address\n        address: {\n            type: String,\n            default: '',\n        },\n    },\n\n    data() {\n        return {\n            explorerUrl: appConfig.explorerUrl,\n        };\n    },\n\n    methods: {\n        isOtherAddress(address) {\n            return (\n                address.toLowerCase() !== this.address.toLowerCase() &&\n                address.toLowerCase() !== '0x0000000000000000000000000000000000000000'\n            );\n        },\n\n        toCamelCase(str) {\n            return str.charAt(0) + str.slice(1).toLowerCase();\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n.token-transaction-item {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    gap: 6px;\n\n    a {\n        max-width: 200px;\n    }\n\n    small {\n        font-size: 0.8em;\n    }\n\n    .f-token-value {\n        font-weight: bold;\n    }\n\n    .txType {\n        color: var(--f-success-color);\n    }\n\n    .subrow {\n        height: auto !important;\n\n        td {\n            padding-top: 0;\n            vertical-align: top !important;\n        }\n    }\n}\n</style>\n"]}]}
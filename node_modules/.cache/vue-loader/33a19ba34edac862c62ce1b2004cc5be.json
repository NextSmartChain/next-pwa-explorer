{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/layouts/FValidatorDetail.vue?vue&type=style&index=0&id=443e403c&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/layouts/FValidatorDetail.vue","mtime":1657708591078},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mLXZhbGlkYXRvci1kZXRhaWwgewogICAgLypwYWRkaW5nLXRvcDogMTZweDsqLwoKICAgIC5udW0tYmxvY2sgewogICAgICAgIGgyIHsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBtYXJnaW4tdG9wOiAxNnB4OwogICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA0cHg7CiAgICAgICAgfQoKICAgICAgICAubnVtIHsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDsKICAgICAgICAgICAgZm9udC1zaXplOiAkZnM0ODsKICAgICAgICB9CiAgICB9CgogICAgPiAuZi1jYXJkIHsKICAgIH0KCiAgICAudmFsaWRhdG9yLWltZyB7CiAgICAgICAgbWFyZ2luLWlubGluZS1lbmQ6IDhweDsKICAgIH0KfQo="},{"version":3,"sources":["FValidatorDetail.vue"],"names":[],"mappings":";AA8TA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"FValidatorDetail.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\n    <div class=\"f-validator-detail f-data-layout\">\n        <template v-if=\"!dStakerByAddressError\">\n            <f-card>\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label center-v\">{{ $t('view_validator_detail.name') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"cStakerName\">\n                            <div class=\"validator-img\">\n                                <img v-if=\"cStakerLogoUrl\"  :src=\"cStakerLogoUrl\" :alt=\"cStakerName\" class=\"not-fluid\">\n                                <img v-else src=\"/img/next-logo.png\" alt=\"next logo\" class=\"not-fluid\">\n                            </div>\n\n                            {{ cStakerName }}\n\n                            <a v-if=\"cStakerWebsite\" :href=\"cStakerWebsite\" target=\"_blank\" rel=\"nofollow\" class=\"validator-website\">\n                                <icon data=\"@/assets/svg/external-link-alt.svg\"></icon>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.validator_id') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'id' in cStaker\">\n                            {{ cStaker.id | formatHexToInt }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.address') }}</div>\n                    <div class=\"col\">\n                        <div class=\"break-word\">\n                            <router-link :to=\"{name: 'address-detail', params: {id: address}}\">{{ address }}</router-link>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.start_epoch') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'createdEpoch' in cStaker\">\n                            {{ cStaker.createdEpoch | formatHexToInt }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.start_time') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'createdTime' in cStaker\">\n                            {{ formatDate(timestampToDate(formatHexToInt(cStaker.createdTime))) }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.amount_staked') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'stake' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.stake), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.amount_delegated') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'delegatedMe' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.delegatedMe), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.staking_total') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'totalStake' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.totalStake), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.active') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'isActive' in cStaker\">\n                            <f-yes-no :value=\"cStaker.isActive\" use-colors />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.online') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'isOffline' in cStaker\">\n                            <f-yes-no :value=\"!cStaker.isOffline\" use-colors />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.downtime') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'downtime' in cStaker\">\n                            {{ clampDowntime(Math.round(formatHexToInt(cStaker.downtime) / 10000000) / 100) }} s\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.locked_until') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'lockedUntil' in cStaker\">\n                            {{ formatDate(timestampToDate(cStaker.lockedUntil)) }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.lock_days') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'lockedUntil' in cStaker\">\n                            {{ cLockDays }}\n                        </div>\n                    </div>\n                </div>\n            </f-card>\n\n            <div class=\"f-subsection\">\n                <h2 class=\"h1\">{{ $t('view_validator_detail.delegations') }} <span v-if=\"dDelegationListRecordsCount\" class=\"f-records-count\">({{ dDelegationListRecordsCount }})</span></h2>\n\n                <f-delegation-list\n                    :staker-id=\"cStaker.id\"\n                    @records-count=\"onDelegationListRecordsCount\"\n                />\n            </div>\n        </template>\n        <template v-else>\n            <div class=\"query-error\">{{ dStakerByAddressError }}</div>\n        </template>\n    </div>\n</template>\n\n<script>\n    import FCard from \"../components/core/FCard/FCard.vue\";\n    import gql from 'graphql-tag';\n    import {\n        formatHexToInt,\n        timestampToDate,\n        formatNumberByLocale,\n        numToFixed,\n        clampDowntime,\n        formatDate,\n        prepareTimestamp\n    } from \"../filters.js\";\n    import { WEIToFTM } from \"../utils/transactions.js\";\n    import FDelegationList from \"../data-tables/FDelegationList.vue\";\n    import FYesNo from \"../components/FYesNo.vue\";\n\n    const dayS = 60 * 60 * 24;\n\n    export default {\n        components: {\n            FYesNo,\n            FDelegationList,\n            FCard\n        },\n\n        props: {\n            /** Validator (staker) address. */\n            address: {\n                type: String,\n                required: true,\n                default: ''\n            },\n\n            /** Number of items per page. */\n            itemsPerPage: {\n                type: Number,\n                default: 20\n            }\n        },\n\n        apollo: {\n            staker: {\n                query: gql`\n                    query StakerByAddress($address: Address!) {\n                        staker(address: $address) {\n                            id\n                            stakerAddress\n                            totalStake\n                            stake\n                            delegatedMe\n                            createdEpoch\n                            createdTime\n                            downtime\n                            lockedUntil\n                            isActive\n                            isOffline\n                            validatorInfo {\n                                name\n                                website\n                                contact\n                                logoUrl\n                            }\n                        }\n                    }\n                `,\n                variables() {\n                    return {\n                        address: this.address\n                    }\n                },\n                error(_error) {\n                    this.dStakerByAddressError = _error.message;\n                }\n            }\n        },\n\n        data() {\n            return {\n                dDelegationListRecordsCount: 0,\n                dStakerByAddressError: ''\n            }\n        },\n\n        computed: {\n            cStaker() {\n                return this.staker || {};\n            },\n\n            cStakerName() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo && staker.stakerInfo.name ? staker.stakerInfo.name : this.$t('view_validator_list.unknown');\n            },\n\n            cStakerWebsite() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo ? staker.stakerInfo.website || staker.stakerInfo.contact : '';\n            },\n\n            cStakerLogoUrl() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo && staker.stakerInfo.logoUrl ? staker.stakerInfo.logoUrl : '';\n            },\n\n            cDelegationItems() {\n                const {cStaker} = this;\n                let items = [];\n\n                if (cStaker && cStaker.delegations) {\n                    items = cStaker.delegations\n                }\n\n                return items;\n            },\n\n            cLoading() {\n                return this.$apollo.queries.staker.loading;\n            },\n\n            cLockDays() {\n                const {cStaker} = this;\n                const ts = cStaker && cStaker.lockedUntil ? prepareTimestamp(cStaker.lockedUntil) : 0;\n\n                return ts > 0 ? parseInt((ts - Date.now()) / (dayS * 1000), 10) : '-';\n            }\n        },\n\n        methods: {\n            onDelegationListRecordsCount(_num) {\n                this.dDelegationListRecordsCount = _num;\n            },\n\n            WEIToFTM,\n            timestampToDate,\n            formatDate,\n            formatHexToInt,\n            formatNumberByLocale,\n            numToFixed,\n            clampDowntime,\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .f-validator-detail {\n        /*padding-top: 16px;*/\n\n        .num-block {\n            h2 {\n                text-align: center;\n                margin-top: 16px;\n                margin-bottom: 4px;\n            }\n\n            .num {\n                text-align: center;\n                font-weight: bold;\n                font-size: $fs48;\n            }\n        }\n\n        > .f-card {\n        }\n\n        .validator-img {\n            margin-inline-end: 8px;\n        }\n    }\n</style>\n"]}]}
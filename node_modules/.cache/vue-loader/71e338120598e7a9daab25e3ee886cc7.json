{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/forms/ValidateContractForm.vue?vue&type=style&index=0&id=3279ad90&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/forms/ValidateContractForm.vue","mtime":1657708591318},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5mb3JtLWJ1dHRvbnMgewogICAgLmYtbWVzc2FnZSB7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTZweDsKICAgIH0KfQo="},{"version":3,"sources":["ValidateContractForm.vue"],"names":[],"mappings":";AAiNA;AACA;AACA;AACA;AACA","file":"ValidateContractForm.vue","sourceRoot":"src/forms","sourcesContent":["<template>\n    <div class=\"validate-contract-form\">\n        <f-form center-form @f-form-submit=\"onFormSubmit\">\n            <fieldset>\n                <legend class=\"not-visible\">{{ $t('validate_contract_form.validate_contract') }}</legend>\n\n                <div class=\"form-body\">\n                    <f-input\n                        :value=\"contractData.name\"\n                        type=\"text\"\n                        :label=\"`${$t('validate_contract_form.name')} (${$t('optional')})`\"\n                        field-size=\"large\"\n                        name=\"name\"\n                        maxlength=\"64\"\n                        validate-on-input\n                        :validator=\"checkName\"\n                    >\n                        <template #bottom=\"sProps\">\n                            <f-message v-show=\"sProps.showErrorMessage\" type=\"error\" role=\"alert\" with-icon>\n                                {{ $t('maximum_allowed_characters_length', { len: 64 }) }}\n                            </f-message>\n                        </template>\n                    </f-input>\n\n                    <f-input\n                        :value=\"contractData.version\"\n                        type=\"text\"\n                        :label=\"`${$t('validate_contract_form.version')} (${$t('optional')})`\"\n                        field-size=\"large\"\n                        name=\"version\"\n                        maxlength=\"14\"\n                        validate-on-input\n                        :validator=\"checkVersion\"\n                    >\n                        <template #bottom=\"sProps\">\n                            <f-message v-show=\"sProps.showErrorMessage\" type=\"error\" role=\"alert\" with-icon>\n                                {{ $t('maximum_allowed_characters_length', { len: 14 }) }}\n                            </f-message>\n                        </template>\n                    </f-input>\n\n                    <f-input\n                        :value=\"contractData.supportContact\"\n                        type=\"text\"\n                        :label=\"`${$t('validate_contract_form.support_contact')} (${$t('optional')})`\"\n                        field-size=\"large\"\n                        name=\"supportContact\"\n                        maxlength=\"64\"\n                        validate-on-input\n                        :validator=\"checkSupportContact\"\n                    >\n                        <template #bottom=\"sProps\">\n                            <f-message v-show=\"sProps.showErrorMessage\" type=\"error\" role=\"alert\" with-icon>\n                                {{ $t('maximum_allowed_characters_length', { len: 64 }) }}\n                            </f-message>\n                        </template>\n                    </f-input>\n\n                    <f-input\n                        :value=\"contractData.sourceCode\"\n                        type=\"text\"\n                        is-textarea\n                        rows=\"20\"\n                        :label=\"`${$t('validate_contract_form.source_code')}`\"\n                        field-size=\"large\"\n                        name=\"sourceCode\"\n                        validate-on-input\n                        :validator=\"checkSourceCode\"\n                    >\n                        <template #bottom=\"sProps\">\n                            <f-message v-show=\"sProps.showErrorMessage\" type=\"error\" role=\"alert\" with-icon>\n                                {{ $t('required_field') }}\n                            </f-message>\n                        </template>\n                    </f-input>\n\n                    <div class=\"align-center form-buttons\">\n                        <f-message v-if=\"errorMessage\" type=\"error\" with-icon>{{ errorMessage }}</f-message>\n                        <button type=\"submit\" class=\"btn large\">{{ $t('validate_contract_form.validate') }}</button>\n                    </div>\n                </div>\n            </fieldset>\n        </f-form>\n    </div>\n</template>\n\n<script>\n    import FForm from \"../components/core/FForm/FForm.vue\";\n    import FInput from \"../components/core/FInput/FInput.vue\";\n    import FMessage from \"../components/core/FMessage/FMessage.vue\";\n    import gql from \"graphql-tag\";\n\n    export default {\n        name: \"ValidateContractForm\",\n\n        components: {FMessage, FInput, FForm},\n\n        props: {\n            /** Account data */\n            contractData: {\n                type: Object,\n                default() {\n                    return {\n                        sourceCode: '',\n                        name: '',\n                        version: '',\n                        supportContact: '',\n                        address: '',\n                    };\n                },\n                required: true,\n            },\n        },\n\n        data() {\n            return {\n                errorMessage: '',\n            };\n        },\n\n        methods: {\n            validateContract(_contract) {\n                this.$apollo\n                    .mutate({\n                        mutation: gql`\n                        mutation($contract: ContractValidationInput!) {\n                            validateContract(contract: $contract) {\n                                address\n                                deployedBy {\n                                    hash\n                                    contractAddress\n                                }\n                                name\n                                version\n                                compiler\n                                sourceCode\n                                abi\n                                validated\n                                supportContact\n                                timestamp\n                            }\n                        }\n                    `,\n                        variables: {\n                            contract: _contract,\n                        },\n                    })\n                    .then((_data) => {\n                        this.$emit('contract-validated', _data.data.validateContract);\n                    })\n                    .catch((_error) => {\n                        this.errorMessage = _error;\n                    });\n            },\n\n            /**\n             * @param {string} _value\n             * @return {boolean}\n             */\n            checkName(_value) {\n                return _value.length <= 64;\n            },\n\n            /**\n             * @param {string} _value\n             * @return {boolean}\n             */\n            checkVersion(_value) {\n                return _value.length <= 14;\n            },\n\n            /**\n             * @param {string} _value\n             * @return {boolean}\n             */\n            checkSupportContact(_value) {\n                return _value.length <= 64;\n            },\n\n            /**\n             * @param {string} _value\n             * @return {boolean}\n             */\n            checkSourceCode(_value) {\n                return !!_value.trim();\n            },\n\n            onFormSubmit(_event) {\n                const { data } = _event.detail;\n\n                if (!data.name) {\n                    delete data.name;\n                }\n\n                if (!data.version) {\n                    delete data.version;\n                }\n\n                if (!data.supportContact) {\n                    delete data.supportContact;\n                }\n\n                this.validateContract({ address: this.contractData.address, ...data})\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n.form-buttons {\n    .f-message {\n        margin-bottom: 16px;\n    }\n}\n</style>\n"]}]}
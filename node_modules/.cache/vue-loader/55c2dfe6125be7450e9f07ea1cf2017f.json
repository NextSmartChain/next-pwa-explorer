{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/App.vue?vue&type=style&index=0&id=0793d849&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/App.vue","mtime":1657708595174},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgIi4vYXNzZXRzL3Njc3MvbWFpbiI7CgojYXBwIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgbWluLWhlaWdodDogMTAwdmg7CiAgICBwYWRkaW5nLXRvcDogJGYtaGVhZGVyLWhlaWdodDsKCiAgICBtYWluIHsKICAgICAgICBmbGV4OiAxIDE7CiAgICAgICAgbWluLWhlaWdodDogNzAwcHg7CiAgICB9Cn0KCi5uYXJyb3ctY29udGFpbmVyIHsKICAgIHBhZGRpbmctdG9wOiAxNnB4OwogICAgcGFkZGluZy1ib3R0b206IDE2cHg7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AA6IA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <f-header></f-header>\n        <main>\n            <router-view></router-view>\n        </main>\n        <f-footer></f-footer>\n\n        <f-breakpoints>\n            <f-breakpoint value=\"768px\" code=\"menu-mobile\"></f-breakpoint>\n            <f-breakpoint value=\"600px\" code=\"data-table-mobile-view\"></f-breakpoint>\n            <f-breakpoint value=\"940px\" code=\"contract-list-dt-mobile-view\"></f-breakpoint>\n            <f-breakpoint value=\"1000px\" code=\"transaction-list-dt-mobile-view\"></f-breakpoint>\n            <f-breakpoint value=\"1100px\" code=\"validator-list-dt-mobile-view\"></f-breakpoint>\n        </f-breakpoints>\n        <f-aria-alert />\n    </div>\n</template>\n\n<script>\n    import FBreakpoint from \"./components/FBreakpoint.vue\";\n    import FBreakpoints from \"./components/FBreakpoints.vue\";\n    import FHeader from \"./layouts/FHeader.vue\";\n    import FFooter from \"./layouts/FFooter.vue\";\n    import gql from 'graphql-tag';\n    import FAriaAlert from \"./components/core/FAriaAlert/FAriaAlert.vue\";\n\n    export default {\n        name: 'App',\n\n        components: {\n            FAriaAlert,\n            FBreakpoint,\n            FBreakpoints,\n            FHeader,\n            FFooter\n        },\n\n        apollo: {\n            price: {\n                query: gql`\n                    query Price($to: String!) {\n                        price(to: $to) {\n                            price\n                        }\n                    }\n                `,\n\n                result(_data) {\n                    if (!_data.data.price) {\n                        return;\n                    }\n\n                    let tokenPrice =  parseFloat(_data.data.price.price);\n\n                    tokenPrice = (parseInt(tokenPrice * 100000) / 100000);\n\n                    this.$store.commit('setTokenPrice', tokenPrice);\n                },\n\n                variables() {\n                    return {\n                        to: 'USD'\n                    }\n                }\n            },\n\n            gasPrice: {\n                query: gql`\n                    query GasPrice {\n                        gasPrice\n                    }\n                `,\n\n                result(_data) {\n                    const gasPrice = parseInt(_data.data.gasPrice);\n\n                    if (gasPrice) {\n                        this.$store.commit('setGasPrice', gasPrice);\n                    }\n                },\n            }\n        },\n\n        created() {\n            this.darkMode(this.$store.state.darkMode);\n        },\n\n        methods: {\n            /**\n             * @param {boolean} _on\n             */\n            setDarkMode(_on) {\n                this.$store.commit('setDarkMode', _on);\n\n                this.darkMode(_on);\n            },\n\n            /**\n             * @param {boolean} _on\n             */\n            darkMode(_on) {\n                const { documentElement } = document;\n\n                documentElement.classList.add('theme-transition');\n\n                if (_on) {\n                    documentElement.classList.add('dark-theme');\n                } else {\n                    documentElement.classList.remove('dark-theme');\n                }\n\n                setTimeout(function () {\n                    documentElement.classList.remove('theme-transition');\n                }, 250);\n            },\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    @import \"./assets/scss/main\";\n\n    #app {\n        display: flex;\n        flex-direction: column;\n        min-height: 100vh;\n        padding-top: $f-header-height;\n\n        main {\n            flex: 1 1;\n            min-height: 700px;\n        }\n    }\n\n    .narrow-container {\n        padding-top: 16px;\n        padding-bottom: 16px;\n    }\n</style>\n"]}]}
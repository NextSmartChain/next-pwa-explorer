{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/layouts/FValidatorDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/layouts/FValidatorDetail.vue","mtime":1657708591078},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgRkNhcmQgZnJvbSAiLi4vY29tcG9uZW50cy9jb3JlL0ZDYXJkL0ZDYXJkLnZ1ZSI7CiAgICBpbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJzsKICAgIGltcG9ydCB7CiAgICAgICAgZm9ybWF0SGV4VG9JbnQsCiAgICAgICAgdGltZXN0YW1wVG9EYXRlLAogICAgICAgIGZvcm1hdE51bWJlckJ5TG9jYWxlLAogICAgICAgIG51bVRvRml4ZWQsCiAgICAgICAgY2xhbXBEb3dudGltZSwKICAgICAgICBmb3JtYXREYXRlLAogICAgICAgIHByZXBhcmVUaW1lc3RhbXAKICAgIH0gZnJvbSAiLi4vZmlsdGVycy5qcyI7CiAgICBpbXBvcnQgeyBXRUlUb0ZUTSB9IGZyb20gIi4uL3V0aWxzL3RyYW5zYWN0aW9ucy5qcyI7CiAgICBpbXBvcnQgRkRlbGVnYXRpb25MaXN0IGZyb20gIi4uL2RhdGEtdGFibGVzL0ZEZWxlZ2F0aW9uTGlzdC52dWUiOwogICAgaW1wb3J0IEZZZXNObyBmcm9tICIuLi9jb21wb25lbnRzL0ZZZXNOby52dWUiOwoKICAgIGNvbnN0IGRheVMgPSA2MCAqIDYwICogMjQ7CgogICAgZXhwb3J0IGRlZmF1bHQgewogICAgICAgIGNvbXBvbmVudHM6IHsKICAgICAgICAgICAgRlllc05vLAogICAgICAgICAgICBGRGVsZWdhdGlvbkxpc3QsCiAgICAgICAgICAgIEZDYXJkCiAgICAgICAgfSwKCiAgICAgICAgcHJvcHM6IHsKICAgICAgICAgICAgLyoqIFZhbGlkYXRvciAoc3Rha2VyKSBhZGRyZXNzLiAqLwogICAgICAgICAgICBhZGRyZXNzOiB7CiAgICAgICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgICAgICAgIGRlZmF1bHQ6ICcnCiAgICAgICAgICAgIH0sCgogICAgICAgICAgICAvKiogTnVtYmVyIG9mIGl0ZW1zIHBlciBwYWdlLiAqLwogICAgICAgICAgICBpdGVtc1BlclBhZ2U6IHsKICAgICAgICAgICAgICAgIHR5cGU6IE51bWJlciwKICAgICAgICAgICAgICAgIGRlZmF1bHQ6IDIwCiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBhcG9sbG86IHsKICAgICAgICAgICAgc3Rha2VyOiB7CiAgICAgICAgICAgICAgICBxdWVyeTogZ3FsYAogICAgICAgICAgICAgICAgICAgIHF1ZXJ5IFN0YWtlckJ5QWRkcmVzcygkYWRkcmVzczogQWRkcmVzcyEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc3Rha2VyKGFkZHJlc3M6ICRhZGRyZXNzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Rha2VyQWRkcmVzcwogICAgICAgICAgICAgICAgICAgICAgICAgICAgdG90YWxTdGFrZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Rha2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGVnYXRlZE1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGVkRXBvY2gKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyZWF0ZWRUaW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb3dudGltZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9ja2VkVW50aWwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzQWN0aXZlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc09mZmxpbmUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvckluZm8gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3ZWJzaXRlCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGFjdAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvZ29VcmwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGAsCiAgICAgICAgICAgICAgICB2YXJpYWJsZXMoKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGVycm9yKF9lcnJvcikgewogICAgICAgICAgICAgICAgICAgIHRoaXMuZFN0YWtlckJ5QWRkcmVzc0Vycm9yID0gX2Vycm9yLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LAoKICAgICAgICBkYXRhKCkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgZERlbGVnYXRpb25MaXN0UmVjb3Jkc0NvdW50OiAwLAogICAgICAgICAgICAgICAgZFN0YWtlckJ5QWRkcmVzc0Vycm9yOiAnJwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgY29tcHV0ZWQ6IHsKICAgICAgICAgICAgY1N0YWtlcigpIHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnN0YWtlciB8fCB7fTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNTdGFrZXJOYW1lKCkgewogICAgICAgICAgICAgICAgY29uc3Qge3N0YWtlcn0gPSB0aGlzOwoKICAgICAgICAgICAgICAgIHJldHVybiBzdGFrZXIgJiYgc3Rha2VyLnN0YWtlckluZm8gJiYgc3Rha2VyLnN0YWtlckluZm8ubmFtZSA/IHN0YWtlci5zdGFrZXJJbmZvLm5hbWUgOiB0aGlzLiR0KCd2aWV3X3ZhbGlkYXRvcl9saXN0LnVua25vd24nKTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNTdGFrZXJXZWJzaXRlKCkgewogICAgICAgICAgICAgICAgY29uc3Qge3N0YWtlcn0gPSB0aGlzOwoKICAgICAgICAgICAgICAgIHJldHVybiBzdGFrZXIgJiYgc3Rha2VyLnN0YWtlckluZm8gPyBzdGFrZXIuc3Rha2VySW5mby53ZWJzaXRlIHx8IHN0YWtlci5zdGFrZXJJbmZvLmNvbnRhY3QgOiAnJzsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNTdGFrZXJMb2dvVXJsKCkgewogICAgICAgICAgICAgICAgY29uc3Qge3N0YWtlcn0gPSB0aGlzOwoKICAgICAgICAgICAgICAgIHJldHVybiBzdGFrZXIgJiYgc3Rha2VyLnN0YWtlckluZm8gJiYgc3Rha2VyLnN0YWtlckluZm8ubG9nb1VybCA/IHN0YWtlci5zdGFrZXJJbmZvLmxvZ29VcmwgOiAnJzsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNEZWxlZ2F0aW9uSXRlbXMoKSB7CiAgICAgICAgICAgICAgICBjb25zdCB7Y1N0YWtlcn0gPSB0aGlzOwogICAgICAgICAgICAgICAgbGV0IGl0ZW1zID0gW107CgogICAgICAgICAgICAgICAgaWYgKGNTdGFrZXIgJiYgY1N0YWtlci5kZWxlZ2F0aW9ucykgewogICAgICAgICAgICAgICAgICAgIGl0ZW1zID0gY1N0YWtlci5kZWxlZ2F0aW9ucwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBpdGVtczsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIGNMb2FkaW5nKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGFwb2xsby5xdWVyaWVzLnN0YWtlci5sb2FkaW5nOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgY0xvY2tEYXlzKCkgewogICAgICAgICAgICAgICAgY29uc3Qge2NTdGFrZXJ9ID0gdGhpczsKICAgICAgICAgICAgICAgIGNvbnN0IHRzID0gY1N0YWtlciAmJiBjU3Rha2VyLmxvY2tlZFVudGlsID8gcHJlcGFyZVRpbWVzdGFtcChjU3Rha2VyLmxvY2tlZFVudGlsKSA6IDA7CgogICAgICAgICAgICAgICAgcmV0dXJuIHRzID4gMCA/IHBhcnNlSW50KCh0cyAtIERhdGUubm93KCkpIC8gKGRheVMgKiAxMDAwKSwgMTApIDogJy0nOwogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICBvbkRlbGVnYXRpb25MaXN0UmVjb3Jkc0NvdW50KF9udW0pIHsKICAgICAgICAgICAgICAgIHRoaXMuZERlbGVnYXRpb25MaXN0UmVjb3Jkc0NvdW50ID0gX251bTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIFdFSVRvRlRNLAogICAgICAgICAgICB0aW1lc3RhbXBUb0RhdGUsCiAgICAgICAgICAgIGZvcm1hdERhdGUsCiAgICAgICAgICAgIGZvcm1hdEhleFRvSW50LAogICAgICAgICAgICBmb3JtYXROdW1iZXJCeUxvY2FsZSwKICAgICAgICAgICAgbnVtVG9GaXhlZCwKICAgICAgICAgICAgY2xhbXBEb3dudGltZSwKICAgICAgICB9CiAgICB9Cg=="},{"version":3,"sources":["FValidatorDetail.vue"],"names":[],"mappings":";AAmfile":"FValidatorDetail.vue","sourceRoot":"src/layouts","sourcesContent":["<template>\n    <div class=\"f-validator-detail f-data-layout\">\n        <template v-if=\"!dStakerByAddressError\">\n            <f-card>\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label center-v\">{{ $t('view_validator_detail.name') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"cStakerName\">\n                            <div class=\"validator-img\">\n                                <img v-if=\"cStakerLogoUrl\"  :src=\"cStakerLogoUrl\" :alt=\"cStakerName\" class=\"not-fluid\">\n                                <img v-else src=\"/img/next-logo.png\" alt=\"next logo\" class=\"not-fluid\">\n                            </div>\n\n                            {{ cStakerName }}\n\n                            <a v-if=\"cStakerWebsite\" :href=\"cStakerWebsite\" target=\"_blank\" rel=\"nofollow\" class=\"validator-website\">\n                                <icon data=\"@/assets/svg/external-link-alt.svg\"></icon>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.validator_id') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'id' in cStaker\">\n                            {{ cStaker.id | formatHexToInt }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.address') }}</div>\n                    <div class=\"col\">\n                        <div class=\"break-word\">\n                            <router-link :to=\"{name: 'address-detail', params: {id: address}}\">{{ address }}</router-link>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.start_epoch') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'createdEpoch' in cStaker\">\n                            {{ cStaker.createdEpoch | formatHexToInt }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.start_time') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'createdTime' in cStaker\">\n                            {{ formatDate(timestampToDate(formatHexToInt(cStaker.createdTime))) }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.amount_staked') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'stake' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.stake), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.amount_delegated') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'delegatedMe' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.delegatedMe), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.staking_total') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'totalStake' in cStaker\">\n                            {{ formatNumberByLocale(numToFixed(WEIToFTM(cStaker.totalStake), 0)) }} NEXT\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.active') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'isActive' in cStaker\">\n                            <f-yes-no :value=\"cStaker.isActive\" use-colors />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.online') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'isOffline' in cStaker\">\n                            <f-yes-no :value=\"!cStaker.isOffline\" use-colors />\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.downtime') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'downtime' in cStaker\">\n                            {{ clampDowntime(Math.round(formatHexToInt(cStaker.downtime) / 10000000) / 100) }} s\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.locked_until') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'lockedUntil' in cStaker\">\n                            {{ formatDate(timestampToDate(cStaker.lockedUntil)) }}\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"row no-collapse\">\n                    <div class=\"col-4 f-row-label\">{{ $t('view_validator_detail.lock_days') }}</div>\n                    <div class=\"col\">\n                        <div v-show=\"'lockedUntil' in cStaker\">\n                            {{ cLockDays }}\n                        </div>\n                    </div>\n                </div>\n            </f-card>\n\n            <div class=\"f-subsection\">\n                <h2 class=\"h1\">{{ $t('view_validator_detail.delegations') }} <span v-if=\"dDelegationListRecordsCount\" class=\"f-records-count\">({{ dDelegationListRecordsCount }})</span></h2>\n\n                <f-delegation-list\n                    :staker-id=\"cStaker.id\"\n                    @records-count=\"onDelegationListRecordsCount\"\n                />\n            </div>\n        </template>\n        <template v-else>\n            <div class=\"query-error\">{{ dStakerByAddressError }}</div>\n        </template>\n    </div>\n</template>\n\n<script>\n    import FCard from \"../components/core/FCard/FCard.vue\";\n    import gql from 'graphql-tag';\n    import {\n        formatHexToInt,\n        timestampToDate,\n        formatNumberByLocale,\n        numToFixed,\n        clampDowntime,\n        formatDate,\n        prepareTimestamp\n    } from \"../filters.js\";\n    import { WEIToFTM } from \"../utils/transactions.js\";\n    import FDelegationList from \"../data-tables/FDelegationList.vue\";\n    import FYesNo from \"../components/FYesNo.vue\";\n\n    const dayS = 60 * 60 * 24;\n\n    export default {\n        components: {\n            FYesNo,\n            FDelegationList,\n            FCard\n        },\n\n        props: {\n            /** Validator (staker) address. */\n            address: {\n                type: String,\n                required: true,\n                default: ''\n            },\n\n            /** Number of items per page. */\n            itemsPerPage: {\n                type: Number,\n                default: 20\n            }\n        },\n\n        apollo: {\n            staker: {\n                query: gql`\n                    query StakerByAddress($address: Address!) {\n                        staker(address: $address) {\n                            id\n                            stakerAddress\n                            totalStake\n                            stake\n                            delegatedMe\n                            createdEpoch\n                            createdTime\n                            downtime\n                            lockedUntil\n                            isActive\n                            isOffline\n                            validatorInfo {\n                                name\n                                website\n                                contact\n                                logoUrl\n                            }\n                        }\n                    }\n                `,\n                variables() {\n                    return {\n                        address: this.address\n                    }\n                },\n                error(_error) {\n                    this.dStakerByAddressError = _error.message;\n                }\n            }\n        },\n\n        data() {\n            return {\n                dDelegationListRecordsCount: 0,\n                dStakerByAddressError: ''\n            }\n        },\n\n        computed: {\n            cStaker() {\n                return this.staker || {};\n            },\n\n            cStakerName() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo && staker.stakerInfo.name ? staker.stakerInfo.name : this.$t('view_validator_list.unknown');\n            },\n\n            cStakerWebsite() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo ? staker.stakerInfo.website || staker.stakerInfo.contact : '';\n            },\n\n            cStakerLogoUrl() {\n                const {staker} = this;\n\n                return staker && staker.stakerInfo && staker.stakerInfo.logoUrl ? staker.stakerInfo.logoUrl : '';\n            },\n\n            cDelegationItems() {\n                const {cStaker} = this;\n                let items = [];\n\n                if (cStaker && cStaker.delegations) {\n                    items = cStaker.delegations\n                }\n\n                return items;\n            },\n\n            cLoading() {\n                return this.$apollo.queries.staker.loading;\n            },\n\n            cLockDays() {\n                const {cStaker} = this;\n                const ts = cStaker && cStaker.lockedUntil ? prepareTimestamp(cStaker.lockedUntil) : 0;\n\n                return ts > 0 ? parseInt((ts - Date.now()) / (dayS * 1000), 10) : '-';\n            }\n        },\n\n        methods: {\n            onDelegationListRecordsCount(_num) {\n                this.dDelegationListRecordsCount = _num;\n            },\n\n            WEIToFTM,\n            timestampToDate,\n            formatDate,\n            formatHexToInt,\n            formatNumberByLocale,\n            numToFixed,\n            clampDowntime,\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .f-validator-detail {\n        /*padding-top: 16px;*/\n\n        .num-block {\n            h2 {\n                text-align: center;\n                margin-top: 16px;\n                margin-bottom: 4px;\n            }\n\n            .num {\n                text-align: center;\n                font-weight: bold;\n                font-size: $fs48;\n            }\n        }\n\n        > .f-card {\n        }\n\n        .validator-img {\n            margin-inline-end: 8px;\n        }\n    }\n</style>\n"]}]}
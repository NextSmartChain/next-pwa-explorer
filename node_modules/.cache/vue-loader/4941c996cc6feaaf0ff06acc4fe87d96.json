{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/views/DataTablePlayground.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/views/DataTablePlayground.vue","mtime":1657708589818},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/babel-loader/lib/index.js","mtime":1655491285588},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICBpbXBvcnQgRkRhdGFUYWJsZSBmcm9tICIuLi9jb21wb25lbnRzL2NvcmUvRkRhdGFUYWJsZS9GRGF0YVRhYmxlLnZ1ZSI7CiAgICBpbXBvcnQgRlBhZ2luYXRpb24gZnJvbSAiLi4vY29tcG9uZW50cy9GUGFnaW5hdGlvbi52dWUiOwogICAgaW1wb3J0IHtjbG9uZU9iamVjdH0gZnJvbSAiLi4vdXRpbHMvaW5kZXguanMiOwogICAgaW1wb3J0IHNob3J0aWQgZnJvbSAnc2hvcnRpZCc7CgogICAgY29uc3QgY29sdW1ucyA9IFsKICAgICAgICB7CiAgICAgICAgICAgIG5hbWU6ICdudW0nLAogICAgICAgICAgICBsYWJlbDogJ051bScsCiAgICAgICAgICAgIHdpZHRoOiAnNTBweCcKICAgICAgICAgICAgLy8gbWluV2lkdGg6ICczMDBweCcKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ2NvdW50cnlfbmFtZScsCiAgICAgICAgICAgIGxhYmVsOiAnQ291bnRyeSBuYW1lJywKICAgICAgICAgICAgLy8gd2lkdGg6ICcyMDBweCcsCiAgICAgICAgICAgIC8vIG1pbldpZHRoOiAnMjAwcHgnLAogICAgICAgICAgICBvbmVMaW5lTW9kZTogdHJ1ZSwKICAgICAgICAgICAgY3NzOiB7CiAgICAgICAgICAgICAgICB0ZXh0QWxpZ246ICdjZW50ZXInCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ2NvdW50cnlfY29kZScsCiAgICAgICAgICAgIGxhYmVsOiAnQ291bnRyeSBjb2RlJywKICAgICAgICAgICAgd2lkdGg6ICczMDBweCcKICAgICAgICAgICAgLy8gbWluV2lkdGg6ICczMDBweCcKICAgICAgICB9CiAgICBdOwoKICAgIGNvbnN0IGl0ZW1zID0gWwogICAgICAgIHsKICAgICAgICAgICAgY291bnRyeV9uYW1lOiAnQ3plY2ggcmVwdWJsaWMnLAogICAgICAgICAgICBjb3VudHJ5X2NvZGU6ICdjeicKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgY291bnRyeV9uYW1lOiAnU2xvdmFraWEnLAogICAgICAgICAgICBjb3VudHJ5X2NvZGU6ICdzaycsCiAgICAgICAgICAgIGNzczogewogICAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyM4ODgnCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICAgY291bnRyeV9uYW1lOiAnUG9sYW5kJywKICAgICAgICAgICAgY291bnRyeV9jb2RlOiAncGwnCiAgICAgICAgfQogICAgXTsKCiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDUwOyBpKyspIHsKICAgICAgICBpdGVtcy5wdXNoKHsKICAgICAgICAgICAgY291bnRyeV9uYW1lOiBzaG9ydGlkLmdlbmVyYXRlKCksCiAgICAgICAgICAgIGNvdW50cnlfY29kZTogc2hvcnRpZC5nZW5lcmF0ZSgpLnNsaWNlKDIpCiAgICAgICAgfSkKICAgIH0KCiAgICBjb25zdCBpdGVtczIgPSBbCiAgICAgICAgewogICAgICAgICAgICBjb3VudHJ5X25hbWU6ICdEZXV0Y2hsYW5kJywKICAgICAgICAgICAgY291bnRyeV9jb2RlOiAnZGUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAgIGNvdW50cnlfbmFtZTogJ1VTQScsCiAgICAgICAgICAgIGNvdW50cnlfY29kZTogJ3VzJwogICAgICAgIH0KICAgIF07CgogICAgZm9yIChsZXQgaSA9IDAsIGxlbjEgPSBpdGVtcy5sZW5ndGg7IGkgPCBsZW4xOyBpKyspIHsKICAgICAgICBpdGVtc1tpXS5udW0gPSBpOwogICAgfQoKICAgIGV4cG9ydCBkZWZhdWx0IHsKICAgICAgICBjb21wb25lbnRzOiB7CiAgICAgICAgICAgIEZEYXRhVGFibGUsCiAgICAgICAgICAgIEZQYWdpbmF0aW9uCiAgICAgICAgfSwKCiAgICAgICAgZGF0YSgpIHsKICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgIGl0ZW1zOiBjbG9uZU9iamVjdChpdGVtcyksCiAgICAgICAgICAgICAgICBtb2JpbGVWaWV3OiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgY3JlYXRlZCgpIHsKICAgICAgICAgICAgdGhpcy5jb2x1bW5zID0gY29sdW1uczsKICAgICAgICAgICAgLy8gdGhpcy5pdGVtcyA9IGl0ZW1zOwogICAgICAgIH0sCgogICAgICAgIG1vdW50ZWQoKSB7CiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJHJvdXRlKTsKICAgICAgICB9LAoKICAgICAgICBtZXRob2RzOiB7CiAgICAgICAgICAgIG9uUGFnZUNoYW5nZShfZGF0YSkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1BBR0UgQ0hBTkdFZCcsIF9kYXRhKTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIG9uTmV3SXRlbXNDbGljaygpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMgPSBjbG9uZU9iamVjdChpdGVtczIpOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgb25Ob0l0ZW1zQ2xpY2soKSB7CiAgICAgICAgICAgICAgICB0aGlzLml0ZW1zID0gW107CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBvblB1c2hDbGljaygpIHsKICAgICAgICAgICAgICAgIHRoaXMuaXRlbXMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgY291bnRyeV9uYW1lOiAnQXJnZW50aW5hJywKICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X2NvZGU6ICdhcicKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgLy8gdGhpcy5pdGVtcyA9IGl0ZW1zMjsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIG9uUHJlcGVuZENsaWNrKCkgewogICAgICAgICAgICAgICAgdGhpcy5pdGVtcy51bnNoaWZ0KHsKICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X25hbWU6ICdDYW5hZGEnLAogICAgICAgICAgICAgICAgICAgIGNvdW50cnlfY29kZTogJ2NhJwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAvLyB0aGlzLml0ZW1zID0gaXRlbXMyOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgb25VcGRhdGVDbGljaygpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGNoaWxkcmVuWzBdLnVwZGF0ZVJvdygxLCB7CiAgICAgICAgICAgICAgICAgICAgY291bnRyeV9uYW1lOiAnQ2hpbGUnLAogICAgICAgICAgICAgICAgICAgIGNvdW50cnlfY29kZTogJ2NsJywKICAgICAgICAgICAgICAgICAgICBjc3M6IHsKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICcjZmZmJywKICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnZ3JlZW4nCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICBvblVwZGF0ZUNlbGxDbGljaygpIHsKICAgICAgICAgICAgICAgIHRoaXMuJGNoaWxkcmVuWzBdLnVwZGF0ZUNlbGwoMSwgJ2NvdW50cnlfY29kZScsICdVUERBVEVEIENPREUnKTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgIG9uTW9iaWxlVmlld0NsaWNrKCkgewogICAgICAgICAgICAgICAgdGhpcy5tb2JpbGVWaWV3ID0gIXRoaXMubW9iaWxlVmlldzsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0K"},{"version":3,"sources":["DataTablePlayground.vue"],"names":[],"mappings":";AAwfile":"DataTablePlayground.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"narrow-container\">\n        <div class=\"test-controls\">\n            <button @click=\"onNewItemsClick\">Set new items</button>\n            <button @click=\"onNoItemsClick\">No items</button>\n            <button @click=\"onPushClick\">Push item</button>\n            <button @click=\"onPrependClick\">Prepend item</button>\n            <button @click=\"onUpdateClick\">Update item on index 1</button>\n            <button @click=\"onUpdateCellClick\">Update cell on index 1</button>\n            <button @click=\"onMobileViewClick\">Toggle mobile view</button>\n        </div>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :total-items=\"items.length\"\n            :items-per-page=\"20\"\n            :mobile-view=\"mobileView\"\n            height=\"400px\"\n            use-pagination\n            fixed-header\n            class=\"f-data-table-body-bg-color\"\n        >\n            <template v-slot:before-table>\n                <div style=\"text-align: end;padding-bottom: 4px;\">\n                    <h3>Complex data table</h3>\n                    <f-pagination\n                        :total-items=\"items.length\"\n                        :items-per-page=\"20\"\n                        @page-change=\"onPageChange\"\n                    >\n                        <template v-slot:pages=\"{ data }\">\n                            {{ data.currPage }} / {{ data.numPages }} ({{ data.totalItems }})\n                        </template>\n                    </f-pagination>\n                </div>\n            </template>\n\n            <template v-slot:after-table>\n                <div>After table slot</div>\n            </template>\n\n            <template v-slot:column-country_name=\"{ value, column }\">\n                <div v-if=\"column\">\n                    <span class=\"column-label\">{{ column.label }}</span> <span><a href=\"#\">{{ value }}</a></span>\n                </div>\n                <div v-else>\n                    <a href=\"#\">{{ value }}</a>\n                </div>\n            </template>\n\n            <template v-slot:column-country_code=\"{ value, column }\">\n                <div v-if=\"column\">\n                    <span class=\"column-label\">{{ column.label }}</span> {{ value }}\n                </div>\n                <div v-else>\n                    <div class=\"tpl-test\">{{ value }}</div>\n                </div>\n            </template>\n        </f-data-table>\n\n        <h3>Data table with no items</h3>\n        <f-data-table\n            :columns=\"columns\"\n            class=\"f-data-table-body-bg-color\"\n        >\n            <!--            <template v-slot:no-items>No itemo</template>-->\n        </f-data-table>\n\n        <f-data-table\n            :columns=\"columns\"\n            :items=\"items\"\n            :total-items=\"items.length\"\n            :items-per-page=\"20\"\n            fixed-header\n            class=\"f-data-table-body-bg-color\"\n        >\n            <template v-slot:before-table>\n                <h3>Default data table</h3>\n            </template>\n            <template v-slot:after-table>\n                <div>After table slot</div>\n            </template>\n        </f-data-table>\n    </div>\n</template>\n\n<script>\n    import FDataTable from \"../components/core/FDataTable/FDataTable.vue\";\n    import FPagination from \"../components/FPagination.vue\";\n    import {cloneObject} from \"../utils/index.js\";\n    import shortid from 'shortid';\n\n    const columns = [\n        {\n            name: 'num',\n            label: 'Num',\n            width: '50px'\n            // minWidth: '300px'\n        },\n        {\n            name: 'country_name',\n            label: 'Country name',\n            // width: '200px',\n            // minWidth: '200px',\n            oneLineMode: true,\n            css: {\n                textAlign: 'center'\n            }\n        },\n        {\n            name: 'country_code',\n            label: 'Country code',\n            width: '300px'\n            // minWidth: '300px'\n        }\n    ];\n\n    const items = [\n        {\n            country_name: 'Czech republic',\n            country_code: 'cz'\n        },\n        {\n            country_name: 'Slovakia',\n            country_code: 'sk',\n            css: {\n                color: '#fff',\n                backgroundColor: '#888'\n            }\n        },\n        {\n            country_name: 'Poland',\n            country_code: 'pl'\n        }\n    ];\n\n    for (let i = 0; i < 50; i++) {\n        items.push({\n            country_name: shortid.generate(),\n            country_code: shortid.generate().slice(2)\n        })\n    }\n\n    const items2 = [\n        {\n            country_name: 'Deutchland',\n            country_code: 'de'\n        },\n        {\n            country_name: 'USA',\n            country_code: 'us'\n        }\n    ];\n\n    for (let i = 0, len1 = items.length; i < len1; i++) {\n        items[i].num = i;\n    }\n\n    export default {\n        components: {\n            FDataTable,\n            FPagination\n        },\n\n        data() {\n            return {\n                items: cloneObject(items),\n                mobileView: false\n            }\n        },\n\n        created() {\n            this.columns = columns;\n            // this.items = items;\n        },\n\n        mounted() {\n            // console.log(this.$route);\n        },\n\n        methods: {\n            onPageChange(_data) {\n                console.log('PAGE CHANGEd', _data);\n            },\n\n            onNewItemsClick() {\n                this.items = cloneObject(items2);\n            },\n\n            onNoItemsClick() {\n                this.items = [];\n            },\n\n            onPushClick() {\n                this.items.push({\n                    country_name: 'Argentina',\n                    country_code: 'ar'\n                });\n                // this.items = items2;\n            },\n\n            onPrependClick() {\n                this.items.unshift({\n                    country_name: 'Canada',\n                    country_code: 'ca'\n                });\n                // this.items = items2;\n            },\n\n            onUpdateClick() {\n                this.$children[0].updateRow(1, {\n                    country_name: 'Chile',\n                    country_code: 'cl',\n                    css: {\n                        color: '#fff',\n                        backgroundColor: 'green'\n                    }\n                });\n            },\n\n            onUpdateCellClick() {\n                this.$children[0].updateCell(1, 'country_code', 'UPDATED CODE');\n            },\n\n            onMobileViewClick() {\n                this.mobileView = !this.mobileView;\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n    .test-controls {\n        margin-bottom: 1rem;\n\n        button {\n            margin-inline-end: 4px;\n            margin-bottom: 4px;\n        }\n    }\n\n    .tpl-test {\n        color: #fff;\n        background-color: #00B7FF;\n        border-radius: 0.5rem;\n        padding: 0.5rem 1rem;\n    }\n</style>\n"]}]}
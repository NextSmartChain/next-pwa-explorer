{"remainingRequest":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/websites/ex.nextsmartchain.com/src/components/core/FMessage/FMessage.vue?vue&type=style&index=0&id=6d07003e&prod&lang=scss&","dependencies":[{"path":"/mnt/websites/ex.nextsmartchain.com/src/components/core/FMessage/FMessage.vue","mtime":1657708592414},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/css-loader/dist/cjs.js","mtime":1655491291170},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1657708714280},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/postcss-loader/src/index.js","mtime":1655491291810},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/sass-loader/dist/cjs.js","mtime":1657625857833},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/cache-loader/dist/cjs.js","mtime":1655491106804},{"path":"/mnt/websites/ex.nextsmartchain.com/node_modules/vue-loader/lib/index.js","mtime":1657708714280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgJ3N0eWxlJzsK"},{"version":3,"sources":["FMessage.vue"],"names":[],"mappings":";AA8EA","file":"FMessage.vue","sourceRoot":"src/components/core/FMessage","sourcesContent":["<template>\n    <div class=\"f-message\" :class=\"[classes, type]\">\n        <slot name=\"prefix\">\n            <template v-if=\"withIcon\">\n                <icon\n                    v-if=\"type === 'success'\"\n                    data=\"@/assets/svg/message/check-circle.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    aria-hidden=\"true\"\n                />\n                <icon\n                    v-if=\"type === 'error' || type === 'warning'\"\n                    data=\"@/assets/svg/message/exclamation-circle.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    aria-hidden=\"true\"\n                />\n                <icon\n                    v-if=\"type === 'info'\"\n                    data=\"@/assets/svg/message/info-circle.svg\"\n                    width=\"16\"\n                    height=\"16\"\n                    aria-hidden=\"true\"\n                />\n            </template>\n        </slot>\n        <span class=\"f-message-body\"><slot></slot></span>\n        <slot name=\"suffix\"></slot>\n    </div>\n</template>\n\n<script>\nimport { helpersMixin } from '../../../mixins/helpers.js';\n\nexport default {\n    mixins: [helpersMixin],\n\n    props: {\n        /**\n         * Type of message.\n         *\n         * @type {('success' | 'info' | 'warning' | 'error')}\n         */\n        type: {\n            type: String,\n            default: '',\n            required: true,\n            validator: function (_value) {\n                return ['success', 'info', 'warning', 'error'].indexOf(_value) !== -1;\n            },\n        },\n        /** Use icon with message. */\n        withIcon: {\n            type: Boolean,\n            default: false,\n        },\n    },\n\n    computed: {\n        classes() {\n            return {\n                'with-icon': this.withIcon,\n                'prefix-slot': this.hasSlot('prefix'),\n                'suffix-slot': this.hasSlot('suffix'),\n            };\n        },\n    },\n\n    methods: {\n        getMessage() {\n            return this.$slots.default ? this.$slots.default[0].text : '';\n        },\n    },\n};\n</script>\n\n<style lang=\"scss\">\n@import 'style';\n</style>\n"]}]}